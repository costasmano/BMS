ÊÊ` ----------------------------------------------------ÊÊ` User name (OS): Charles MillerÊÊ` Date and time: 07/13/10, 15:39:39ÊÊ` ----------------------------------------------------ÊÊ` Method: ut_SQLDeleteLocalRecordsÊÊ` DescriptionÊÊ` ParametersÊÊ` ----------------------------------------------------ÊÊ` Modified by: Charles Miller (7/8/10)If (False)Mods_OPNToSQLUpgrade ÊÊ`4D Open to SQL conversionÊÊ`Modified by: Charles Miller (8/11/10 11:18:32) ÊÊ`Fix delete bug and alert how $0 is returnedÊÊ`Modified by: Charles Miller (11/4/11 10:31:58)ÊÊ` Modified by: Costas Manousakis-(Designer)-(1/30/14 13:23:07)Mods_2014_01 ÊÊ`ÊÊ`Fixed bug where the parentfield pointer was not the correct field for refIDType=1End if C_LONGINT($RefID_l)C_STRING(80;$RefID_s;$ParentID_s;$LocalID_s)C_POINTER($LocalTable_ptr;$LocalFld_ptr)$LocalTable_ptr:=Table([Activity Log]FileID Local)$LocalFld_ptr:=Field([Activity Log]FileID Local;[Activity Log]FieldID Local)C_BLOB($Data_blb)SET BLOB SIZE($Data_blb;0)C_LONGINT($BlobSize_l;$Compressed_l;$NumRecIDs_l;$i)$BlobSize_l:=BLOB size([Activity Log]Data)COPY BLOB([Activity Log]Data;$Data_blb;0x0000;0x0000;$BlobSize_l)BLOB PROPERTIES([Activity Log]Data;$Compressed_l)If ($Compressed_l#Is not compressed )EXPAND BLOB($Data_blb)End if C_LONGINT($NumFlds_l;$Offset_l;$Loop_l;$FieldNumber_l)C_LONGINT($NumRecIDs)ARRAY STRING(80;$RecIDToDelete_as;0)ARRAY LONGINT($RecIDToDelete_al;0)BLOB TO VARIABLE($Data_blb;$RecIDToDelete_as)$NumRecIDs_l:=Size of array($RecIDToDelete_as)ARRAY LONGINT($RecIDToDelete_al;0)ARRAY LONGINT($RecIDToDelete_al;$NumRecIDs_l)For ($i;1;$NumRecIDs_l)If ([Activity Log]RefIDType=3)$RecIDToDelete_as{$i}:=aDblLookUpDest ([Activity Log]File Number;$RecIDToDelete_as{$i};"here";×Destination)Else $RecIDToDelete_as{$i}:=aDblLookUpDest ([Activity Log]FileID Local;$RecIDToDelete_as{$i};"here";×Destination)End if $RecIDToDelete_al{$i}:=Num($RecIDToDelete_as{$i})End for ut_Message ("Searching for "+String($NumRecIDs_l)+" records in table "+Table name($LocalTable_ptr)+"..."+×sCR)If ([Activity Log]RefIDType=0)QUERY WITH ARRAY($LocalFld_ptr->;$RecIDToDelete_as)Else QUERY WITH ARRAY($LocalFld_ptr->;$RecIDToDelete_al)End if ARRAY STRING(80;$RecIDToDelete_as;0)ARRAY LONGINT($RecIDToDelete_al;0)C_POINTER($ParentField_ptr)Case of : ([Activity Log]RefIDType=0): ([Activity Log]RefIDType=1)$ParentID_s:=[Activity Log]Parent ID$RefID_l:=Num([Activity Log]Parent ID)$ParentField_ptr:=Field([Activity Log]FileID Local;[Activity Log]FieldID Parent)If ([Activity Log]Type Parent=0)QUERY SELECTION($LocalTable_ptr->;$ParentField_ptr->=[Activity Log]Parent ID)Else QUERY SELECTION($LocalTable_ptr->;$ParentField_ptr->=$RefID_l)End if : ([Activity Log]RefIDType=2)$RefID_s:=aDblLookUpDest ([Activity Log]FileID Parent;[Activity Log]Parent ID;"Here";×Destination)$ParentField_ptr:=Field([Activity Log]FileID Local;[Activity Log]FieldID Parent)If ([Activity Log]Type Parent=0)QUERY SELECTION($LocalTable_ptr->;$ParentField_ptr->=$RefID_s)Else $RefID_l:=Num($RefID_s)QUERY SELECTION($LocalTable_ptr->;$ParentField_ptr->=$RefID_l)End if $ParentID_s:=$RefID_s: ([Activity Log]RefIDType=3)$RefID_s:=aLookUpDest ([Activity Log]FileID Parent;[Activity Log]Parent ID;"here")ÊÊ`Can not rely on the destination idÊÊ`Danger!             If ($RefID_s="")ÊÊ`Assume remote and local ids match!$RefID_s:=[Activity Log]Parent IDEnd if $RefID_l:=Num($RefID_s)$LocalFld_ptr:=Field([Activity Log]FileID Local;[Activity Log]FieldID Parent)If ([Activity Log]Type Parent=0)QUERY SELECTION($LocalTable_ptr->;$LocalFld_ptr->=$RefID_s)Else QUERY SELECTION($LocalTable_ptr->;$LocalFld_ptr->=$RefID_l)End if $ParentID_s:=$RefID_sEnd case ut_Message ("Found "+String(Records in selection($LocalTable_ptr->))+" Records.."+×sCR)If (Records in selection($LocalTable_ptr->)<=$NumRecIDs_l)$NumRecIDs_l:=Records in selection($LocalTable_ptr->)If ([Activity Log]RefIDType=0)SELECTION TO ARRAY($LocalFld_ptr->;$RecIDToDelete_as)Else SELECTION TO ARRAY($LocalFld_ptr->;$RecIDToDelete_al)ARRAY STRING(80;$RecIDToDelete_as;$NumRecIDs_l)For ($i;1;$NumRecIDs_l)$RecIDToDelete_as{$i}:=String($RecIDToDelete_al{$i})End for End if SET BLOB SIZE([Activity Log]Data;0)VARIABLE TO BLOB($RecIDToDelete_as;[Activity Log]Data)SET BLOB SIZE([Activity Log]Old Data;0)VARIABLE TO BLOB($RecIDToDelete_as;[Activity Log]Old Data)C_LONGINT($Count_l)$Count_l:=0If (Records in selection($LocalTable_ptr->)=0)SaveActivityLogRecord_b:=FalseElse Repeat DELETE SELECTION($LocalTable_ptr->)If (Records in set("LockedSet")>0)IDLEDELAY PROCESS(Current process;60)$Count_l:=$Count_l+1USE SET("LockedSet")End if Until ($Count_l>10)Ê|Ê(Records in set("LockedSet")=0)If (Records in set("LockedSet")>0)ut_Message ("Some records in table "+Table name($LocalTable_ptr)+" are locked. Canceling Deletion.."+×sCR)DeletionOK_b:=FalseElse ut_Message ("Deleted "+String($NumRecIDs_l)+" Records in table "+Table name($LocalTable_ptr)+" .."+×sCR)DeletionOK_b:=True[Activity Log]Parent ID:=$ParentID_sSAVE RECORD([Activity Log])End if End if Else DataRefernceError_b:=Trueut_Message ("Data reference error! Data ignored!"+×sCR)End if If (4DError_b)C_BOOLEAN($OriginalonScreen_b)$OriginalonScreen_b:=vbOnScreenMessagevbOnScreenMessage:=Falseut_SQLWriteErrorsToLog ("Act Log error in "+Current method name+"  -ID"+String([Activity Log]RefID)+×sCR)vbOnScreenMessage:=$OriginalonScreen_bEnd if ARRAY STRING(80;$RecIDToDelete_as;0)ARRAY LONGINT($RecIDToDelete_al;0)