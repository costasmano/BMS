ÊÊ`----------------------------------------------------ÊÊ`User name (OS): Charles MillerÊÊ`Date and time: 10/01/13, 16:43:57ÊÊ`----------------------------------------------------ÊÊ`Method: maximo_UpdateMaximoÊÊ`DescriptionÊÊ`ÊÊ` ParametersÊÊ` ----------------------------------------------------If (False)Mods_2013_10 ÊÊ`r001 ` ÊÊ`Modified by: Charles Miller (10/1/13 16:43:58)End if READ ONLY(*)InitProcessVar InitPers QUERY([Parameters];[Parameters]ParamCode="max_ExclDistricts")ARRAY TEXT($ExclDistricts_atxt;0)ut_TextToArray ([Parameters]Description;->$ExclDistricts_atxt;",")QUERY([Parameters];[Parameters]ParamCode="max_ExclInspType")ARRAY TEXT($ExclInspectionTypes_atxt;0)ut_TextToArray ([Parameters]Description;->$ExclInspectionTypes_atxt;",")QUERY([Parameters];[Parameters]ParamCode="max_ExclBridgeCat8")ARRAY TEXT($ExclBridgeCat_atxt;0)ut_TextToArray ([Parameters]Description;->$ExclBridgeCat_atxt;",")C_DATE($StartReview_d)QUERY([Parameters];[Parameters]ParamCode="max_DBIEStartDate")$StartReview_d:=Date([Parameters]Description)C_LONGINT($INSPID_L;$FindPosition_L;$Size_L;$LastActivityREFID_L;$TableNumber_L)C_TEXT($BIN_txt;$TeamLeader_txt)C_DATE($InspDate_d)C_TEXT($PFlag_txt)C_BOOLEAN($OkToProceed_b)QUERY([Parameters];[Parameters]ParamCode="max_LastActLog")If (ut_LoadRecord (->[Parameters];5))$LastActivityREFID_L:=Num([Parameters]Value)C_LONGINT($LastActRefIDProcessed_L)$LastActRefIDProcessed_L:=0ARRAY LONGINT($REF_TableIDs_aL;0)ARRAY LONGINT($REF_SFTableIDs_aL;0)ARRAY LONGINT($REF_ESTableIDs_aL;0)$TableNumber_L:=Table(->[Inspections])ARRAY LONGINT($ALREFIDs_aL;0)Begin SQLselect cast([Activity Log].[Local ID] as int) ,[Activity Log].[RefID] from  [Activity Log]where [Activity Log].[FileID Local] =:$TableNumber_Land [Activity Log].[RefID] >= :$LastActivityREFID_Lorder by 2 ASCinto :$REF_TableIDs_aL,:$ALREFIDs_aL;End SQL$LastActRefIDProcessed_L:=$ALREFIDs_aL{Size of array($ALREFIDs_aL)}SET QUERY DESTINATION(Into set ;"$INSLogSet")QUERY WITH ARRAY([Inspections]InspID;$REF_TableIDs_aL)SET QUERY DESTINATION(Into current selection )$TableNumber_L:=Table(->[Standard Photos])Begin SQLselect cast([Activity Log].[Local ID] as int) from  [Activity Log]where [Activity Log].[FileID Local] =:$TableNumber_Land [Activity Log].[RefID] >= :$LastActivityREFID_Land  [Activity Log].[RefID] <= :$LastActRefIDProcessed_Linto :$REF_SFTableIDs_aL;End SQLSET QUERY DESTINATION(Into set ;"$STPLogSet")QUERY WITH ARRAY([Standard Photos]StdPhotoID;$REF_SFTableIDs_aL)SET QUERY DESTINATION(Into current selection )$TableNumber_L:=Table(->[ElementsSafety])Begin SQLselect cast([Activity Log].[Local ID] as int) from  [Activity Log]where [Activity Log].[FileID Local] =:$TableNumber_Land [Activity Log].[RefID] >= :$LastActivityREFID_Land  [Activity Log].[RefID] <= :$LastActRefIDProcessed_Linto :$REF_ESTableIDs_aL;End SQLSET QUERY DESTINATION(Into set ;"$ESLogSet")QUERY WITH ARRAY([ElementsSafety]ElmSafetyID;$REF_ESTableIDs_aL)SET QUERY DESTINATION(Into current selection )$OkToProceed_b:=ut_LoadSQLConnectionInfo ("MAXDEV")If (Not($OkToProceed_b))ut_CreateOrUpdateSQLConnectionD ("MAXDEV")End if C_LONGINT($Loop_L;$ElementLoop_L;$StdPhotLoop_L)Compiler_maximo SQL LOGIN("ODBC:"+[SQL_Connections]SQL_OBDCName_s;[SQL_Connections]SQL_UserName_s;[SQL_Connections]SQL_Password_s)C_TEXT($SQLStatmnt_txt)ARRAY LONGINT($MaxOurInspectionIDS_aL;0)SQL EXECUTE("Select inspid from Inspections";$MaxOurInspectionIDS_aL)While (Not(SQL End selection))SQL LOAD RECORD(SQL All Records )End while SQL CANCEL LOADSET QUERY DESTINATION(Into set ;"$MaximoSet")QUERY([Inspections];[Inspections]UpdateMaximo_L>0)USE SET("$MaximoSet")SET QUERY DESTINATION(Into current selection )ARRAY LONGINT($UpdateMaximoGT0_aL;0)ARRAY BOOLEAN($Processed_ab;0)ARRAY BOOLEAN($NotMaximoUpdate_ab;0)$Size_L:=Records in selection([Inspections])SELECTION RANGE TO ARRAY(1;$Size_L;[Inspections]InspID;$UpdateMaximoGT0_aL)CLEAR VARIABLE($Processed_ab)ARRAY BOOLEAN($Processed_ab;$Size_L)CLEAR VARIABLE($NotMaximoUpdate_ab)ARRAY BOOLEAN($NotMaximoUpdate_ab;$Size_L)USE SET("$INSLogSet")CLEAR SET("$INSLogSet")SET QUERY DESTINATION(Into set ;"$InspApprovedSet")QUERY SELECTION([Inspections];[Inspections]InspReviewed=BMS Approved )SET QUERY DESTINATION(Into current selection )USE SET("$InspApprovedSet")DIFFERENCE("$MaximoSet";"$InspApprovedSet";"$InspApprovedSet")ARRAY LONGINT($ApprovedInpectionIds_aL;0)USE SET("$InspApprovedSet")ARRAY LONGINT($ApprovedInpectionIds_aL;Records in selection([Inspections]))SELECTION RANGE TO ARRAY(1;Records in selection([Inspections]);[Inspections]InspID;$ApprovedInpectionIds_aL)C_LONGINT($FindInArrayPosition_L)For ($Loop_L;1;Size of array($UpdateMaximoGT0_aL))$FindInArrayPosition_L:=Find in array($ApprovedInpectionIds_aL;$UpdateMaximoGT0_aL{$Loop_L})If ($FindInArrayPosition_L>0)Else $NotMaximoUpdate_ab{$Loop_L}:=TrueEnd if End for C_BOOLEAN($NewMaximoInsection_b)QUERY WITH ARRAY([Inspections]InspID;$UpdateMaximoGT0_aL)C_STRING(50;$TeamLeader_s;$BIN_s)For ($Loop_L;1;Records in selection([Inspections]))GOTO SELECTED RECORD([Inspections];$Loop_L)If (ut_LoadRecord (->[Inspections];5))QUERY([Bridge MHD NBIS];[Bridge MHD NBIS]BIN=[Inspections]BIN)Case of : (Find in array($ExclDistricts_atxt;[Bridge MHD NBIS]InspResp)>0): (Find in array($ExclBridgeCat_atxt;[Bridge MHD NBIS]Item8 BridgeCat)>0): (Find in array($ExclInspectionTypes_atxt;[Inspections]Insp Type)>0): ([Inspections]InspDBIEApprDate<$StartReview_d)Else $BIN_s:="D"+String(Num([Bridge MHD NBIS]Item2))+"-"+[Bridge MHD NBIS]BDEPT+"-"+[Bridge MHD NBIS]BIN$INSPID_L:=[Inspections]InspID$InspDate_d:=[Inspections]Insp DatePERS_GetInfo ([Inspections]TeamLeader;"LASTNAMEFI";->$TeamLeader_txt)$TeamLeader_txt:=Replace string($TeamLeader_txt;"'";"")$TeamLeader_s:=Substring($TeamLeader_txt;1;50)$FindPosition_L:=Find in array($MaxOurInspectionIDS_aL;$INSPID_L)$PFlag_txt:="N"If ($FindPosition_L>0)$NewMaximoInsection_b:=FalseDELETE FROM ARRAY($MaxOurInspectionIDS_aL;$FindPosition_L;1)Else $NewMaximoInsection_b:=TrueSQL EXECUTE("insert into inspections (inspectionsid, inspid, BIN, INSPDATE, TEAMLEADER) values ( inspectionsidseq.nextval, :$INSPID_L, :$BIN_s, :$InspDate_d, :$TeamLeader_s) ; ")SQL CANCEL LOADEnd if ARRAY LONGINT($ElementIDS_aL;0)SQL EXECUTE("Select ELMSAFETYID from ELEMENTSSAFETY where INSPID = :$INSPID_L ";$ElementIDS_aL)While (Not(SQL End selection))SQL LOAD RECORD(SQL All Records )End while SQL CANCEL LOADSET QUERY DESTINATION(Into set ;"$ESSafetySet")QUERY([ElementsSafety];[ElementsSafety]InspID=$INSPID_L)SET QUERY DESTINATION(Into current selection )If ($NewMaximoInsection_b)Else $FindPosition_L:=Find in array($UpdateMaximoGT0_aL;$INSPID_L)If ($FindPosition_L>0)If ($NotMaximoUpdate_ab{$FindPosition_L})INTERSECTION("$ESLogSet";"$ESSafetySet";"$ESSafetySet")End if End if End if USE SET("$ESSafetySet")C_STRING(100;$ESDesc_s)C_STRING(50;$ESDef_s;$ESPrit_s)C_TEXT($ESComm_txt)C_LONGINT($ESID_L;$ElementDictPos_l)For ($ElementLoop_L;1;Records in selection([ElementsSafety]))GOTO SELECTED RECORD([ElementsSafety];$ElementLoop_L)$FindPosition_L:=Find in array($REF_ESTableIDs_aL;[ElementsSafety]ElmSafetyID)If ($FindPosition_L>0)DELETE FROM ARRAY($REF_ESTableIDs_aL;$FindPosition_L)End if $ESID_L:=[ElementsSafety]ElmSafetyID$ESPrit_s:=[ElementsSafety]Priority$ESDef_s:=[ElementsSafety]Deficiency$FindPosition_L:=Find in array($ElementIDS_aL;$ESID_L)$PFlag_txt:="N"If (Length([ElementsSafety]Description)>0)$ESDesc_s:=[ElementsSafety]DescriptionElse $ElementDictPos_l:=Find in array(×ELMTDICT_ELNum_ai;[ElementsSafety]ElementNo)$ESDesc_s:=×ELMTDICT_Txt_as{$ElementDictPos_l}End if $ESComm_txt:=Fn_GetTextBlob ([ElementsSafety]ElmComments)$PFlag_txt:="N"If ($FindPosition_L>0)DELETE FROM ARRAY($ElementIDS_aL;$FindPosition_L;1)Begin SQLupdate ELEMENTSSAFETYset DESCRIPTION = :$ESDesc_s, COMMENTS = :$ESComm_txt,DEFICIENCY = :$ESDef_s,PRIORITY = :$ESPrit_sPROCESSED = :$PFlag_txtwhere ELMSAFETYID = :$ESID_L;End SQLElse SQL EXECUTE("insert into ELEMENTSSAFETY (ELEMENTSSAFETYID, DESCRIPTION, INSPID, COMMENTS, DEFICIENCY, PRIORITY, ELMSAFETYID, PROCESSED ) values (ELEMENTSSAFETYIDseq.nextval, :$ESDesc_s, :$INSPID_L, :$ESComm_txt, :$ESDef_s, :$ESPrit_s, :$ESID_L, :$PFlag_txt); ")SQL CANCEL LOADEnd if End for If (Size of array($ElementIDS_aL)>0)ÊÊ`there are elements in maximo that we do not haveÊÊ`do we need to delete themEnd if ARRAY LONGINT($StandardPhotoIDS_aL;0)SQL EXECUTE("Select STANDARDPHOTOID from STANDARDPHOTOS where INSPID = :$INSPID_L ";$StandardPhotoIDS_aL)While (Not(SQL End selection))SQL LOAD RECORD(SQL All Records )End while SQL CANCEL LOADSET QUERY DESTINATION(Into set ;"$INSPhotSet")QUERY([Standard Photos];[Standard Photos]InspID=$INSPID_L)SET QUERY DESTINATION(Into current selection )If ($NewMaximoInsection_b)Else $FindPosition_L:=Find in array($UpdateMaximoGT0_aL;$INSPID_L)If ($FindPosition_L>0)If ($NotMaximoUpdate_ab{$Loop_L})INTERSECTION("$STPLogSet";"$INSPhotSet";"$INSPhotSet")End if End if End if USE SET("$INSPhotSet")C_STRING(100;$StdPhotoDesciption_s)C_BLOB($StdPhotoPicture_blb)C_LONGINT($StdPhotoID_L)For ($StdPhotLoop_L;1;Records in selection([Standard Photos]))GOTO SELECTED RECORD([Standard Photos];$StdPhotLoop_L)$FindPosition_L:=Find in array($REF_SFTableIDs_aL;[Standard Photos]StdPhotoID)If ($FindPosition_L>0)DELETE FROM ARRAY($REF_SFTableIDs_aL;$FindPosition_L)End if $StdPhotoID_L:=[Standard Photos]StdPhotoIDCase of : ([Standard Photos]PictType=BMS Photo )$StdPhotoDesciption_s:="Photo ": ([Standard Photos]PictType=BMS Sketch )$StdPhotoDesciption_s:="Sketch ": ([Standard Photos]PictType=BMS Chart )$StdPhotoDesciption_s:="Chart "Else $StdPhotoDesciption_s:="Unknown "End case $StdPhotoDesciption_s:=$StdPhotoDesciption_s+String([Standard Photos]SeqNum)$FindPosition_L:=Find in array($StandardPhotoIDS_aL;$StdPhotoID_L)$PFlag_txt:="N"PICTURE TO BLOB([Standard Photos]Std Photo;$StdPhotoPicture_blb;"JPEG")$PFlag_txt:="N"If ($FindPosition_L>0)DELETE FROM ARRAY($StandardPhotoIDS_aL;$FindPosition_L;1)Begin SQLupdate set DESCRIPTION = :$StdPhotoDesciption_s,STANDARDPHOTO = :$StdPhotoPicture_blb, PROCESSED = :$PFlag_txtWHERE STANDARDPHOTOID = $StdPhotoID_L;End SQLElse SQL EXECUTE("insert into STANDARDPHOTOS (STANDARDPHOTOSID, DESCRIPTION, INSPID, STANDARDPHOTO, STANDARDPHOTOID, PROCESSED ) values (STANDARDPHOTOSIDseq.nextval, :$StdPhotoDesciption_s, :$INSPID_L, :$StdPhotoPicture_blb , :$StdPhotoID_L,"+" :$PFlag_txt); ")SQL CANCEL LOADEnd if End for If (Size of array($StandardPhotoIDS_aL)>0)ÊÊ`there are elements in maximo that we do not haveÊÊ`do we need to delete themEnd if [Inspections]UpdateMaximo_L:=2[Inspections]UpdateMaximo_d:=Current dateSAVE RECORD([Inspections])End case UNLOAD RECORD([Inspections])End if End for If (Size of array($REF_ESTableIDs_aL)>0)ARRAY LONGINT($ElementIDS_aL;0)SQL EXECUTE("Select ELMSAFETYID from ELEMENTSSAFETY";$ElementIDS_aL)While (Not(SQL End selection))SQL LOAD RECORD(SQL All Records )End while SQL CANCEL LOADQUERY WITH ARRAY([ElementsSafety]ElmSafetyID;$REF_ESTableIDs_aL)For ($ElementLoop_L;1;Records in selection([ElementsSafety]))GOTO SELECTED RECORD([ElementsSafety];$ElementLoop_L)QUERY([Inspections];[Inspections]InspID=[ElementsSafety]InspID)QUERY([Bridge MHD NBIS];[Bridge MHD NBIS]BIN=[Inspections]BIN)Case of : (Find in array($UpdateMaximoGT0_aL;[ElementsSafety]InspID)>0): (Find in array($ExclDistricts_atxt;String(Num([Bridge MHD NBIS]InspResp)))>0): (Find in array($ExclBridgeCat_atxt;[Bridge MHD NBIS]Item8 BridgeCat)>0): (Find in array($ExclInspectionTypes_atxt;[Inspections]Insp Type)>0): ([Inspections]InspDBIEApprDate<$StartReview_d)Else $ESID_L:=[ElementsSafety]ElmSafetyID$ESPrit_s:=[ElementsSafety]Priority$ESDef_s:=[ElementsSafety]Deficiency$FindPosition_L:=Find in array($ElementIDS_aL;$ESID_L)$PFlag_txt:="N"If (Length([ElementsSafety]Description)>0)$ESDesc_s:=[ElementsSafety]DescriptionElse $ElementDictPos_l:=Find in array(×ELMTDICT_ELNum_ai;[ElementsSafety]ElementNo)$ESDesc_s:=×ELMTDICT_Txt_as{$ElementDictPos_l}End if $ESComm_txt:=Fn_GetTextBlob ([ElementsSafety]ElmComments)$PFlag_txt:="N"If ($FindPosition_L>0)DELETE FROM ARRAY($ElementIDS_aL;$FindPosition_L;1)Begin SQLupdate ELEMENTSSAFETYset DESCRIPTION = :$ESDesc_s, COMMENTS = :$ESComm_txt,DEFICIENCY = :$ESDef_s,PRIORITY = :$ESPrit_sPROCESSED = :$PFlag_txtwhere ELMSAFETYID = :$ESID_L;End SQLElse SQL EXECUTE("insert into ELEMENTSSAFETY (ELEMENTSSAFETYID, DESCRIPTION, INSPID, COMMENTS, DEFICIENCY, PRIORITY, ELMSAFETYID, PROCESSED ) values (ELEMENTSSAFETYIDseq.nextval, :$ESDesc_s, :$INSPID_L, :$ESComm_txt, :$ESDef_s, :$ESPrit_s, :$ESID_L, :$PFlag_txt); ")SQL CANCEL LOADEnd if End case End for End if If (Size of array($REF_SFTableIDs_aL)>0)QUERY WITH ARRAY([Standard Photos]StdPhotoID;$REF_SFTableIDs_aL)SQL EXECUTE("Select STANDARDPHOTOID from STANDARDPHOTOS ";$StandardPhotoIDS_aL)While (Not(SQL End selection))SQL LOAD RECORD(SQL All Records )End while SQL CANCEL LOADFor ($StdPhotLoop_L;1;Records in selection([Standard Photos]))GOTO SELECTED RECORD([Standard Photos];$StdPhotLoop_L)QUERY([Inspections];[Inspections]InspID=[Standard Photos]InspID)QUERY([Bridge MHD NBIS];[Bridge MHD NBIS]BIN=[Inspections]BIN)Case of : (Find in array($UpdateMaximoGT0_aL;[ElementsSafety]InspID)>0): (Find in array($ExclDistricts_atxt;String(Num([Bridge MHD NBIS]InspResp)))>0): (Find in array($ExclBridgeCat_atxt;[Bridge MHD NBIS]Item8 BridgeCat)>0): (Find in array($ExclInspectionTypes_atxt;[Inspections]Insp Type)>0): ([Inspections]InspDBIEApprDate<$StartReview_d)Else $FindPosition_L:=Find in array($StandardPhotoIDS_aL;[Standard Photos]StdPhotoID)$StdPhotoID_L:=[Standard Photos]StdPhotoIDCase of : ([Standard Photos]PictType=BMS Photo )$StdPhotoDesciption_s:="Photo ": ([Standard Photos]PictType=BMS Sketch )$StdPhotoDesciption_s:="Sketch ": ([Standard Photos]PictType=BMS Chart )$StdPhotoDesciption_s:="Chart "Else $StdPhotoDesciption_s:="Unknown "End case $StdPhotoDesciption_s:=$StdPhotoDesciption_s+String([Standard Photos]SeqNum)$FindPosition_L:=Find in array($StandardPhotoIDS_aL;$StdPhotoID_L)$PFlag_txt:="N"PICTURE TO BLOB([Standard Photos]Std Photo;$StdPhotoPicture_blb;"JPEG")$PFlag_txt:="N"If ($FindPosition_L>0)DELETE FROM ARRAY($StandardPhotoIDS_aL;$FindPosition_L;1)Begin SQLNEED TO DO THE SAME HERE AS IN ELEMENTSSAFETY TO UPDATE THE REMOTEBTW HOW DO YOu PUT COMMENTS IN A BEGINE SQL/END SQL group?End SQLElse SQL EXECUTE("insert into STANDARDPHOTOS (STANDARDPHOTOSID, DESCRIPTION, INSPID, STANDARDPHOTO, STANDARDPHOTOID, PROCESSED ) values (STANDARDPHOTOSIDseq.nextval, :$StdPhotoDesciption_s, :$INSPID_L, :$StdPhotoPicture_blb , :$StdPhotoID_L,"+" :$PFlag_txt); ")SQL CANCEL LOADEnd if End case End for End if SQL LOGOUT[Parameters]Value:=String($LastActRefIDProcessed_L)SAVE RECORD([Parameters])UNLOAD RECORD([Parameters])End if ÊÊ`End maximo_UpdateMaximo