  `----------------------------------------------------  `User name (OS): Charles Miller  `Date and time: 06/20/13, 13:15:11  `----------------------------------------------------  `Method: INSP_DuplicateInventoryPhotos  `Description  `  ` Parameters  ` ----------------------------------------------------If (False)Mods_2013_06   `r001 ` Add code to alow for add, delete and duplicate   `[InventoryPhotoInsp] and [InventoryPhotos]  `Modified by: Charles Miller (6/20/13 13:15:13)Mods_2013_08   `r001 ` Add confirm to allow designer to either duplicate or blank out pictures  `Modified by: Charles Miller (8/15/13 14:27:06)End if C_BOOLEAN($InTransaction_B)$row_l:=Records in set("LBSetInvInsp")C_LONGINT($row_l;$column_l;$Select_L)If ($row_l>0)GET LISTBOX CELL POSITION(*;"InventoryPhotos";$column_l;$row_l)Else $row_l:=0End if If ($row_l<1) | ($row_l>Records in selection([InventoryPhotoInsp]))INPUT FORM([InventoryPhotoInsp];"Input")ADD RECORD([InventoryPhotoInsp];*)Else ARRAY TEXT($PopUpChoices_atxt;0)ARRAY TEXT($PopUpChoices_atxt;2)$PopUpChoices_atxt{1}:="Add"$PopUpChoices_atxt{2}:="Duplicate"C_TEXT($currUser_txt)$currUser_txt:=◊CurrentUser_NameGOTO SELECTED RECORD([InventoryPhotoInsp];$row_l)If ($currUser_txt="Designer")ButtonpopupText:=ButtonpopupText+"Delete;"APPEND TO ARRAY($PopUpChoices_atxt;"Delete")End if $Select_L:=Pop up menu(ButtonpopupText)Case of : ($PopUpChoices_atxt{$Select_L}="Duplicate")  `DuplicateIf (Not(In transaction))$InTransaction_B:=FalseSTART TRANSACTIONElse $InTransaction_B:=TrueEnd if ARRAY POINTER(ptr_Changes;0;0)InitChangeStack (1)QUERY([InventoryPhotos];[InventoryPhotos]InvPhotoInsp_ID=[InventoryPhotoInsp]InvPhotoInspID_L)ARRAY LONGINT($InventoryPhotoRecordNo_aL;0)LONGINT ARRAY FROM SELECTION([InventoryPhotos];$InventoryPhotoRecordNo_aL)DUPLICATE RECORD([InventoryPhotoInsp])Inc_Sequence ("InventoryPhotoInsp";->[InventoryPhotoInsp]InvPhotoInspID_L)LogNewRecord (->[Bridge MHD NBIS]BIN;->[InventoryPhotoInsp]BIN;->[InventoryPhotoInsp]InvPhotoInspID_L;1;"InventoryPhotoInsp")C_BOOLEAN($DuplicatePictures_b)$DuplicatePictures_b:=FalseIf (User in group($currUser_txt;"Design Access Group"))CONFIRM("Do you want to make exact duplicate or create empty pictures?";"Exact Duplicate";"Blank")$DuplicatePictures_b:=(OK=1)End if If ($DuplicatePictures_b)Else [InventoryPhotoInsp]InvPhotoDate_D:=Current date(*)[InventoryPhotoInsp]TeamLeader_I:=0[InventoryPhotoInsp]TeamMember_I:=0[InventoryPhotoInsp]Approved_I:=0[InventoryPhotoInsp]ApproveDate_D:=!00/00/00![InventoryPhotoInsp]Complete_B:=False[InventoryPhotoInsp]ApproveComments_txt:=""End if PushChange (1;->[InventoryPhotoInsp]InvPhotoDate_D)PushChange (1;->[InventoryPhotoInsp]ApproveComments_txt)PushChange (1;->[InventoryPhotoInsp]Approved_I)PushChange (1;->[InventoryPhotoInsp]ApproveDate_D)PushChange (1;->[InventoryPhotoInsp]BIN)PushChange (1;->[InventoryPhotoInsp]Complete_B)PushChange (1;->[InventoryPhotoInsp]OrientationNS_b)PushChange (1;->[InventoryPhotoInsp]TeamLeader_I)PushChange (1;->[InventoryPhotoInsp]TeamMember_I)C_LONGINT($NewID_L)$NewID_L:=[InventoryPhotoInsp]InvPhotoInspID_LFlushGrpChgs (1;->[Bridge MHD NBIS]BIN;->[InventoryPhotoInsp]BIN;->[InventoryPhotoInsp]InvPhotoInspID_L;1)SAVE RECORD([InventoryPhotoInsp])C_LONGINT($Loop_L)For ($Loop_L;1;Size of array($InventoryPhotoRecordNo_aL))GOTO RECORD([InventoryPhotos];$InventoryPhotoRecordNo_aL{$Loop_L})DUPLICATE RECORD([InventoryPhotos])Inc_Sequence ("InventoryPhoto";->[InventoryPhotos]InvPhoto_ID)[InventoryPhotos]InvPhotoInsp_ID:=$NewID_LIf ($DuplicatePictures_b)Else SET BLOB SIZE([InventoryPhotos]InvPhoto_X;0)End if LogNewRecord (->[InventoryPhotoInsp]InvPhotoInspID_L;->[InventoryPhotos]InvPhotoInsp_ID;->[InventoryPhotos]InvPhoto_ID;2;"InventoryPhoto")InitChangeStack (2)PushChange (2;->[InventoryPhotos]PhotoDescr_txt)PushChange (2;->[InventoryPhotos]InvPhoto_X)PushChange (2;->[InventoryPhotos]Sequence_I)FlushGrpChgs (2;->[InventoryPhotoInsp]InvPhotoInspID_L;->[InventoryPhotos]InvPhotoInsp_ID;->[InventoryPhotos]InvPhoto_ID;2)SAVE RECORD([InventoryPhotos])End for UNLOAD RECORD([InventoryPhotos])UNLOAD RECORD([InventoryPhotoInsp])VALIDATE TRANSACTIONIf ($InTransaction_B)START TRANSACTIONEnd if : ($PopUpChoices_atxt{$Select_L}="Add")INPUT FORM([InventoryPhotoInsp];"Input")ADD RECORD([InventoryPhotoInsp];*): ($PopUpChoices_atxt{$Select_L}="Delete")INV_DeleteInsp (False)End case ARRAY POINTER(ptr_Changes;0;0)End if INV_GetBINInventoryPhotos ([Bridge MHD NBIS]BIN)  `End INSP_DuplicateInventoryPhotos