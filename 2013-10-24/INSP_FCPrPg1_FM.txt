  ` Method: INSP_FCPrPg1_FM  ` Description  ` Form Method for the FC page 1 form  ` Copied from Form method  ` Parameters  `$1 : $REMARKS_NUMBER - optional default is 5  ` ----------------------------------------------------If (False)  ` ----------------------------------------------------  ` User name (OS): costasmanousakis  ` User name (4D): Designer  ` Date and time: 04/10/07, 11:30:40  ` ----------------------------------------------------  ` Mods_2007_CM07   ` Modified by: costasmanousakis-(Designer)-(8/23/2007 09:30:39)Mods_2007_CM12_5301   ` Modified by: costasmanousakis-(Designer)-(12/20/07 12:34:54)Mods_2007_CM_5401   `  `Use the ◊ELMTDICT_@ arrays instead of relate many  ` Modified by: costasmanousakis-(Designer)-(3/28/08 14:35:03)Mods_2008_CM_5403   ` Adjust the Kilo/Mile valuesEnd if If (False)  `LO:[Inspections];"FC Pr (Pg 1)"  `Load variablesMods_2004_CM11 Mods_2005_CM05   `twiceMods_2005_CM14 Mods_2005_VN01 Mods_2005_VN03   ` Modified by: costasmanousakis-(Designer)-(12/5/2005 16:06:04)Mods_2005_CM19   ` Modified by: costasmanousakis-(Designer)-(2/17/2006 16:51:09)Mods_2006_CM03 Mods_2011_06   ` CJ Miller`06/14/11, 11:06:35      ` Type all local variables for v11Mods_2013_02   `r001 ` Allow for different headings on weights  `Modified by: Charles Miller (2/14/13 14:49:47)Mods_2013_05   `r003 `   Modify length that can fit in remarks based upon inspection type  `Modified by: Charles Miller (5/7/13 16:40:49)  ` Modified by: Costas Manousakis-(Designer)-(5/22/13 16:35:51)Mods_2013_05   `  `Added use of  ut_FitPrintFormObject for tunnel special member inspections  ` Modified by: Costas Manousakis-(Designer)-(10/24/13 11:19:39)Mods_2013_10   `  `use  method  INSP_IsInspRoutine_b to check if inspection is a routine oneEnd if C_INTEGER($i;$recnum;$count)C_INTEGER($REMARKS_NUMBER)$REMARKS_NUMBER:=5If (Count parameters=1)C_LONGINT($1)$REMARKS_NUMBER:=$1End if C_POINTER($pMember;$pRemarks;$pPrevRat;$pRat;$pDef;$p)C_LONGINT($temparea)ARRAY STRING(5;$aDeficiency;0)ARRAY STRING(2;$aPriority;0)C_STRING(80;vInspDatePrLbl;vElmtsPrLbl)C_STRING(255;$vsItemi)Case of   `3-3-03 ASL change events to form events    : (Form event=On Printing Detail )vInspTitlePr:=Uppercase(G_Insp_SetTitle )G_Insp_FormatTitle INSP_KiloPtValues INSP_Item21Desc INSP_Item22Desc INSP_Item107Desc INSP_Item43Desc   `change font if more than one Bdept number is to be printed.If (Length(vItem26)>14)FONT SIZE(vItem26;9)End if INSP_Item43Desc ("RESIZE")G_Insp_SetDirLbl ([Inspections]OrientationNS)  `ASL 4-24-03  `Leave out Item 58 and 62 if this is a fracture critical inspection.Case of : ([Inspections]Insp Type="FCR") | ([Inspections]Insp Type="RRF")SET VISIBLE(*;"Item58@";False)SET VISIBLE(*;"Item61@";False)SET VISIBLE(*;"Item62@";False)MOVE OBJECT(*;"Item59@";40;0)MOVE OBJECT(*;"Item60@";40;0)MOVE OBJECT(*;"lbl_PrevCondition";60;0)MOVE OBJECT(*;"lbl_CurCondition";60;0)MOVE OBJECT(*;"box_FieldTests";0;0;60;0)MOVE OBJECT([Inspections]FieldTests;0;0;60;0)vInspDatePrLbl:="93a - F.C. INSP. DATE"vElmtsPrLbl:="FRACTURE CRITICAL MEMBER(S):": (([Inspections]Insp Type="CMI") | ([Inspections]Insp Type="RRS") | INSP_IsInspRoutine_b )SET VISIBLE(*;"Item61@";False)MOVE OBJECT(*;"Item58@";28;0)MOVE OBJECT(*;"Item59@";28;0)MOVE OBJECT(*;"Item60@";28;0)MOVE OBJECT(*;"lbl_PrevCondition";28;0)MOVE OBJECT(*;"lbl_CurCondition";28;0)MOVE OBJECT(*;"box_FieldTests";0;0;28;0)MOVE OBJECT([Inspections]FieldTests;0;0;28;0)vInspDatePrLbl:="93*-SPEC. MEMB. INSP. DATE"vElmtsPrLbl:="SPECIAL MEMBER(S):": ([Inspections]Insp Type="OTH") | ([Inspections]Insp Type="RRO")vInspDatePrLbl:="INSPECTION DATE"vElmtsPrLbl:="MEMBER(S):"End case   `Initialize Element variables....For ($i;1;$REMARKS_NUMBER)$pRemarks:=Get pointer("vRemarks0"+String($i))$pMember:=Get pointer("vMember0"+String($i))$pPrevRat:=Get pointer("vprevR0"+String($i))$pRat:=Get pointer("vR0"+String($i))$pDef:=Get pointer("vDEF0"+String($i))$pRemarks->:=""$pMember->:=""$pPrevRat->:=""$pRat->:=""$pDef->:=""$p:=Get pointer("vCrack"+String($i))$p->:=""$p:=Get pointer("vWeld"+String($i))$p->:=""$p:=Get pointer("vH20_"+String($i))$p->:=""$p:=Get pointer("vTyp3_"+String($i))$p->:=""$p:=Get pointer("v3S2_"+String($i))$p->:=""$p:=Get pointer("vNotRated_"+String($i))$p->:=""SET VISIBLE(*;("NotRated "+String($i));False)End for   `RELATE MANY([Inspections])  `get only records that have a Rating not N  `ASL 4/28/03 This was querying the AltRating instead  `of the Rating  `QUERY SELECTION([ElementsSafety];[ElementsSafety]Rating#"N")$recnum:=Records in selection([ElementsSafety])  `Sort by element no.  `ORDER BY([ElementsSafety];[ElementsSafety]ElementNo;>)If ($recnum>0)SELECTION TO ARRAY([ElementsSafety]Deficiency;$aDeficiency;[ElementsSafety]Priority;$aPriority)  `Modify defaults of def and prio ratingsFor ($i;1;Size of array($aDeficiency))  `Remove spaces from Deficiency$aDeficiency{$i}:=Replace string($aDeficiency{$i};" ";"")  `Remove spaces from Priority$aPriority{$i}:=Replace string($aPriority{$i};" ";"")If ($aDeficiency{$i}="N")$aDeficiency{$i}:="-"  `default display of no deficiencyEnd if If ($aPriority{$i}#"")$aDeficiency{$i}:=$aDeficiency{$i}+"-"+$aPriority{$i}  `if there is a prio combine def+prioEnd if End for End if C_LONGINT($ReturnLengthLimit_L)$ReturnLengthLimit_L:=INSP_ReturnCMLength $i:=1FIRST RECORD([ElementsSafety])While (Not(End selection([ElementsSafety])))  `RELATE ONE([ElementsSafety]ElementNo)  `Added this to supercede the previous descriptions.      $vsItemi:=G_GetElmtLabel   `Get the commentsIf ($i<=$REMARKS_NUMBER)$pRemarks:=Get pointer("vRemarks0"+String($i))If (BLOB size([ElementsSafety]ElmComments)>0)$temparea:=WR New offscreen area WR INSERT STYLED TEXT ($temparea;[ElementsSafety]ElmComments)WR EXECUTE COMMAND ($temparea;wr cmd select all )$count:=WR Count ($temparea;wr nb characters )If ($count<$ReturnLengthLimit_L)  `increased to 50 from 36.$pRemarks->:=WR Get selected text ($temparea)Else $pRemarks->:="See remarks in comments section."End if WR DELETE OFFSCREEN AREA ($temparea)End if   `$pMember:=Get pointer("vMember0"+String($i))$pPrevRat:=Get pointer("vprevR0"+String($i))$pRat:=Get pointer("vR0"+String($i))$pDef:=Get pointer("vDEF0"+String($i))$pMember->:=$vsItemi  `modified from above.If ([Inspections]Insp Type="T@")C_BOOLEAN($fit_b)$fit_b:=ut_FitPrintFormObject ($pMember;11;8)Else Case of   `added this to fit text.: (Length($pMember->)>34)FONT SIZE($pMember->;8): (Length($pMember->)>29)FONT SIZE($pMember->;9): (Length($pMember->)>27)FONT SIZE($pMember->;10)End case End if $pPrevRat->:=[ElementsSafety]Rating_i$pRat->:=[ElementsSafety]Rating$pDef->:=$aDeficiency{$i}$p:=Get pointer("vCrack"+String($i))If ([ElementsSafety]Crack=True)$p->:="Y"Else $p->:="N"End if $p:=Get pointer("vWeld"+String($i))$p->:=[ElementsSafety]Weld ConditionIf ([ElementsSafety]Inv H20>=0)$p:=Get pointer("vH20_"+String($i))$p->:=String([ElementsSafety]Inv H20;"##0;N;0")$p:=Get pointer("vTyp3_"+String($i))$p->:=String([ElementsSafety]Inv Type 3;"##0;N;0")$p:=Get pointer("v3S2_"+String($i))$p->:=String([ElementsSafety]Inv 3S2;"##0;N;0")Else $p:=Get pointer("vNotRated_"+String($i))$p->:="Not Rated"SET VISIBLE(*;("NotRated "+String($i));True)End if   `  End if $i:=$i+1NEXT RECORD([ElementsSafety])End while   `ASL 4-25-03 Added Item 58vItem58Prev:=G_FormatItmRtg ([Inspections]Item58_i)vItem59Prev:=G_FormatItmRtg ([Inspections]Item59_i)vItem60Prev:=G_FormatItmRtg ([Inspections]Item60_i)vItem61Prev:=G_FormatItmRtg ([Inspections]Item61_i)  `added 2005-10-27vItem62Prev:=G_FormatItmRtg ([Inspections]Item62_i)  `added 2004-01-08vItem58:=G_FormatItmRtg ([Inspections]Item 58)vItem59:=G_FormatItmRtg ([Inspections]Item 59)vItem60:=G_FormatItmRtg ([Inspections]Item 60)vItem61:=G_FormatItmRtg ([Inspections]Item 61)  `added 2005-10-27vItem62:=G_FormatItmRtg ([Inspections]Item 62)  `added 2004-01-08vItem62a:=G_FormatItmRtg ([TunnelInspection]Structural_Rtg_s)vItem62aPrev:=G_FormatItmRtg ([TunnelInspection]Structural_Prev_Rtg_s)vItem62b:=G_FormatItmRtg ([TunnelInspection]Roadway_Rtg_s)vItem62bPrev:=G_FormatItmRtg ([TunnelInspection]Roadway_Prev_Rtg_s)vItem62c:=G_FormatItmRtg ([TunnelInspection]Ceiling_Rtg_s)vItem62cPrev:=G_FormatItmRtg ([TunnelInspection]Ceiling_Prev_Rtg_s)vItem62d:=G_FormatItmRtg ([TunnelInspection]SupplyAirDuct_Rtg_s)vItem62dPrev:=G_FormatItmRtg ([TunnelInspection]SupplyAirDuct_Prev_Rtg_s)vItem62e:=G_FormatItmRtg ([TunnelInspection]CrossPassage_Rtg_s)vItem62ePrev:=G_FormatItmRtg ([TunnelInspection]CrossPassage_Prev_Rtg_s)vItem62f:=G_FormatItmRtg ([TunnelInspection]Egress_Rtg_s)vItem62fPrev:=G_FormatItmRtg ([TunnelInspection]Egress_Prev_Rtg_s)vItem62g:=G_FormatItmRtg ([TunnelInspection]UtilityRoom_Rtg_s)vItem62gPrev:=G_FormatItmRtg ([TunnelInspection]UtilityRoom_Prev_Rtg_s)  `Get the year rehab'd      vYrRehab:=[Inspections]YrRehabvPlans:=f_Boolean2String ([Inspections]Plans;"YN")vVCR:=f_Boolean2String ([Inspections]VCR;"YN")INSP_PR_RatgBlock G_Insp_SetDeptFont G_Insp_ApplyRev2_PR End case 