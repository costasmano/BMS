ÊÊ`Method: Object Method: ReLogRecords.RelogDoÊÊ`DescriptionÊÊ`ÊÊ` ParametersÊÊ` ----------------------------------------------------If (False)ÊÊ` ----------------------------------------------------ÊÊ`User name (OS): Costas ManousakisÊÊ`User (4D) : DesignerÊÊ`Date and time: 06/15/12, 15:41:10ÊÊ` ----------------------------------------------------ÊÊ`Created : Mods_2012_06 ÊÊ` Modified by: Costas Manousakis-(Designer)-(10/28/13 11:55:06)Mods_2013_10 ÊÊ`ÊÊ`Fixed bugs ÊÊ`ÊÊ`Check if entries for the record id are already in the fileidres table - for now don't do any logging for such recordsÊÊ`ÊÊ`Add messages about what was doneÊÊ`ÊÊ`Allow blank sequence for RelationType = 0ÊÊ` Modified by: Costas Manousakis-(Designer)-(11/18/13 10:27:34)Mods_2013_11 ÊÊ`ÊÊ`added forward variableEnd if ÊÊ`Case of : (Form event=On Load ): (Form event=On Data Change ): (Form event=On Clicked )C_LONGINT($TableNum_L;$NumFields_L;$KeyFieldNum_L;$NewTransfer;$OldTRansfer;$i)C_TEXT($FieldName_txt;$keyFieldName_txt)C_POINTER($Tbl_ptr;$KeyField_ptr;$ParTblKey_ptr;$LocTblFK_ptr)C_BOOLEAN($DelFirst_b)C_LONGINT($RelCode;$FlushRelCode_L)C_TEXT($CurrDest_txt;$FinalDest_txt;$NewRecSeq_txt;$CurrForward_txt;$FinalForward_txt)C_BOOLEAN($DoIT_B)$DoIT_B:=TrueIf (RELOG_TBLNum_L>0)$Tbl_ptr:=Table(RELOG_TBLNum_L)$TableNum_L:=RELOG_TBLNum_L$NumFields_L:=Get last field number(Table($TableNum_L))ARRAY POINTER($a_Ptr_Fields;$NumFields_L)For ($i;1;$NumFields_L)$a_Ptr_Fields{$i}:=Field($TableNum_L;$i)End for If (RELOG_KeyField_L>0)$KeyField_ptr:=Field(RELOG_TBLNum_L;RELOG_KeyField_L)$KeyFieldNum_L:=RELOG_KeyField_LElse ALERT("No Key Field in the Master Table selected!!!")$DoIT_B:=FalseEnd if Else ALERT("No Master Table selected!!!")$DoIT_B:=FalseEnd if ÊÊ`RELOG_ParentTbl_L:=ParentTableList_atxtRELOG_FK_L:=ForeignKeyList_atxtÊÊ`RELOG_PK_L:=ParentKeyList_atxt$indx_L:=RelationsList_atxtIf ($indx_L>0)$RelCode:=Num(RelationsList_atxt{$indx_L})Else ALERT("No Relation Type for new record!!!")$DoIT_B:=FalseEnd if C_LONGINT($indx_L)$indx_L:=Sequence_atxtIf ($indx_L>0)$NewRecSeq_txt:=Sequence_atxt{$indx_L}Else If ($RelCode>0)ALERT("No Sequence specified for new record!!!")$DoIT_B:=FalseEnd if End if $indx_L:=RelationsFlushList_atxtIf ($indx_L>0)$FlushRelCode_L:=Num(RelationsFlushList_atxt{$indx_L})Else ALERT("No Flush Relation Type for new record!!!")$DoIT_B:=FalseEnd if $FinalDest_txt:=RelogDestination_txt$FinalForward_txt:=RelogForward_txt$NewTransfer:=RelogTransfer_L$DelFirst_b:=(LogDelfirst_L=1)C_STRING(80;×Destination)$CurrDest_txt:=×Destination×Destination:=$FinalDest_txt$OldTRansfer:=×Transfer×Transfer:=$NewTransfer$CurrForward_txt:=vsForwardvsForward:=$FinalForward_txtIf (Type(ptr_Changes)#Array 2D )ARRAY POINTER(ptr_Changes;0;0)End if $ParTblKey_ptr:=$KeyField_ptr$LocTblFK_ptr:=$KeyField_ptrIf (RELOG_ParentTbl_L>0)Ê&Ê(RELOG_FK_L>0)Ê&Ê(RELOG_PK_L>0)$ParTblKey_ptr:=Field(RELOG_ParentTbl_L;RELOG_PK_L)$LocTblFK_ptr:=Field(RELOG_TBLNum_L;RELOG_FK_L)Else If (RELOG_ParentTbl_L>0)ALERT("Must specify Foreign and Parent key fields when specifying a parent table!")$DoIT_B:=FalseElse End if End if If ($DoIT_B)If (Records in selection($Tbl_ptr->)>0)CONFIRM("Create Activity log entries for "+String(Records in selection($Tbl_ptr->))+" records in table "+Table name($Tbl_ptr)+" ?")If (OK=1)READ ONLY($Tbl_ptr->)FIRST RECORD($Tbl_ptr->)C_LONGINT($RecCounter_L)$RecCounter_L:=0While (Not(End selection($Tbl_ptr->)))ÊÊ`search in [fileidres] for entry with the current $KeyField_ptr in the local listC_TEXT($tableResvalue_txt)$tableResvalue_txt:=""C_BOOLEAN($doThisRecord_b)$doThisRecord_b:=TrueCase of : (Type($KeyField_ptr->)=Is Alpha Field )$tableResvalue_txt:=$KeyField_ptr->: (Type($KeyField_ptr->)=Is Integer )Ê|Ê(Type($KeyField_ptr->)=Is LongInt )$tableResvalue_txt:=String($KeyField_ptr->)Else ALERT("Type of key field : "+Field name($KeyField_ptr)+" : "+fGetDataType (Type($KeyField_ptr->))+" is not valid")$doThisRecord_b:=FalseEnd case C_LONGINT($fileidresRecs_L)If ($tableResvalue_txt#"")SET QUERY DESTINATION(Into variable ;$fileidresRecs_L)QUERY([FileIDRes Table];[FileIDRes Table]Destination=$FinalDest_txt;*)QUERY([FileIDRes Table];Ê&Ê;[FileIDRes Table]File Number=$TableNum_L;*)QUERY([FileIDRes Table];Ê&Ê;[FileIDRes Table]Local ID=$tableResvalue_txt)SET QUERY DESTINATION(Into current selection )If ($fileidresRecs_L>0)C_TEXT($msg_txt)$msg_txt:="There are records in the [FileIDRes Table] with the destination of "+$FinalDest_txt+" for table "+Table name($TableNum_L)+" with localID "+$tableResvalue_txt$msg_txt:=$msg_txt+Char(13)+"Cannot create NRC activity log entries for this record!!!"ALERT($msg_txt)$doThisRecord_b:=FalseEnd if SET QUERY DESTINATION(Into variable ;$fileidresRecs_L)QUERY([FileIDRes Table];[FileIDRes Table]Destination="HERE";*)QUERY([FileIDRes Table];Ê&Ê;[FileIDRes Table]File Number=$TableNum_L;*)QUERY([FileIDRes Table];Ê&Ê;[FileIDRes Table]Destination ID=$tableResvalue_txt)SET QUERY DESTINATION(Into current selection )If ($fileidresRecs_L>0)C_TEXT($msg_txt)$msg_txt:="There are records in the [FileIDRes Table] with the destination of HERE for table "+Table name($TableNum_L)+" with Destination ID "+$tableResvalue_txt$msg_txt:=$msg_txt+Char(13)+"Cannot create NRC activity log entries for this record!!!"ALERT($msg_txt)$doThisRecord_b:=FalseEnd if End if If ($doThisRecord_b)$RecCounter_L:=$RecCounter_L+1If ($DelFirst_b)LogDeletion ($ParTblKey_ptr;$LocTblFK_ptr;$KeyField_ptr;$FlushRelCode_L)End if LogNewRecord ($ParTblKey_ptr;$LocTblFK_ptr;$KeyField_ptr;$RelCode;$NewRecSeq_txt)InitChangeStack (1)For ($i;1;$NumFields_L)If (($i#$KeyFieldNum_L)Ê&Ê($i#RELOG_FK_L))PushChange (1;$a_Ptr_Fields{$i})End if End for FlushGrpChgs (1;$ParTblKey_ptr;$LocTblFK_ptr;$KeyField_ptr;$FlushRelCode_L)End if NEXT RECORD($Tbl_ptr->)End while ALERT("Created Activity log entries for "+String($RecCounter_L)+" records in table "+Table name($Tbl_ptr))End if Else ALERT("No Records found in table ["+Table name($Tbl_ptr)+"]")End if End if ×Destination:=$CurrDest_txt×Transfer:=$OldTRansfervsForward:=$CurrForward_txtEnd case ÊÊ`End Object Method: ReLogRecords.RelogDo