ÊÊ` ----------------------------------------------------ÊÊ` User name (OS): Charles MillerÊÊ` Date and time: 06/18/10, 11:44:16ÊÊ` ----------------------------------------------------ÊÊ` Method: ut_SQLSelectForLoadÊÊ` DescriptionÊÊ` ÊÊ`ÊÊ` ParametersÊÊ` ----------------------------------------------------ÊÊ`$Numrec_l:=ut_SQLSelectForLoad ($SQLSelectQuery_txt;[Activity_Log]Local Type)ÊÊ`$0 size of array returnedÊÊ`$1 the select statementÊÊ`$2 the typeÊÊ` Modified by: Charles Miller (6/18/10)If (False)Mods_OPNToSQLUpgrade ÊÊ`4D Open to SQL conversionÊÊ`Modified by: Charles Miller (8/11/10 11:14:35) Mods_OPNToSQLUpgrade ÊÊ`4D Open to SQL conversionÊÊ`Modified by: Charles Miller (9/3/10 15:39:54)ÊÊ`Ugrade to v11ÊÊ`Modified by: Charles Miller (4/28/11 17:00:51)ÊÊ`Ugrade to v11ÊÊ`Modified by: Charles Miller (5/10/11 16:25:29)End if ARRAY TEXT($Returnvalues_atxt;0)ARRAY LONGINT($Returnvalues_al;0)C_LONGINT($0;$2;$Type_l;$ReturnValue_l)$Type_l:=$2C_TEXT($1;$SQL_Select_txt)$SQL_Select_txt:=$1SQLError_b:=False4DError_b:=FalseARRAY TEXT($Returnvalues_atxt;0)ARRAY LONGINT($Returnvalues_al;0)C_LONGINT($NumberOfTrys_l)C_BOOLEAN($Complete_b)ON ERR CALL("SQL_ERROR")$Complete_b:=FalseRepeat If ($Type_l=0)ARRAY TEXT($Returnvalues_atxt;0)SQL EXECUTE($SQL_Select_txt;$Returnvalues_atxt)Else ARRAY LONGINT($Returnvalues_al;0)SQL EXECUTE($SQL_Select_txt;$Returnvalues_al)End if If (SQLError_b)If (SQLErrorNumbers_al{1}=1066)SQLError_b:=False$NumberOfTrys_l:=$NumberOfTrys_l+1If ($NumberOfTrys_l>5)CONFIRM("Do you want to try again or cancel transfer process?";"Try Again";"Cancel")If (OK=1)$NumberOfTrys_l:=0Else RecordLocked_b:=False$Complete_b:=TrueAbortDueToLockedRecord_b:=TrueEnd if Else C_TEXT($Message_txt)$Message_txt:=Table name([Activity Log]FileID Local)+" Record locked on remote machine try number "+String($NumberOfTrys_l)+Char(Carriage return )ut_Message ($Message_txt)IDLEDELAY PROCESS(Current process;150)End if End if Else RecordLocked_b:=True$Complete_b:=TrueEnd if Until ($Complete_b)If (RecordLocked_b)While (Not(SQL End selection))Ê&Ê(Not(SQLError_b))SQL LOAD RECORD(SQL All Records )End while SQL CANCEL LOADEnd if ON ERR CALL("4D_Errors")C_LONGINT($Numrec_l)$Numrec_l:=Size of array($Returnvalues_atxt)+Size of array($Returnvalues_al)C_BOOLEAN($OriginalonScreen_b)$OriginalonScreen_b:=vbOnScreenMessageC_TEXT($TableName_txt;$Error_txt)If (Not(InWHKRUpdate_b))Case of : (Not(RecordLocked_b))vbOnScreenMessage:=Falseut_SQLWriteErrorsToLog ($SQL_Select_txt+×CR+" record locked "+×sCR)vbOnScreenMessage:=$OriginalonScreen_but_Message ("Remote record for table locked "+Table name([Activity Log]FileID Local)+" Ref ID "+REFID_s+" Parent ID "+ParentID_s+×sCR)If (SQLError_b)ut_SQLWriteErrorsToLog ("Error in Load "+Current method name+×sCR+$SQL_Select_txt+×sCR)End if SQLError_b:=False: (SQLError_b)Ê|Ê(4DError_b)vbOnScreenMessage:=Falseut_SQLWriteErrorsToLog ("Error in select "+Current method name+×sCR+$SQL_Select_txt+×sCR)vbOnScreenMessage:=$OriginalonScreen_but_Message ("Error in select for table "+Table name([Activity Log]FileID Local)+" Ref ID "+REFID_s+" Parent ID "+ParentID_s+×sCR)Else ÊÊ`ut_Message ("Select for table"+Table name([Activity_Log]File Number)+" "+×sCR)End case Else If (WKHR_SRCH_AddendNo_L=0)$TableName_txt:="Assignment"Else $TableName_txt:="Addendum"End if Case of : (Not(RecordLocked_b))vbOnScreenMessage:=FalseSQLError_b:=FalseALERT("The  "+$TableName_txt+" record is locked. You will have to try again at a later time"): (SQLError_b)Ê|Ê(4DError_b)$Error_txt:="Error Number, Internal Code, Description"+×sCRC_LONGINT($Loop_l)For ($Loop_l;1;Size of array(SQLErrorNumbers_al))$Error_txt:=$Error_txt+String(SQLErrorNumbers_al{$Loop_l})+","+SQL_InternalCodes_atxt{$Loop_l}+","+SQL_InternalDescriptions_atxt{$Loop_l}+×sCREnd for ALERT($Error_txt)End case End if $ReturnValue_l:=Size of array($Returnvalues_atxt)+Size of array($Returnvalues_al)ARRAY TEXT($Returnvalues_atxt;0)ARRAY LONGINT($Returnvalues_al;0)$0:=$ReturnValue_l