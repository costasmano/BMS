If (False)Mods_2005_CM06   ` Modified by: costasmanousakis-(Administrator)-(11/7/2005 11:48:46)Mods_2005_CM18   ` Modified by: costasmanousakis-(Designer)-(11/30/2005 15:30:17)Mods_2005_CM19   ` Modified by: costasmanousakis-(Designer)-(1/30/2006 12:16:22)Mods_2006_CM03   ` Modified by: costasmanousakis-(Designer)-(1/31/2006 14:36:26)Mods_2006_CM03   ` Modified by: costasmanousakis-(Designer)-(8/28/2006 15:41:42)Mods_2006_CM06   ` Modified by: costasmanousakis-(Designer)-(8/13/2007 14:12:40)Mods_2007_CM12_5301   ` Modified by: costasmanousakis-(Designer)-(11/5/2007 11:29:12)Mods_2007_CM12_5302   ` Modified by: costasmanousakis-(Designer)-(1/25/08 12:05:44)Mods_2007_CM_5401   `Use Method ut_WarmUpDatabaseMods_2009_03   `CJM  r001   `03/06/09, 13:04:33`Upgrade from open form window to open window  ` Modified by: costasmanousakis-(Designer)-(4/21/09 20:11:32)Mods_2009_04   `  `Place WildCard around "MHD BMS External" to account for the new .4Dx extensions in 2004  ` Modified by: costasmanousakis-(Designer)-(6/25/09 09:30:05)Mods_2009_06   `  ` For Designer center the splash screen windowMods_2009_10   `v451 r001 CJ Miller`10/22/09, 11:50:43   `Add check to make sure triggers run only on inside data baseMods_2009_10   `v451 r001 CostasManousakis `Moved the splash screen resizer to all users  ` Modified by: costasmanousakis-(Designer)-(8/16/10 08:19:48)Mods_2010_08   `  `Added District 6 to the launch of initial windowsMods_2011_05   `r002 CJ Miller`05/10/11, 17:25:28      `Add code ◊NextNumberArray_al to set up for v11Mods_2011_06   ` CJ Miller`06/13/11, 16:43:54      ` Type all local variables for v11  ` Modified by: costasmanousakis-(Designer)-(12/2/11 09:40:16)Mods_2011_12   `  `Modified code that stores machinename to include last date and count of logins from that machine  ` Modified by: Costas Manousakis-(Designer)-(11/1/13 07:50:07)Mods_2013_11   `  `Move the trace if designer to the database On Startup methodEnd if C_TEXT(◊SavedMethodFolder_txt)◊SavedMethodFolder_txt:="MHD_BMS_Dev_Source"ARRAY LONGINT(◊NextNumberArray_al;100)C_LONGINT($Loop_l)For ($Loop_l;1;100)◊NextNumberArray_al{$Loop_l}:=-9End for C_TEXT(◊DatabaseStructureName_txt)  `SET PLATFORM INTERFACE(0)  `Use Mac interface: white background.HIDE TOOL BARC_LONGINT($ScrHt;$ScrW;$WTop;$WLeft;$Wbot;$Wright;$WWidt;$WHt)$ScrHt:=Screen height$ScrW:=Screen widthGET WINDOW RECT($Wleft;$Wtop;$WRight;$Wbot)C_PICTURE($Splash_pic)GET PICTURE FROM LIBRARY("BMS Splash Image";$Splash_pic)PICTURE PROPERTIES($Splash_pic;$WWidt;$WHt)$Splash_pic:=$Splash_pic*0$Wleft:=($ScrW-$WWidt)/2$Wtop:=($ScrHt-$WHt)/2SET WINDOW RECT($Wleft;$Wtop;($Wleft+$WWidt);($Wtop+$WHt))Startup_PL   `Get Platform info.C_BOOLEAN($vbExtServer;$vbExtUser;$vbDbgCheck;$vbDesAccess;$vbExtInternal)C_TEXT($msg)If (False)  `Using 4D Client connecting to External server$vbExtServer:=((Structure file="MHD BMS External") & (Application type=4D Remote Mode ))Else $vbExtServer:=(Structure file="@MHD BMS External@")End if $vbDesAccess:=User in group(Current user;"Design Access Group")$vbExtInternal:=User in group(Current user;"ExternalInternal")$vbExtInternal:=$vbExtInternal | $vbDesAccess$vbExtUser:=(User in group(Current user;"ExternalInspectors") | User in group(Current user;"ExternalDesigners"))$vbDbgCheck:=True  `set to true to enable the case statementsCase of : (User in group(Current user;"ActiveUsers")=False)  `Log-out inactive users...  $msg:="User <"+Current user+"> has been de-activated in Database"+Char(13)$msg:=$msg+"<"+Structure file+"> !"+Char(13)$msg:=$msg+"If you have any questions contact :"+Char(13)$msg:=$msg+"Costas Manousakis - Bridge Section - Tel 617-973-8028."+Char(13)$msg:=$msg+"QUITTING 4D NOW..."ALERT($msg)QUIT 4D: (($vbExtServer & Not($vbExtUser | $vbExtInternal)) & $vbDbgCheck)$msg:="User <"+Current user+"> is not allowed to connect to Database"+Char(13)$msg:=$msg+"<"+Structure file+"> !"+Char(13)$msg:=$msg+"If you have any questions contact :"+Char(13)$msg:=$msg+"Constantine Manousakis - MassHighway/Bridge Section - Tel 617-973-8028."+Char(13)$msg:=$msg+"QUITTING 4D NOW..."ALERT($msg)QUIT 4D: ((Not($vbExtServer) & ($vbExtUser & Not($vbExtInternal))) & $vbDbgCheck)$msg:="User <"+Current user+"> is not allowed to connect to Database"+Char(13)$msg:=$msg+"<"+Structure file+"> !"+Char(13)$msg:=$msg+"If you have any questions contact :"+Char(13)$msg:=$msg+"Costas Manousakis - Bridge Section - Tel 617-973-8028."+Char(13)$msg:=$msg+"QUITTING 4D NOW..."ALERT($msg)QUIT 4DElse SHORT_MESSAGE ("Initializing. Please Wait...")ut_SetUpBridgeInfoLinkTable   `This code will add [BridgeInfoLink] records if any do not existCLOSE WINDOWC_LONGINT($tempwin)C_LONGINT(◊LSplashWinID)◊LSplashWinID:=Frontmost window$tempwin:=Open window(((Screen width/2)-150);((Screen height/2)-15);((Screen width/2)+150);((Screen height/2)+15);Regular window )C_LONGINT($vrMillisecondsSt)$vrMillisecondsSt:=MillisecondsC_BOOLEAN($DisplayStartTime_b)$DisplayStartTime_b:=FalseC_TIME($StartTime;$EndTime;$EndInitUIGV;$EndInitUIArrays;$EndInitFields;$EndInitTown;$EndInitPers;$EndInitBMS;$EndSortTable;$EndInitFields_1)C_LONGINT($EndInitUIGV_L;$EndInitUIArrays_L;$EndInitFields_L;$EndInitTown_L;$EndInitPers_L;$EndInitBMS_L;$EndSortTable_L;$EndTime_L;$EndInitFields_1_L)If (Shift down)$DisplayStartTime_b:=TrueEnd if $StartTime:=Current timeSET ABOUT("About NBIS Bridge Inspection Management System…";"About")MESSAGE(Char(13)+"  Interproc arrays...."+String(Milliseconds-$vrMillisecondsSt))ut_BarCodeFontSetup INIT_UI_GV   `Initialize interprocess variables for this applicationQUERY([Personnel];[Personnel]UserID_4D=◊CurrentUser_UID)If (Records in selection([Personnel])=1)C_TEXT($CurrentMachine_txt)$CurrentMachine_txt:=Current machineC_BOOLEAN($ReadOnly_b)$ReadOnly_b:=Read only state([Personnel])If (ut_LoadRecord (->[Personnel]))If (Position($CurrentMachine_txt;[Personnel]MachineName_txt)>0)ARRAY TEXT($MachineList_atxt;0)ut_TextToArray ([Personnel]MachineName_txt;->$MachineList_atxt;Char(Tab ))C_LONGINT($Row_L)$Row_L:=Find in array($MachineList_atxt;$CurrentMachine_txt+"@")C_TEXT($Machinedata_txt)$Machinedata_txt:=$MachineList_atxt{$Row_L}DELETE FROM ARRAY($MachineList_atxt;$Row_L)ARRAY TEXT($Machinedata_atxt;0)ut_TextToArray ($Machinedata_txt;->$Machinedata_atxt;";")C_LONGINT($Count_L)$Count_L:=0If (Size of array($Machinedata_atxt)=3)$Count_L:=Num($Machinedata_atxt{3})End if $Count_L:=$Count_L+1$Machinedata_txt:=$CurrentMachine_txt+";"+String(Current date(*))+";"+String($Count_L)INSERT IN ARRAY($MachineList_atxt;0)$MachineList_atxt{1}:=$Machinedata_txt[Personnel]MachineName_txt:=$Machinedata_txtFor ($Row_L;2;Size of array($MachineList_atxt))[Personnel]MachineName_txt:=[Personnel]MachineName_txt+Char(Tab )+$MachineList_atxt{$Row_L}End for Else If ([Personnel]MachineName_txt="")[Personnel]MachineName_txt:=$CurrentMachine_txt+";"+String(Current date(*))+";1"Else [Personnel]MachineName_txt:=$CurrentMachine_txt+";"+String(Current date(*))+";1"+Char(Tab )+[Personnel]MachineName_txtEnd if End if SAVE RECORD([Personnel])UNLOAD RECORD([Personnel])End if If ($ReadOnly_b)READ ONLY([Personnel])End if End if $EndInitUIGV:=Current time$EndInitUIGV_L:=Milliseconds-$vrMillisecondsStMESSAGE(Char(13)+"  UI arrays...."+String(Milliseconds-$vrMillisecondsSt))C_LONGINT($LocalProcessl_l)$LocalProcessl_l:=LSpawnProcess ("ut_UpdateLocalDictionary";◊LStackSize;"$Update Local Dictionary";True;False)INIT_UI_ARRAYS   `Load arrays for user interface$EndInitUIArrays:=Current time$EndInitUIArrays_L:=Milliseconds-$vrMillisecondsStMESSAGE(Char(13)+"  Town Data arrays...."+String(Milliseconds-$vrMillisecondsSt))  `INIT_TOWN_DATA   `Load text file for converting BDEPT to Town namesut_RetrieveTOWNDATADoc $EndInitTown:=Current time$EndInitTown_L:=Milliseconds-$vrMillisecondsStMESSAGE(Char(13)+"  Field Descr arrays...."+String(Milliseconds-$vrMillisecondsSt))  `begin changes  Mods_2004_CJM03 ut_RetrieveBlobDocument   ` INIT_FIELDS_DES   `Load description data for fields from tables  `end changes  Mods_2004_CJM03 $EndInitFields:=Current time$EndInitFields_L:=Milliseconds-$vrMillisecondsStInit_Fields_DES1   `Load description data for fields from lists$EndInitFields_1:=Current time$EndInitFields_1_L:=Milliseconds-$vrMillisecondsStMESSAGE(Char(13)+"  Personnel arrays...."+String(Milliseconds-$vrMillisecondsSt))  `InitPers   `Load Personnel data.    Also called from GP InitProcessVar.ut_RetrievePersArraysDoc $EndInitPers:=Current time$EndInitPers_L:=Milliseconds-$vrMillisecondsStMESSAGE(Char(13)+"  BMS arrays...."+String(Milliseconds-$vrMillisecondsSt))INIT_BMS   `Load BMS data.    Also called from GP InitProcessVar.$EndInitBMS:=Current time$EndInitBMS_L:=Milliseconds-$vrMillisecondsSt  ` make sure Fields in Bridge MHD NBIS table are shown in alphabetical order  `   added Jan-2001 : CMMESSAGE(Char(13)+"  Sorting tables...."+String(Milliseconds-$vrMillisecondsSt))  `G_SortTable_new   `new ver sorts all tables with more than 10 fieldsC_BOOLEAN($v_SortTables_b)$v_SortTables_b:=TrueIf (Shift down)If (Current user="Designer")CONFIRM("Do you want to have tables and fields sorted?";"Sort";"Unsorted")$v_SortTables_b:=(OK=1)End if End if If ($v_SortTables_b)ut_RetrieveTableArrDoc End if $EndSortTable:=Current time$EndSortTable_L:=Milliseconds-$vrMillisecondsSt  `G_Hide_ConsltRatingCost_Table MESSAGE(Char(13)+"  Loading menus...."+String(Milliseconds-$vrMillisecondsSt))If (User in group(Current user;"Access Level 1")=False)InitFilePalette Case of : (User in group(Current user;"MTA")=True)M_MTA : (User in group(Current user;"MDC")=True)M_MDC : (User in group(Current user;"MBTA")=True)M_MBTA : (User in group(Current user;"MassPort")=True)M_MPA End case Else If (User in group(Current user;"Access Level 1")=True)Case of : (User in group(Current user;"District 1")=True)M_DISTRICT1 : (User in group(Current user;"District 2")=True)M_DISTRICT2 : (User in group(Current user;"District 3")=True)M_DISTRICT3 : (User in group(Current user;"District 4")=True)M_DISTRICT4 : (User in group(Current user;"District 5")=True)M_DISTRICT5 : (User in group(Current user;"District 6")=True)M_DISTRICT6 : (User in group(Current user;"MTA")=True)M_MTA : (User in group(Current user;"MDC")=True)M_MDC : (User in group(Current user;"MBTA")=True)M_MBTA : (User in group(Current user;"MassPort")=True)M_MPA End case End if End if MESSAGE(Char(13)+"  Clean Up...."+String(Milliseconds-$vrMillisecondsSt))G_CloseAllTables   `ON ERR CALL("ERR_SpellCheckErr")  `G_SpellCheckSetup  `ON ERR CALL("")CLOSE WINDOWIf (Application type#4D Remote Mode )ChkActLogQueue End if $EndTime:=Current time$EndTime_L:=Milliseconds-$vrMillisecondsStIf ($DisplayStartTime_b)C_TEXT($Msg_txt)$Msg_txt:="Start up began "+String($StartTime)+Char(13)$Msg_txt:=$Msg_txt+"INIT_UI_GV ended "+String($EndInitUIGV)+" Elapsed "+String($EndInitUIGV-$StartTime)+" - "+String($EndInitUIGV_L)+Char(13)$Msg_txt:=$Msg_txt+"INIT_UI_ARRAYS "+String($EndInitUIArrays)+" Elapsed "+String($EndInitUIArrays-$EndInitUIGV)+" - "+String($EndInitUIArrays_L-$EndInitUIGV_L)+Char(13)$Msg_txt:=$Msg_txt+"INIT_TOWN_DATA "+String($EndInitTown)+" Elapsed "+String($EndInitTown-$EndInitUIArrays)+" - "+String($EndInitTown_L-$EndInitUIArrays_L)+Char(13)$Msg_txt:=$Msg_txt+"INIT_FIELDS_DES "+String($EndInitFields)+" Elapsed "+String($EndInitFields-$EndInitTown)+" - "+String($EndInitFields_L-$EndInitTown_L)+Char(13)$Msg_txt:=$Msg_txt+"INIT_FIELDS_DES1 "+String($EndInitFields_1)+" Elapsed "+String($EndInitFields_1-$EndInitFields)+" - "+String($EndInitFields_1_L-$EndInitFields_L)+Char(13)$Msg_txt:=$Msg_txt+"InitPers "+String($EndInitPers)+" Elapsed "+String($EndInitPers-$EndInitFields_1)+" - "+String($EndInitPers_L-$EndInitFields_1_L)+Char(13)$Msg_txt:=$Msg_txt+"INIT_BMS "+String($EndInitBMS)+" Elapsed "+String($EndInitBMS-$EndInitPers)+" - "+String($EndInitBMS_L-$EndInitPers_L)+Char(13)$Msg_txt:=$Msg_txt+"G_SortTable_new "+String($EndSortTable)+" Elapsed "+String($EndSortTable-$EndInitBMS)+" - "+String($EndSortTable_L-$EndInitBMS_L)+Char(13)$Msg_txt:=$Msg_txt+"Start up Ended "+String($EndTime)+" Elapsed "+String($EndTime-$EndSortTable)+" - "+String($EndTime_L-$EndSortTable_L)+Char(13)$Msg_txt:=$Msg_txt+"Total elapsed time "+String($EndTime-$StartTime)+" - "+String($EndTime_L)+Char(13)  `  ALERT($Msg_txt)Msg:=$Msg_txtC_LONGINT($Width_l;$Height_l;$Win_l;$Pages_l)C_BOOLEAN($FixedWidth_b;$FixedHeight_b)C_TEXT($Title_txt)GET FORM PROPERTIES([Dialogs];"stats";$Width_l;$Height_l;$Pages_l;$FixedWidth_b;$FixedHeight_b;$Title_txt)$Win_l:=ut_OpenNewWindow ($Width_l;$Height_l;0;0;$Title_txt;"ut_CloseCancel")  `$ref:=Open form window([Dialogs];"stats";0)DIALOG([Dialogs];"stats")CLOSE WINDOW($Win_l)End if If (User in group(Current user;"READWRITE"))ut_WarmUpDatabase End if   `ut_UnloadAllTables ("S")End case   `end of active user startup