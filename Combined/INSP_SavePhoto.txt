If (False)ÊÊ`Method: INSP_SavePhoto ÊÊ`Renamed from G_Method_SavePhoto Mods_2004_CM06 Mods_2004_CM10 ÊÊ` Modified by: costasmanousakis-(Designer)-(5/22/2006 08:53:13)Mods_2006_CM04 ÊÊ` Modified by: costasmanousakis-(Designer)-(10/10/2006 08:31:51)Mods_2006_CM06A ÊÊ` Modified by: costasmanousakis-(Designer)-(2/5/09 09:07:19)Mods_2009_CM_5404 ÊÊ`Modified logic of saving pictures, so that no large photos are saved. does not change anything forÊÊ`sketches / chartsÊÊ` Modified by: costasmanousakis-(Designer)-(2/12/09 14:51:22)Mods_2009_CM_5404 ÊÊ`Also restricted all images to 1250Kb size.ÊÊ` Modified by: costasmanousakis-(Designer)-(2/17/09 08:51:34)Mods_2009_CM_5404 ÊÊ`Increased restriction to 1350Kb size.End if C_LONGINT($MaxImageSize_L)$MaxImageSize_L:=1350ÊÊ`in KbÊÊ`Check for zero sequenceC_BOOLEAN($DoTheSave_b)$DoTheSave_b:=TrueIf ([Standard Photos]SeqNum=0)Case of : ([Standard Photos]PictType=BMS Photo )[Standard Photos]SeqNum:=vNextPhotoSeq: ([Standard Photos]PictType=BMS Sketch )[Standard Photos]SeqNum:=vNextSketchSeq: ([Standard Photos]PictType=BMS Chart )[Standard Photos]SeqNum:=vNextChartSeqEnd case C_STRING(255;$vsmsg)$vsmsg:="Cannot have Zero sequence! Sequence changed to "+String([Standard Photos]SeqNum)ALERT($vsmsg)REJECT$DoTheSave_b:=FalseElse If (vbPictureChanged)C_PICTURE($vPic1)C_LONGINT($vlWidth;$vlHt;$vlThumbNlW)$vlThumbNlW:=900PICTURE PROPERTIES([Standard Photos]Std Photo;$vlWidth;$vlHt)Case of : ([Standard Photos]PictType=BMS Photo )$vlThumbNlW:=900: (([Standard Photos]PictType=BMS Sketch )Ê|Ê([Standard Photos]PictType=BMS Chart ))If ([Standard Photos]Portrait)$vlThumbNlW:=$vlWidthElse $vlThumbNlW:=$vlWidthÊÊ`[Standard Photos]Std Photo:=[Standard Photos]Std PhotoÊ|Ê[Standard Photos]Std PhotoEnd if End case If ($vlWidth>$vlThumbNlW)C_INTEGER($colorDepth_I)Case of : ([Standard Photos]PictType=BMS Photo )$colorDepth_I:=32: (([Standard Photos]PictType=BMS Sketch )Ê|Ê([Standard Photos]PictType=BMS Chart ))$colorDepth_I:=8End case CREATE THUMBNAIL([Standard Photos]Std Photo;$vPic1;$vlThumbNlW;Int($vlHt*($vlThumbNlW/$vlWidth));Scaled to Fit ;$colorDepth_I)PICTURE PROPERTIES($vPic1;$vlWidth;$vlHt)$vPic1:=F_CompressPic ($vPic1)If ((Picture size($vPic1)<Picture size([Standard Photos]Std Photo))Ê&Ê($vlWidth>0))[Standard Photos]Std Photo:=$vPic1ÊÊ`just in casePushChange (2;->[Standard Photos]Std Photo)End if $vPic1:=$vPic1*0End if C_LONGINT($imgSize_L)$imgSize_L:=Picture size([Standard Photos]Std Photo)If ($imgSize_L>($MaxImageSize_L*1024))C_STRING(255;$vsmsg)$vsmsg:="Current image file size ("+String(($imgSize_L/1024);"###,###,###")+"Kb) is excessive!"$vsmsg:=$vsmsg+" Image has been not been saved! "$vsmsg:=$vsmsg+" Please use an image less than "+String($MaxImageSize_L;"###,### Kb")+" !"ALERT($vsmsg)[Standard Photos]Std Photo:=$vPic1*0vPictStats:="0x0"+×sCR+"(0 Bytes)"REJECT$DoTheSave_b:=FalseEnd if End if SET CURSOR(128)If ($DoTheSave_b)If (bNewPhoto)LogNewRecord (->[Inspections]InspID;->[Standard Photos]InspID;->[Standard Photos]StdPhotoID;2;"StandardPhotos")bNewPhoto:=FalseCase of : ([Standard Photos]PictType=BMS Photo )vNextPhotoSeq:=vNextPhotoSeq+1: ([Standard Photos]PictType=BMS Sketch )vNextSketchSeq:=vNextSketchSeq+1: ([Standard Photos]PictType=BMS Chart )vNextChartSeq:=vNextChartSeq+1End case End if FlushGrpChgs (2;->[Inspections]InspID;->[Standard Photos]InspID;->[Standard Photos]StdPhotoID;2)SAVE RECORD([Standard Photos])End if C_BOOLEAN(vbPhotoSeqChg)If (vbPhotoSeqChg)vbPhotoSeqChg:=FalseC_LONGINT($newv;$currID)C_STRING(2;$CurrType)$newv:=[Standard Photos]SeqNum$currID:=[Standard Photos]StdPhotoID$CurrType:=[Standard Photos]PictTypePUSH RECORD([Standard Photos])G_ResortImages ($newv;$currID;$CurrType)POP RECORD([Standard Photos])End if End if 