  ` Method: INSP_PrintInspBtn_OM  ` Description  `  ` Object method for the button that prints inspections from the inspection list in the   `  ` Combined Inspections list.  `   ` Parameters  ` $1 : $FormEvent_L (Optional)If (False)  ` ----------------------------------------------------  ` User name (OS): costasmanousakis  ` User name (4D): Designer  ` Date and time: 9/1/10, 14:29:59  ` ----------------------------------------------------Mods_2010_09   ` Modified by: costasmanousakis-(Designer)-(1/21/11 15:58:09)Mods_2011_01   `` RR  ` Modified by: costasmanousakis-(Designer)-(4/13/11 15:12:42)Mods_2011_04   `  `Added code to build the TeamMember area  ` Modified by: Costas Manousakis-(Designer)-(6/20/12 14:47:50)Mods_2012_06   `  `Made button visible to all  `  `Befoire getting the cell position of the listbox, check if there is anything in the hilite set  ` Modified by: Costas Manousakis-(Designer)-(7/9/12 12:28:31)Mods_2012_07   `  `Removed the "CANCEL" command if the inspection should not be printedMods_2012_12   `r001 ` Code for new inspection types  `Modified by: Charles Miller (12/13/12 13:07:35)  ` Modified by: Costas Manousakis-(Designer)-(1/3/13 11:18:08)Mods_2013_01   `  `Added RRS, RRF, RRD, RRO types  `  `Added call for RR@ types to INSP_LoadElmLabelsforReport  ` Modified by: Costas Manousakis-(Designer)-(4/12/13 16:17:18)Mods_2013_04   `  `Use new INSP_Read_Write_Tables  ` Modified by: Costas Manousakis-(Designer)-(5/16/13 16:47:05)Mods_2013_05   `  `separate cases for Tunnels and Redraw windowMods_2013_05   ```` *** BUG FIX *****  `  `Set name of listbox changed to LBSetBrgInsp for bridge inspections LBSetTunnelInsp for Tunnel  ` Modified by: Costas Manousakis-(Designer)-(10/22/13 12:12:25)Mods_2013_10   `  `initialize INSP_PageCountDone_b;vbInspectionLocked vars hereEnd if C_LONGINT($FormEvent_L)If (Count parameters>0)C_LONGINT($1)$FormEvent_L:=$1Else $FormEvent_L:=Form eventEnd if Case of : ($FormEvent_L=On Load )  `C_TEXT($currUser_txt)  `$currUser_txt:=◊CurrentUser_Name  `If (($currUser_txt="Designer") | (User in group($currUser_txt;"Application Admin")))  `SET VISIBLE(*;"PrintInsp@";True)  `End if : ($FormEvent_L=On Clicked )If (INSP_Inspection_list_txt="TUNNEL")C_LONGINT($rec_L;$column_l)$rec_L:=Records in set("LBSetTunnelInsp")If ($rec_L>0)GET LISTBOX CELL POSITION(*;"TunnelInspections";$column_l;$rec_L)End if Else C_LONGINT($rec_L;$column_l)$rec_L:=Records in set("LBSetBrgInsp")If ($rec_L>0)GET LISTBOX CELL POSITION(*;"Inspections";$column_l;$rec_L)End if End if If ($rec_L<1) | ($rec_L>Records in selection([Combined Inspections]))ALERT("You Must select an inspection to Print")Else C_BOOLEAN(INSP_PageCountDone_b;vbInspectionLocked)vbInspectionLocked:=TrueINSP_PageCountDone_b:=FalseINSP_Read_Write_Tables ("READ")SET AUTOMATIC RELATIONS(False;False)SET FIELD RELATION([ElementsSafety]InspID;Manual ;Manual )C_LONGINT(vCurrentPontisID_L;vCurrentCombID_L)COPY NAMED SELECTION([Combined Inspections];"COMBISNPSPREPRINT")GOTO SELECTED RECORD([Combined Inspections];$rec_L)UNLOAD RECORD([Combined Inspections])LOAD RECORD([Combined Inspections])ONE RECORD SELECT([Combined Inspections])vCurrentCombID_L:=[Combined Inspections]ID  `Get the current recordSET CURSOR(4)  `SET AUTOMATIC RELATIONS(False;False)QUERY([Inspections];[Inspections]InspID=[Combined Inspections]NBISInspID)QUERY([BMS Inspections];[BMS Inspections]Inspection ID=[Combined Inspections]BMSInspID)C_BOOLEAN(vAllRelationsOK_B)vCurrentPontisID_L:=[BMS Inspections]Inspection IDvAllRelationsOK_B:=TrueIf ([Combined Inspections]BMSInspID>0)If (vCurrentPontisID_L#[Combined Inspections]BMSInspID)vAllRelationsOK_B:=FalseEnd if If ([BMS Inspections]BIN#[Combined Inspections]BIN)vAllRelationsOK_B:=FalseEnd if End if If (vAllRelationsOK_B)LOAD RECORD([Inspections])C_BOOLEAN($vbUserAllowed)C_TEXT($CurrUser_txt)$CurrUser_txt:=◊CurrentUser_Name$vbUserAllowed:=User in group($CurrUser_txt;"MHDInspectionRWAccess")  `allow access if User is in group or if Inspection is approved.$vbUserAllowed:=($vbUserAllowed | ([Inspections]InspApproved=BMS Approved ))$vbUserAllowed:=$vbUserAllowed | (User in group($CurrUser_txt;"MHDInspectionROAccess") & [Inspections]InspComplete & ([Inspections]Insp Type#"DV@"))$vbUserAllowed:=$vbUserAllowed | User in group($CurrUser_txt;"InspectionAllAccess")$vbUserAllowed:=$vbUserAllowed | (([Inspections]Insp Type="FRZ") & [Inspections]InspComplete & ([Inspections]InspReviewed=BMS Approved ))If ($vbUserAllowed)QUERY([Combined Inspections];[Combined Inspections]NBISInspID=[Inspections]InspID)LOAD RECORD([Combined Inspections])If ([Combined Inspections]BMSInspID>0)QUERY([BMS Inspections];[BMS Inspections]Inspection ID=[Combined Inspections]BMSInspID)LOAD RECORD([BMS Inspections])DISPL_CUs QUERY([BMS Field Trip];[BMS Field Trip]Inspection ID=[Combined Inspections]BMSInspID)Else UNLOAD RECORD([BMS Inspections])UNLOAD RECORD([Cond Units])UNLOAD RECORD([BMS Field Trip])REDUCE SELECTION([BMS Inspections];0)REDUCE SELECTION([Cond Units];0)REDUCE SELECTION([BMS Field Trip];0)End if RELATE ONE([Inspections]Insp Type)G_Insp_RelateInsp (->[ElementsSafety]InspID;->[Standard Photos]InspID;->[Field Trip]InspID)INSP_BuildTmMbrArea Case of : ([Inspections]Insp Type="DV@")CONFIRM("Printing "+[Inspection Type]Description+" Inspection for BIN : "+[Inspections]BIN+" dated : "+String([Inspections]Insp Date);"Print")If (OK=1)Print_Dive_F End if : (([Inspections]Insp Type="RT@") | ([Inspections]Insp Type="RRR"))If ([Inspections]InspRtnSpcMemFlag)CONFIRM("Printing "+[Inspection Type]Description+" & Spec. Memb. Inspection for BIN : "+[Inspections]BIN+" dated : "+String([Inspections]Insp Date);"Print")Else CONFIRM("Printing "+[Inspection Type]Description+" Inspection for BIN : "+[Inspections]BIN+" dated: "+String([Inspections]Insp Date);"Print")End if If (OK=1)PRINT_ROUTINE_F End if : ([Inspections]Insp Type="CUL")If ([Inspections]InspRtnSpcMemFlag)CONFIRM("Printing "+[Inspection Type]Description+" & Spec. Memb. Inspection for BIN : "+[Inspections]BIN+" dated : "+String([Inspections]Insp Date);"Print")Else CONFIRM("Printing "+[Inspection Type]Description+" Inspection for BIN : "+[Inspections]BIN+" dated : "+String([Inspections]Insp Date);"Print")End if If (OK=1)PRINT_CULVERT_F End if : ([Inspections]Insp Type="CMI") | ([Inspections]Insp Type="FCR") | ([Inspections]Insp Type="OTH")CONFIRM("Printing "+[Inspection Type]Description+" Inspection for BIN : "+[Inspections]BIN+" dated : "+String([Inspections]Insp Date);"Print")If (OK=1)PRINT_Critical End if : ([Inspections]Insp Type="DAM")CONFIRM("Printing "+[Inspection Type]Description+" Inspection for BIN : "+[Inspections]BIN+" dated : "+String([Inspections]Insp Date);"Print")If (OK=1)PRINT_Damage End if : ([Inspections]Insp Type="FRZ")CONFIRM("Printing "+[Inspection Type]Description+" Inspection for BIN : "+[Inspections]BIN+" dated : "+String([Inspections]Insp Date);"Print")If (OK=1)PRINT_FREEZE_F End if : ([Inspections]Insp Type="CLD")CONFIRM("Printing "+[Inspection Type]Description+" Inspection for BIN : "+[Inspections]BIN+" dated : "+String([Inspections]Insp Date);"Print")If (OK=1)PRINT_Closed End if : ([Inspections]Insp Type="PON")CONFIRM("Printing "+[Inspection Type]Description+" Inspection for BIN : "+[Inspections]BIN+" dated : "+String([Inspections]Insp Date);"Print")If (OK=1)PRINT_PONTIS_F End if : ([Inspections]Insp Type="PED")CONFIRM("Printing "+[Inspection Type]Description+" Inspection for BIN : "+[Inspections]BIN+" dated : "+String([Inspections]Insp Date);"Print")If (OK=1)INSP_LoadElmLabelsforReport ([Inspections]Insp Type)PRINT_ROUTINE_F End if : ([Inspections]Insp Type="RRR")CONFIRM("Printing "+[Inspection Type]Description+" Inspection for BIN : "+[Inspections]BIN+" dated : "+String([Inspections]Insp Date);"Print")If (OK=1)INSP_LoadElmLabelsforReport ([Inspections]Insp Type)PRINT_ROUTINE_F End if : ([Inspections]Insp Type="PED")  `Pedestrian bridgeCONFIRM("Printing "+[Inspection Type]Description+" Inspection for BIN : "+[Inspections]BIN+" dated : "+String([Inspections]Insp Date);"Print")If (OK=1)INSP_LoadElmLabelsforReport ([Inspections]Insp Type)PRINT_ROUTINE_F End if : ([Inspections]Insp Type="RRA")  `Rail routine archCONFIRM("Printing "+[Inspection Type]Description+" Inspection for BIN : "+[Inspections]BIN+" dated : "+String([Inspections]Insp Date);"Print")If (OK=1)INSP_LoadElmLabelsforReport ([Inspections]Insp Type)PRINT_ROUTINE_F End if : ([Inspections]Insp Type="RRC")CONFIRM("Printing "+[Inspection Type]Description+" Inspection for BIN : "+[Inspections]BIN+" dated : "+String([Inspections]Insp Date);"Print")If (OK=1)INSP_LoadElmLabelsforReport ([Inspections]Insp Type)PRINT_CULVERT_F End if : ([Inspections]Insp Type="RRS") | ([Inspections]Insp Type="RRF") | ([Inspections]Insp Type="RRO")CONFIRM("Printing "+[Inspection Type]Description+" Inspection for BIN : "+[Inspections]BIN+" dated : "+String([Inspections]Insp Date);"Print")If (OK=1)INSP_LoadElmLabelsforReport ([Inspections]BaseType_s)PRINT_Critical End if : ([Inspections]Insp Type="RRD")CONFIRM("Printing "+[Inspection Type]Description+" Inspection for BIN : "+[Inspections]BIN+" dated : "+String([Inspections]Insp Date);"Print")If (OK=1)INSP_LoadElmLabelsforReport ([Inspections]BaseType_s)PRINT_Damage End if : ([Inspections]Insp Type="TAL")CONFIRM("Printing "+[Inspection Type]Description+" Inspection for BIN : "+[Inspections]BIN+" dated : "+String([Inspections]Insp Date);"Print")If (OK=1)INSP_LoadElmLabelsforReport ([Inspections]Insp Type)PRINT_TunnelAllItems_F End if : ([Inspections]Insp Type="TOV")CONFIRM("Printing "+[Inspection Type]Description+" Inspection for BIN : "+[Inspections]BIN+" dated : "+String([Inspections]Insp Date);"Print")If (OK=1)INSP_LoadElmLabelsforReport ([Inspections]Insp Type)PRINT_TunnelAllItems_F End if : ([Inspections]Insp Type="TSP")CONFIRM("Printing "+[Inspection Type]Description+" Inspection for BIN : "+[Inspections]BIN+" dated : "+String([Inspections]Insp Date);"Print")If (OK=1)INSP_LoadElmLabelsforReport ("TAL")PRINT_Critical End if Else ALERT("Don't know how to print "+[Inspection Type]Description+" ("+[Inspections]Insp Type+") Inspections!")End case Else ALERT("Not allowed to Print this Inspection!")UNLOAD RECORD([Inspections])End if   `if user allowedG_CloseAllTables (->[Bridge MHD NBIS])  `close all tables except the main one.GOTO SELECTED RECORD([Combined Inspections];$rec_L)Else ALERT("There are database link problems with this inspection record!! Record cannot be l"+"oaded!!")End if INSP_Read_Write_Tables ("WRITE")SET FIELD RELATION([ElementsSafety]InspID;Structure configuration ;Structure configuration )INSP_UpdateInspList USE NAMED SELECTION("COMBISNPSPREPRINT")CLEAR NAMED SELECTION("COMBISNPSPREPRINT")End if REDRAW WINDOWEnd case 