  `Method: PRV_Variables  `Description  `  ` Parameters  ` ----------------------------------------------------If (False)  ` ----------------------------------------------------  `User name (OS): Costas Manousakis  `User (4D) : Designer  `Date and time: 05/31/12, 08:01:54  ` ----------------------------------------------------  `Created : Mods_2012_05   ` Modified by: Costas Manousakis-(Designer)-(9/25/13 15:02:54)Mods_2013_09   `  `Copied to DEVEnd if C_TEXT($1;$Task_txt)$Task_txt:=$1C_LONGINT($NumReviews_L)Case of : ($Task_txt="COMPILER")COMPILER_Preservation : ($Task_txt="INIT")If (Not(Is compiled mode))COMPILER_Preservation End if PRV_BDEPT_txt:=""PRV_Dist_txt:=""PRV_BIN_txt:=""PRV_Item8_txt:=""PRV_Town_txt:=""PRV_AASHTO_txt:=""PRV_OverUnder_txt:=""PRV_SD_txt:=""PRV_FO_txt:=""PRV_OnOff_txt:=""PRV_ProjMgr_txt:=""PRV_ROWCertYN_txt:=""PRV_EnvClrYN_txt:=""PRV_TMPApprYN_txt:=""PRV_UtilitiesYN_txt:=""PRV_ConstructionYN_txt:=""PRV_First25SubDate_d:=!00/00/00!PRV_StructApproval25_d:=!00/00/00!PRV_HwyApproval25_d:=!00/00/00!PRV_First90SubDate_d:=!00/00/00!PRV_StructApproval90_d:=!00/00/00!PRV_HWYApproval75_d:=!00/00/00!PRV_FinalPSESubDate_d:=!00/00/00!PRV_FinalPSEApprove_d:=!00/00/00!PRV_25SubAppr_d:=!00/00/00!PRV_90SubAppr_d:=!00/00/00!PRV_ProjDescr_txt:=""PRV_PNFDate_d:=!00/00/00!PRV_PIFDate_d:=!00/00/00!PRV_PRCApprovalDate_d:=!00/00/00!PRV_PRCSubmitDate_d:=!00/00/00!PRV_PNFEvent_txt:=""PRV_PIFEvent_txt:=""PRV_SchedAdDate_d:=!00/00/00!PRV_ActualAdDate_d:=!00/00/00!PRV_BidOpeningSched_d:=!00/00/00!PRV_BidOpeningAct_d:=!00/00/00!PRV_BidAmmount_r:=0PRV_AwardDate_d:=!00/00/00!PRV_ConstrContr_txt:=""PRV_ConstrContractor_txt:=""PRV_Consultant_txt:=""PRV_ConsultantPM_txt:=""  `If (False)  `ARRAY TEXT(PRV_REVIEWTYPEDESC_ATXT;Size of array($ValuePairs_atxt))  `ARRAY TEXT(PRV_REVIEWTYPECODE_ATXT;Size of array($ValuePairs_atxt))  `C_LONGINT($loop_L;$Delim_k)  `For ($loop_L;1;Size of array($ValuePairs_atxt))  `$Delim_k:=Position(";";$ValuePairs_atxt{$loop_L})  `PRV_REVIEWTYPECODE_ATXT{$loop_L}:=Substring($ValuePairs_atxt{$loop_L};1;($Delim_k-1))  `PRV_REVIEWTYPEDESC_ATXT{$loop_L}:=Substring($ValuePairs_atxt{$loop_L};($Delim_k+1))  `End for   `  `End if PRV_OrigCostTotal_r:=0PRV_ActCostHRS_r:=0PRV_ActCostTLF_r:=0PRV_ActCostDC_r:=0PRV_ActCostSum_r:=0PRV_Balance_HRS_r:=0PRV_Balance_TLF_r:=0PRV_Balance_DC_r:=0PRV_Balance_Sum_r:=0PRV_Addend_HRS_r:=0PRV_Addend_TLF_r:=0PRV_Addend_DC_r:=0PRV_ApprTotal_HRS_r:=0PRV_ApprTotal_TLF_r:=0PRV_ApprTotal_DC_r:=0PRV_ApprTotal_Sum_r:=0: ($Task_txt="LOADGLOBAL")C_TEXT($paramValue_txt;$elemeRef_txt;$DomTree_txt)$paramValue_txt:=ut_GetSysParameter ("PRV_REVIEWTYPEDESCXM")PRV_REVIEWTYPESTREE_txt:=DOM Parse XML variable($paramValue_txt)$paramValue_txt:=ut_GetSysParameter ("PRV_ADTTable")PRV_ADTTABLETREE_txt:=DOM Parse XML variable($paramValue_txt)$paramValue_txt:=ut_GetSysParameter ("PRV_DetourTable")PRV_DETOURTABLETREE_txt:=DOM Parse XML variable($paramValue_txt)$paramValue_txt:=ut_GetSysParameter ("PRV_ClassTable")PRV_CLASSTABLETREE_txt:=DOM Parse XML variable($paramValue_txt)$paramValue_txt:=ut_GetSysParameter ("PRV_FormulaFactors")$DomTree_txt:=DOM Parse XML variable($paramValue_txt)$elemeRef_txt:=DOM Get XML element($DomTree_txt;"ADTFactor";1;PRV_ADTFactor_r)$elemeRef_txt:=DOM Get XML element($DomTree_txt;"DetourFactor";1;PRV_DetourFactor_r)$elemeRef_txt:=DOM Get XML element($DomTree_txt;"ClassFactor";1;PRV_ClassFactor_r)$elemeRef_txt:=DOM Get XML element($DomTree_txt;"EmergReplPoints";1;PRV_EmergRepPoints_L)$elemeRef_txt:=DOM Get XML element($DomTree_txt;"ActiveRRPoints";1;PRV_ActiveRRPoints_L)$elemeRef_txt:=DOM Get XML element($DomTree_txt;"EvacRoutePoints";1;PRV_EvacRoutePoints_L)$elemeRef_txt:=DOM Get XML element($DomTree_txt;"EmergReplFactor";1;PRV_EmergRepFactor_r)$elemeRef_txt:=DOM Get XML element($DomTree_txt;"ActiveRRFactor";1;PRV_ActiveRRFactor_r)$elemeRef_txt:=DOM Get XML element($DomTree_txt;"EvacRouteFactor";1;PRV_EvacRouteFactor_r)$elemeRef_txt:=DOM Get XML element($DomTree_txt;"HWYEvalFactor";1;PRV_HWYEvalFactor_r)$elemeRef_txt:=DOM Get XML element($DomTree_txt;"OtherFactor";1;PRV_OtherFactor_r)DOM CLOSE XML($DomTree_txt)$paramValue_txt:=ut_GetSysParameter ("PRV_Recommend")$DomTree_txt:=DOM Parse XML variable($paramValue_txt)$elemeRef_txt:=DOM Get XML element($DomTree_txt;"Choise";1;PRV_ConsMethod1_txt)$elemeRef_txt:=DOM Get XML element($DomTree_txt;"Choise";2;PRV_ConsMethod2_txt)$elemeRef_txt:=DOM Get XML element($DomTree_txt;"Choise";3;PRV_ConsMethod3_txt)DOM CLOSE XML($DomTree_txt)ARRAY TEXT(PRV_ProjectStatus_atxt;0)$paramValue_txt:=ut_GetSysParameter ("PRV_ProjectStatus")$DomTree_txt:=DOM Parse XML variable($paramValue_txt)C_LONGINT($numColors_L;$Loop_L;$AttrValue_L)C_TEXT($elemValue_txt;$AttrVal_txt)$numColors_L:=DOM Count XML elements($DomTree_txt;"Status")For ($Loop_L;1;$numColors_L)$elemeRef_txt:=DOM Get XML element($DomTree_txt;"Status";$Loop_L;$elemValue_txt)DOM GET XML ATTRIBUTE BY NAME($elemeRef_txt;"Name";$AttrVal_txt)APPEND TO ARRAY(PRV_ProjectStatus_atxt;$AttrVal_txt)End for DOM CLOSE XML($DomTree_txt)ARRAY TEXT(PRV_PreservationTypes_atxt;0)$paramValue_txt:=ut_GetSysParameter ("PRV_PreservationType")$DomTree_txt:=DOM Parse XML variable($paramValue_txt)C_LONGINT($numColors_L;$Loop_L;$AttrValue_L)C_TEXT($elemValue_txt;$AttrVal_txt)$numColors_L:=DOM Count XML elements($DomTree_txt;"PreservType")For ($Loop_L;1;$numColors_L)$elemeRef_txt:=DOM Get XML element($DomTree_txt;"PreservType";$Loop_L;$elemValue_txt)DOM GET XML ATTRIBUTE BY NAME($elemeRef_txt;"Name";$AttrVal_txt)APPEND TO ARRAY(PRV_PreservationTypes_atxt;$AttrVal_txt)End for DOM CLOSE XML($DomTree_txt)ARRAY TEXT(PRV_Fundings_atxt;0)$paramValue_txt:=ut_GetSysParameter ("PRV_Fundings")$DomTree_txt:=DOM Parse XML variable($paramValue_txt)C_LONGINT($numColors_L;$Loop_L;$AttrValue_L)C_TEXT($elemValue_txt;$AttrVal_txt)$numColors_L:=DOM Count XML elements($DomTree_txt;"Fundings")For ($Loop_L;1;$numColors_L)$elemeRef_txt:=DOM Get XML element($DomTree_txt;"Fundings";$Loop_L;$elemValue_txt)DOM GET XML ATTRIBUTE BY NAME($elemeRef_txt;"Name";$AttrVal_txt)APPEND TO ARRAY(PRV_Fundings_atxt;$AttrVal_txt)End for DOM CLOSE XML($DomTree_txt)ARRAY TEXT(PRV_LateAction_atxt;0)$paramValue_txt:=ut_GetSysParameter ("PRV_LateActions")$DomTree_txt:=DOM Parse XML variable($paramValue_txt)C_LONGINT($numColors_L;$Loop_L;$AttrValue_L)C_TEXT($elemValue_txt;$AttrVal_txt)$numColors_L:=DOM Count XML elements($DomTree_txt;"Action")For ($Loop_L;1;$numColors_L)$elemeRef_txt:=DOM Get XML element($DomTree_txt;"Action";$Loop_L;$elemValue_txt)DOM GET XML ATTRIBUTE BY NAME($elemeRef_txt;"Name";$AttrVal_txt)APPEND TO ARRAY(PRV_LateAction_atxt;$AttrVal_txt)End for DOM CLOSE XML($DomTree_txt)ARRAY TEXT(PRV_ProjectColors_atxt;0)ARRAY LONGINT(PRV_ProjectColors_aL;0)PRV_ColorMenuPopup_txt:="Change Color...<I;(-"$paramValue_txt:=ut_GetSysParameter ("PRV_AssignColors")$DomTree_txt:=DOM Parse XML variable($paramValue_txt)$numColors_L:=DOM Count XML elements($DomTree_txt;"Color")For ($Loop_L;1;$numColors_L)$elemeRef_txt:=DOM Get XML element($DomTree_txt;"Color";$Loop_L;$elemValue_txt)DOM GET XML ATTRIBUTE BY NAME($elemeRef_txt;"Name";$AttrVal_txt)DOM GET XML ATTRIBUTE BY NAME($elemeRef_txt;"Value";$AttrValue_L)APPEND TO ARRAY(PRV_ProjectColors_atxt;$AttrVal_txt)PRV_ColorMenuPopup_txt:=PRV_ColorMenuPopup_txt+";"+$AttrVal_txtAPPEND TO ARRAY(PRV_ProjectColors_aL;$AttrValue_L)End for DOM CLOSE XML($DomTree_txt)ARRAY TEXT(PRV_InHouseDesign_atxt;3)PRV_InHouseDesign_atxt{1}:="District In-House"PRV_InHouseDesign_atxt{2}:="Boston In-House"PRV_InHouseDesign_atxt{3}:="": ($Task_txt="LOAD")PRV_Variables ("RELATEBRIDGEINFO")PRV_Variables ("RELATEPINFO")PRV_Variables ("SUMMARYVARS"): ($Task_txt="RELATEPINFO")READ ONLY([PRJ_ProjectFile])READ ONLY([PRJ_ConstructionProject])READ ONLY([PRJ_Contractor])READ ONLY([PRJ_DesignContracts])QUERY([PRJ_ProjectFile];[PRJ_ProjectFile]PF_FileNumber_l=Num([Contract_Assignment_Maintenance]ProjectIS))PRV_ProjMgr_txt:=[PRJ_ProjectFile]PF_ProjectExpediter_sQUERY([PRJ_DesignContracts];[PRJ_DesignContracts]DC_DesignContractNumber_l=[Contract_Assignment_Maintenance]ContractNo)QUERY([Conslt_Name];[Conslt_Name]ConsultantNameID_l=[PRJ_DesignContracts]ConsultantNameID_l)PRV_Consultant_txt:=[Conslt_Name]ConsultantName_sPRV_PNFDate_d:=[PRJ_ProjectFile]PF_PNFDate_dPRV_PIFDate_d:=[PRJ_ProjectFile]PF_PIFDate_dPRV_PNFEvent_txt:=[PRJ_ProjectFile]PF_PNFEvent_sPRV_PIFEvent_d:=[PRJ_ProjectFile]PF_PIFDate_dPRV_SchedAdDate_d:=[PRJ_ProjectFile]PF_ScheduledAdvertising_dPRV_ActualAdDate_d:=[PRJ_ProjectFile]PF_Advertised_dPRV_PRCSubmitDate_d:=[PRJ_ProjectFile]PF_PRCSubmDate_dPRV_PRCApprovalDate_d:=[PRJ_ProjectFile]PF_PRCApprDate_dPRV_ProjDescr_txt:=[PRJ_ProjectFile]PF_Description_txt  `If ([PRJ_ProjectFile]PF_PRCEvent_s="@letter@") | ([PRJ_ProjectFile]PF_PRCEvent_s="@approved@")  `PRV_PRCApprovalDate_d:=[PRJ_ProjectFile]PF_PRCApprDate_d  `End if PRV_BidOpeningSched_d:=[PRJ_ProjectFile]PF_BidOpened_dQUERY([PRJ_ConstructionProject];[PRJ_ConstructionProject]PF_FileID_l=[PRJ_ProjectFile]PF_FileID_l)If (Records in selection([PRJ_ConstructionProject])>0)PRV_AwardDate_d:=[PRJ_ConstructionProject]CP_Awarded_dPRV_BidOpeningAct_d:=[PRJ_ConstructionProject]CP_BidOpening_dPRV_BidAmmount_r:=[PRJ_ConstructionProject]CP_LowBid_rPRV_ConstrContr_txt:=[PRJ_ConstructionProject]CP_ConstructionContractNo_sQUERY([PRJ_Contractor];[PRJ_Contractor]CTR_ContractorID_l=[PRJ_ConstructionProject]CTR_ContractorID_l)PRV_ConstrContractor_txt:=[PRJ_Contractor]CTR_CompanyName_sEnd if : ($Task_txt="RELATEBRIDGEINFO")PRV_BDEPT_txt:=""PRV_Dist_txt:=""PRV_BIN_txt:=""PRV_Item8_txt:=""PRV_Town_txt:=""PRV_AASHTO_txt:=""PRV_OverUnder_txt:=""PRV_SD_txt:=""PRV_FO_txt:=""PRV_OnOff_txt:=""READ ONLY([Bridge MHD NBIS])READ ONLY([Contract_Project_Maintenance])PRV_CTRLSelections ("BRIDGES")If (Records in selection([Contract_Project_Maintenance])>0)PRV_SD_txt:="N"PRV_FO_txt:="N"ARRAY TEXT($ContrBINS_atxt;Records in selection([Contract_Project_Maintenance]))ARRAY TEXT($ContrBDEPTS_atxt;Records in selection([Contract_Project_Maintenance]))ARRAY TEXT($ContrLoc_atxt;Records in selection([Contract_Project_Maintenance]))ARRAY TEXT($ContrTown_atxt;Records in selection([Contract_Project_Maintenance]))ARRAY TEXT($ContrDist_atxt;Records in selection([Contract_Project_Maintenance]))SELECTION TO ARRAY([Contract_Project_Maintenance]BIN;$ContrBINS_atxt;[Contract_Project_Maintenance]BridgeNo;$ContrBDEPTS_atxt;[Contract_Project_Maintenance]Location;$ContrLoc_atxt;[Contract_Project_Maintenance]Town;$ContrTown_atxt;[Contract_Project_Maintenance]District;$ContrDist_atxt)C_LONGINT($loop_L)For ($loop_L;1;Size of array($ContrBDEPTS_atxt))QUERY([Bridge MHD NBIS];[Bridge MHD NBIS]BIN=$ContrBINS_atxt{$loop_L})If (Position($ContrBDEPTS_atxt{$loop_L};PRV_BDEPT_txt)<=0)If (PRV_BDEPT_txt="")PRV_BDEPT_txt:=$ContrBDEPTS_atxt{$loop_L}Else PRV_BDEPT_txt:=PRV_BDEPT_txt+", "+$ContrBDEPTS_atxt{$loop_L}End if End if If (PRV_BIN_txt="")PRV_BIN_txt:=$ContrBINs_atxt{$loop_L}Else PRV_BIN_txt:=PRV_BIN_txt+", "+$ContrBINs_atxt{$loop_L}End if If (PRV_Item8_txt="")PRV_Item8_txt:=[Bridge MHD NBIS]Item8Else PRV_Item8_txt:=PRV_Item8_txt+", "+[Bridge MHD NBIS]Item8End if C_TEXT($Dist_txt)$Dist_txt:=String(Num($ContrDist_atxt{$loop_L}))If (Position($Dist_txt;PRV_Dist_txt)<=0)If (PRV_Dist_txt="")PRV_Dist_txt:=$Dist_txtElse PRV_Dist_txt:=PRV_Dist_txt+", "+$Dist_txtEnd if End if If (Position($ContrTown_atxt{$loop_L};PRV_Town_txt)<=0)If (PRV_Town_txt="")PRV_Town_txt:=$ContrTown_atxt{$loop_L}Else PRV_Town_txt:=PRV_Town_txt+", "+$ContrTown_atxt{$loop_L}End if End if If (PRV_OverUnder_txt="")PRV_OverUnder_txt:=Replace string(f_TrimStr ($ContrLoc_atxt{$loop_L};True;True);"  ";" ")Else PRV_OverUnder_txt:=PRV_OverUnder_txt+", "+Replace string(f_TrimStr ($ContrLoc_atxt{$loop_L};True;True);"  ";" ")End if If (PRV_AASHTO_txt="")PRV_AASHTO_txt:=String([Bridge MHD NBIS]AASHTO;"###.##")Else PRV_AASHTO_txt:=PRV_AASHTO_txt+", "+String([Bridge MHD NBIS]AASHTO;"###.##")End if If ([Bridge MHD NBIS]StructDef)PRV_SD_txt:="Y"End if C_TEXT($ThisOnOff_txt)$ThisOnOff_txt:=QR_Item26OnOff If (PRV_OnOff_txt="")PRV_OnOff_txt:=$ThisOnOff_txtElse If (Position($ThisOnOff_txt;PRV_OnOff_txt)>0)Else PRV_OnOff_txt:=PRV_OnOff_txt+","+$ThisOnOff_txtEnd if End if If ([Bridge MHD NBIS]FunctObs)PRV_FO_txt:="Y"End if End for End if : ($Task_txt="SUMMARYVARS")PRV_Variables ("SUMMSTR25")PRV_Variables ("SUMMSTR90")PRV_Variables ("SUMMFINALPSE")PRV_Variables ("SUMMFINALPSEASST")PRV_Variables ("SUMMROW")PRV_Variables ("SUMMENV")PRV_Variables ("SUMMTRA")PRV_Variables ("SUMMCONSTR")PRV_Variables ("SUMMOTHER")PRV_Variables ("TOTALHRS")PRV_Variables ("TOTALCOSTS"): ($Task_txt="SUMMSTR25") | ($Task_txt="SUMMHWY25")READ ONLY([Preservation_Reviews])QUERY([Preservation_Reviews];[Preservation_Reviews]AssignID=[Contract_Assignment_Maintenance]AssignID;*)QUERY([Preservation_Reviews]; & ;[Preservation_Reviews]ReviewTYpe_s="STR25")ORDER BY([Preservation_Reviews];[Preservation_Reviews]Received_d)$NumReviews_L:=Records in selection([Preservation_Reviews])GOTO SELECTED RECORD([Preservation_Reviews];1)PRV_First25SubDate_d:=[Preservation_Reviews]Received_dGOTO SELECTED RECORD([Preservation_Reviews];$NumReviews_L)If ([Preservation_Reviews]Action_s="APPROVED")PRV_StructApproval25_d:=[Preservation_Reviews]SentBackToPM_dEnd if QUERY([Preservation_Reviews];[Preservation_Reviews]AssignID=[Contract_Assignment_Maintenance]AssignID;*)QUERY([Preservation_Reviews]; & ;[Preservation_Reviews]ReviewTYpe_s="HWY25")ORDER BY([Preservation_Reviews];[Preservation_Reviews]Received_d)$NumReviews_L:=Records in selection([Preservation_Reviews])GOTO SELECTED RECORD([Preservation_Reviews];$NumReviews_L)If ([Preservation_Reviews]Action_s="APPROVED")PRV_HwyApproval25_d:=[Preservation_Reviews]SentBackToPM_dEnd if If ((PRV_HwyApproval25_d#!00/00/00!) & (PRV_StructApproval25_d#!00/00/00!))If (PRV_HwyApproval25_d>PRV_StructApproval25_d)PRV_25SubAppr_d:=PRV_HwyApproval25_dElse PRV_25SubAppr_d:=PRV_StructApproval25_dEnd if End if : ($Task_txt="SUMMSTR90") | ($Task_txt="SUMMHWY75")QUERY([Preservation_Reviews];[Preservation_Reviews]AssignID=[Contract_Assignment_Maintenance]AssignID;*)QUERY([Preservation_Reviews]; & ;[Preservation_Reviews]ReviewTYpe_s="STR90")ORDER BY([Preservation_Reviews];[Preservation_Reviews]Received_d)$NumReviews_L:=Records in selection([Preservation_Reviews])GOTO SELECTED RECORD([Preservation_Reviews];1)PRV_First90SubDate_d:=[Preservation_Reviews]Received_dGOTO SELECTED RECORD([Preservation_Reviews];$NumReviews_L)If ([Preservation_Reviews]Action_s="APPROVED")PRV_StructApproval90_d:=[Preservation_Reviews]SentBackToPM_dEnd if QUERY([Preservation_Reviews];[Preservation_Reviews]AssignID=[Contract_Assignment_Maintenance]AssignID;*)QUERY([Preservation_Reviews]; & ;[Preservation_Reviews]ReviewTYpe_s="HWY75")ORDER BY([Preservation_Reviews];[Preservation_Reviews]Received_d)$NumReviews_L:=Records in selection([Preservation_Reviews])GOTO SELECTED RECORD([Preservation_Reviews];$NumReviews_L)If ([Preservation_Reviews]Action_s="APPROVED")PRV_HwyApproval75_d:=[Preservation_Reviews]SentBackToPM_dEnd if If ((PRV_HwyApproval75_d#!00/00/00!) & (PRV_StructApproval90_d#!00/00/00!))If (PRV_HwyApproval75_d>PRV_StructApproval90_d)PRV_90SubAppr_d:=PRV_HwyApproval75_dElse PRV_90SubAppr_d:=PRV_StructApproval90_dEnd if End if : ($Task_txt="SUMMFINALPSE")QUERY([Preservation_Reviews];[Preservation_Reviews]AssignID=[Contract_Assignment_Maintenance]AssignID;*)QUERY([Preservation_Reviews]; & ;[Preservation_Reviews]ReviewTYpe_s="FINALPSE")ORDER BY([Preservation_Reviews];[Preservation_Reviews]Received_d)$NumReviews_L:=Records in selection([Preservation_Reviews])GOTO SELECTED RECORD([Preservation_Reviews];1)PRV_FinalPSESubDate_d:=[Preservation_Reviews]Received_dGOTO SELECTED RECORD([Preservation_Reviews];$NumReviews_L)If ([Preservation_Reviews]Action_s="APPROVED")PRV_FinalPSEApprove_d:=[Preservation_Reviews]SentBackToPM_dEnd if : ($Task_txt="SUMMFINALPSEASST"): ($Task_txt="SUMMROW")READ ONLY([Preservation_Reviews])QUERY([Preservation_Reviews];[Preservation_Reviews]AssignID=[Contract_Assignment_Maintenance]AssignID;*)QUERY([Preservation_Reviews]; & ;[Preservation_Reviews]ReviewTYpe_s="ROW")ORDER BY([Preservation_Reviews];[Preservation_Reviews]SentToREviewer_d;<)If ([Preservation_Reviews]Action_s="@Certificate@")PRV_ROWCertYN_txt:="Y"End if : ($Task_txt="SUMMENV")READ ONLY([Preservation_Reviews])QUERY([Preservation_Reviews];[Preservation_Reviews]AssignID=[Contract_Assignment_Maintenance]AssignID;*)QUERY([Preservation_Reviews]; & ;[Preservation_Reviews]ReviewTYpe_s="ENV")ORDER BY([Preservation_Reviews];[Preservation_Reviews]SentToREviewer_d;<)If ([Preservation_Reviews]Action_s="@Certificate@")PRV_EnvClrYN_txt:="Y"End if : ($Task_txt="SUMMTRA")READ ONLY([Preservation_Reviews])QUERY([Preservation_Reviews];[Preservation_Reviews]AssignID=[Contract_Assignment_Maintenance]AssignID;*)QUERY([Preservation_Reviews]; & ;[Preservation_Reviews]ReviewTYpe_s="TRA")ORDER BY([Preservation_Reviews];[Preservation_Reviews]SentToREviewer_d;<)If ([Preservation_Reviews]Action_s="@Approved@")PRV_TMPApprYN_txt:="Y"End if : ($Task_txt="SUMMCONSTR")READ ONLY([Preservation_Reviews])QUERY([Preservation_Reviews];[Preservation_Reviews]AssignID=[Contract_Assignment_Maintenance]AssignID;*)QUERY([Preservation_Reviews]; & ;[Preservation_Reviews]ReviewTYpe_s="CONSTR")ORDER BY([Preservation_Reviews];[Preservation_Reviews]SentToREviewer_d;<)If ([Preservation_Reviews]Action_s="@Approved@")PRV_ConstructionYN_txt:="Y"End if : ($Task_txt="SUMMFHWA")READ ONLY([Preservation_Reviews])QUERY([Preservation_Reviews];[Preservation_Reviews]AssignID=[Contract_Assignment_Maintenance]AssignID;*)QUERY([Preservation_Reviews]; & ;[Preservation_Reviews]ReviewTYpe_s="FHWA")ORDER BY([Preservation_Reviews];[Preservation_Reviews]SentToREviewer_d;<)If ([Preservation_Reviews]Action_s="@Approved@")PRV_FHWAApproval_txt:="Y"End if : ($Task_txt="SUMMOTHER"): ($Task_txt="CLEAR")DOM CLOSE XML(PRV_REVIEWTYPESTREE_txt)DOM CLOSE XML(PRV_ADTTABLETREE_txt)DOM CLOSE XML(PRV_DETOURTABLETREE_txt)DOM CLOSE XML(PRV_CLASSTABLETREE_txt): ($Task_txt="TOTALCOSTS")PRV_OrigCostTotal_r:=[Contract_Assignment_Maintenance]OrigSub_TotalLimFee_r+[Contract_Assignment_Maintenance]OrigSub_DirectCost_rC_LONGINT(PRV_CURRASSIGNID_L)PRV_CURRASSIGNID_L:=[Contract_Assignment_Maintenance]AssignIDC_DATE(PRV_BlankDate_d)PRV_BlankDate_d:=!00/00/00!Begin SQLselect sum(Addendum_Maintenance.Appr_DirectExpense_r), sum(Addendum_Maintenance.Appr_TotalLimmitFee_r )from Addendum_Maintenancewhere Addendum_Maintenance.AssignID = :PRV_CURRASSIGNID_L and  Addendum_Maintenance.Approved_d > :PRV_BlankDate_d into :PRV_Addend_DC_r, :PRV_Addend_TLF_r ;End SQLPRV_ApprTotal_TLF_r:=[Contract_Assignment_Maintenance]Actual_TotalLimitFee+PRV_Addend_TLF_rPRV_ApprTotal_DC_r:=[Contract_Assignment_Maintenance]Actual_DirectExpense+PRV_Addend_DC_rBegin SQLselect sum(Invoice_Maintenance.DirectExpenses), sum(Invoice_Maintenance.TotalLimFeeConstr+Invoice_Maintenance.TotalLimFeeDes )from Invoice_Maintenancewhere Invoice_Maintenance.AssignID_L = :PRV_CURRASSIGNID_L and  Invoice_Maintenance.DateProcessFoward > :PRV_BlankDate_d into :PRV_ActCostDC_r, :PRV_ActCostTLF_r ;End SQLPRV_ActCostSum_r:=PRV_ActCostTLF_r+PRV_ActCostDC_rPRV_ApprTotal_Sum_r:=PRV_ApprTotal_TLF_r+PRV_ApprTotal_DC_rPRV_Balance_TLF_r:=PRV_ApprTotal_TLF_r-PRV_ActCostTLF_rPRV_Balance_DC_r:=PRV_ApprTotal_DC_r-PRV_ActCostDC_rPRV_Balance_Sum_r:=PRV_Balance_TLF_r+PRV_Balance_DC_r: ($Task_txt="TOTALHRS")C_LONGINT(PRV_CURRASSIGNID_L)PRV_CURRASSIGNID_L:=[Contract_Assignment_Maintenance]AssignIDC_DATE(PRV_BlankDate_d)PRV_BlankDate_d:=!00/00/00!Begin SQLselect sum(Addendum_Maintenance.Appr_HRS_r)from Addendum_Maintenancewhere Addendum_Maintenance.AssignID = :PRV_CURRASSIGNID_L and  Addendum_Maintenance.Approved_d > :PRV_BlankDate_d into :PRV_Addend_HRS_r ;End SQLPRV_ApprTotal_HRS_r:=[Contract_Assignment_Maintenance]AgreedTotalHRS_r+PRV_Addend_HRS_rBegin SQLselect sum(Invoice_Maintenance.TotalHRS_r)from Invoice_Maintenancewhere Invoice_Maintenance.AssignID_L = :PRV_CURRASSIGNID_L and  Invoice_Maintenance.DateProcessFoward > :PRV_BlankDate_d into :PRV_ActCostHRS_r ;End SQLPRV_Balance_HRS_r:=PRV_ApprTotal_HRS_r-PRV_ActCostHRS_rEnd case   `End PRV_Variables