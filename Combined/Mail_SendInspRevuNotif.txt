  ` Method: Mail_SendInspRevuNotif  ` Description  `  ` Send and email notification of an inspection review action  `  ` from DBIE to consultant  `  `  ` Email will be sent to team leader  `  `  ` For cons inspecions to the inspection contact of the consultant.  All inspection contacts will be available to be used if needed  `  ` the current user will be CC'd to receive the email.  `  ` The DBIE will be picked from the inspection report and from the current DBIE list   `  ` he is not the sender or the team leader  ` Parameters  ` $0 : $SentOK : BooleanIf (False)  ` ----------------------------------------------------  ` User name (OS): costasmanousakis  ` User name (4D): Designer  ` Date and time: 12/21/06,   ` ----------------------------------------------------Mods_2006_CM07   ` Modified by: costasmanousakis-(Designer)-(1/25/2007 14:24:12)Mods_2007_CM05a   ` Modified by: costasmanousakis-(Designer)-(1/27/2007 19:23:44)Mods_2007_CM05a   ` Modified by: costasmanousakis-(Designer)-(2/2/2007 12:33:22)Mods_2007_CM06   ` Modified by: costasmanousakis-(Designer)-(5/29/2007 15:08:10)Mods_2007_CM10a   ` Modified by: costasmanousakis-(Designer)-(10/17/11 16:45:44)Mods_2011_10   `  `Will now be able to send emails to Mass DOT team leaders, also notfy the DBIE  ` Modified by: costasmanousakis-(Designer)-(10/24/11 09:47:16)Mods_2011_10   `  `Use global var ◊PERS_MyEmail_txt and method ut_setPrefSMTPServer  ` Modified by: costasmanousakis-(Designer)-(11/25/11 18:22:18)Mods_2011_11   `  `For DBIE email add the DBIE Email to the cc list; if the curr user is not the DBIE.   `  `use method PERS_GetInfo to get personnel information.  ` Modified by: costasmanousakis-(Designer)-(12/5/11 18:20:50)Mods_2011_12   `  `Clean up logic on selecting the DBIE who will be ccd upon review  ` Modified by: Costas Manousakis-(Designer)-(10/25/13 13:51:50)Mods_2013_10   `  `Added ability to include more people in the cc of the notification. Use groups in the pers_groups table  `  `named "DBIEReviewNotifCC" or "AreaReviewNotifCC" by inspection responsibility.  `  `Dive (DV@), Tunnel (T@) or Rail (RR@) inspections are excluded for now.  `  `Added to the message displayed the CC list;  `  `Don't set Conslt Address table to RW if it was not RW beforeEnd if C_LONGINT($err;$smtp_id)C_TEXT(◊pref_SMTP;$Prevpref_SMTP_txt;tFromEmailAddress;$tToBuilt;$tCCBuilt;$tbCCBuilt;tSubject;tMailNote;AuthUserName_txt)C_BOOLEAN($0;$SentOK;$OK;◊SHOWERRORS;bMailPriority_b)$err:=IT_MacTCPInit C_LONGINT(vApproveLvl)  `process var 1 or 2If (◊pref_SMTP="")ut_setPrefSMTPServer End if tFromEmailAddress:="MADOT Insp Review <donotreply@DOT.state.ma.us>"$tCCBuilt:=""If (◊PERS_MyEmail_txt#"")tFromEmailAddress:=◊PERS_MyEmail_txt$tCCBuilt:=tFromEmailAddressEnd if C_TEXT($TmLdrName_txt;$TmLdrEmail_txt;$TmLdrEmployer_txt)$tToBuilt:=""$TmLdrName_txt:=""$TmLdrEmail_txt:=""$TmLdrEmployer_txt:=""PERS_GetInfo ([Inspections]TeamLeader;"FIRSTLAST";->$TmLdrName_txt;"EMAIL";->$TmLdrEmail_txt;"EMPLOYER";->$TmLdrEmployer_txt)$TmLdrName_txt:=$TmLdrName_txt+" from: "+$TmLdrEmployer_txt$tToBuilt:=$TmLdrEmail_txtC_TEXT($InspDBIE_Email_txt;$DBIEName_txt;$GroupDBIE_Email_txt)$InspDBIE_Email_txt:=""  `email of dbie on insp report$GroupDBIE_Email_txt:=""  `email of dbie from personnel groupsC_INTEGER($InspDBIE_i;$BridgeDBIE_i)$InspDBIE_i:=[Inspections]DBrInspEngr$BridgeDBIE_i:=-1C_LONGINT($Rowfound_L)If ($InspDBIE_i#◊CurrentUser_PID)  `get the email of the DBIE on the inspetion formPERS_GetInfo ($InspDBIE_i;"EMAIL";->$InspDBIE_Email_txt)End if If ([Inspections]Insp Type#"DV@")$Rowfound_L:=Find in array(◊INSP_DBIEResp_atxt;[Bridge MHD NBIS]InspResp)If ($Rowfound_L>0)$BridgeDBIE_i:=GRP_GetGroupRepID (◊INSP_DBIEGroups_atxt{$Rowfound_L})End if If (($BridgeDBIE_i#$InspDBIE_i) & ($BridgeDBIE_i>0))PERS_GetInfo ($BridgeDBIE_i;"EMAIL";->$GroupDBIE_Email_txt)End if If (GRP_UserInGroup (◊INSP_DBIEGroups_atxt{$Rowfound_L};$InspDBIE_i)=0)  `if the SBIE is not ActiveDBIE - he does not get cc'd. he will if he is doing the review anyway.$InspDBIE_Email_txt:=""End if Else   `Special case for Dive inspections look in the UWInspEngineer pers_group to send emails$BridgeDBIE_i:=GRP_GetGroupRepID ("UWInspEngineer")If (($BridgeDBIE_i#$InspDBIE_i) & ($BridgeDBIE_i>0))PERS_GetInfo ($BridgeDBIE_i;"EMAIL";->$GroupDBIE_Email_txt)End if End if Case of : ($GroupDBIE_Email_txt="") & ($InspDBIE_Email_txt=""): ($GroupDBIE_Email_txt="")$tCCBuilt:=$tCCBuilt+","+$InspDBIE_Email_txt: ($InspDBIE_Email_txt="")$tCCBuilt:=$tCCBuilt+","+$GroupDBIE_Email_txtElse $tCCBuilt:=$tCCBuilt+","+$GroupDBIE_Email_txt+","+$InspDBIE_Email_txtEnd case   `Add Additional CCs depending on whether it is a DBIE review or an Area Review  `exclude Dive, Tunnel, Rail inspections for nowIf (([Inspections]Insp Type#"DV@") & ([Inspections]Insp Type#"T@") & ([Inspections]Insp Type#"RR@"))ARRAY LONGINT($ccIds_AL;0)ARRAY TEXT($ccNames_atxt;0)C_TEXT($CCgroupName_txt)Case of : (vApproveLvl=1)$CCgroupName_txt:="DBIEReviewNotifCC": (vApproveLvl=2)$CCgroupName_txt:="AreaReviewNotifCC"End case $CCgroupName_txt:=$CCgroupName_txt+[Bridge MHD NBIS]InspRespGRP_GetMembersOfGrps (->$ccIds_AL;->$ccNames_atxt;"";$CCgroupName_txt)If (Size of array($ccIds_AL)>0)C_BOOLEAN($RoStatePersonnel_b)$RoStatePersonnel_b:=Read only state([Personnel])READ ONLY([Personnel])C_LONGINT($loop_L)For ($loop_L;1;Size of array($ccIds_AL))QUERY([Personnel];[Personnel]Person ID=$ccIds_AL{$loop_L})If (Records in selection([Personnel])=1)LOAD RECORD([Personnel])If ([Personnel]EmailAddress_s#"")If ($tCCBuilt#"")$tCCBuilt:=$tCCBuilt+","+[Personnel]EmailAddress_sElse $tCCBuilt:=[Personnel]EmailAddress_sEnd if End if End if End for If (Not($RoStatePersonnel_b))READ WRITE([Personnel])End if End if End if C_TEXT($msg;$CancelMsg_txt)$CancelMsg_txt:="Don't Send Email"$msg:=◊sCR+"Multiple addresses can be entered separated by comma"Case of : ([Inspections]Agency="Mass. Highway@") | ([Inspections]Agency="MHD Underwater@")If ($tToBuilt#"")$msg:="Verify the e-mail address for "+$TmLdrName_txt+"."+$msgElse $msg:="Please Enter the e-mail address for "+$TmLdrName_txt+"."+$msgEnd if $msg:=$msg+Char(13)+"Email will also be sent to :"+$tCCBuilt$tToBuilt:=ut_Request ($msg;->tFromEmailAddress;$tToBuilt;"";$CancelMsg_txt)  `need a pointer to something not an arrayElse C_BOOLEAN($ROStateConsAddrs_b)$ROStateConsAddrs_b:=Read only state([Conslt Address])READ ONLY([Conslt Address])QUERY([Conslt Address];[Conslt Address]ConsltName=(Substring([Inspections]Agency;1;(Length([Inspections]Agency)\2))+"@"))QUERY SELECTION([Conslt Address];[Conslt Address]Func_Insp=True)QUERY SELECTION([Conslt Address];[Conslt Address]Email#"")If (Records in selection([Conslt Address])>=1)ARRAY STRING(80;arr_ConsEmails_txt;0)SELECTION TO ARRAY([Conslt Address]Email;arr_ConsEmails_txt)If (arr_ConsEmails_txt{1}#$tToBuilt)  `in case the contact is the team leaderIf ($tToBuilt#"")$tToBuilt:=arr_ConsEmails_txt{1}+","+$tToBuiltElse $tToBuilt:=arr_ConsEmails_txt{1}End if End if If (Size of array(arr_ConsEmails_txt)>1)$msg:="Verify the e-mail address for "+[Inspections]Agency+". You can also select an email address from the dropdown."+$msg$msg:=$msg+Char(13)+"Email will also be sent to :"+$tCCBuilt$tToBuilt:=ut_Request ($msg;->arr_ConsEmails_txt;$tToBuilt;"";$CancelMsg_txt)Else $msg:="Verify the e-mail address for "+[Inspections]Agency+"."+$msg$msg:=$msg+Char(13)+"Email will also be sent to :"+$tCCBuilt$tToBuilt:=ut_Request ($msg;->tFromEmailAddress;$tToBuilt;"";$CancelMsg_txt)  `need a pointer to something not an arrayEnd if ARRAY STRING(80;arr_ConsEmails_txt;0)Else $msg:="Enter the e-mail address for "+[Inspections]Agency+"."+$msg$msg:=$msg+Char(13)+"Email will also be sent to :"+$tCCBuilt$tToBuilt:=ut_Request ($msg;->tFromEmailAddress;$tToBuilt;"";$CancelMsg_txt)  `need a pointer to something not an arrayEnd if If (Not($ROStateConsAddrs_b))READ WRITE([Conslt Address])End if End case If (OK=1)$tbCCBuilt:=""tSubject:="Notification for "+[Inspection Type]Description+" Inspection, BIN "+[Inspections]BIN+",  "+String([Inspections]Insp Date;Internal date short )If (Is record loaded([Bridge MHD NBIS]))UNLOAD RECORD([Bridge MHD NBIS])End if SET AUTOMATIC RELATIONS(False;False)READ ONLY([Bridge MHD NBIS])LOAD RECORD([Bridge MHD NBIS])tMailNote:=G_Insp_SetTitle +" for BIN:"+[Inspections]BIN+"-BDEPT:"+[Bridge MHD NBIS]BDEPT+" inspected on "+String([Inspections]Insp Date;Internal date short )READ WRITE([Bridge MHD NBIS])SET AUTOMATIC RELATIONS(True;True)If (vbReject=1)If (vtRevComments#"")tMailNote:=tMailNote+" was Rejected with the following comments : "+Char(13)tMailNote:=tMailNote+vtRevComments+Char(13)Else tMailNote:=tMailNote+" was Rejected with no comments"+Char(13)End if Else tMailNote:=tMailNote+" was Approved."+Char(13)End if tMailNote:=tMailNote+Char(13)+"----------------------------------"+Char(13)tMailNote:=tMailNote+"E-mail sent from 4D process executed by user "+◊PERS_MyFullName_txt+" on "+String(Current date(*);Internal date short )+Char(13)AuthUserName_txt:=""  `no authorization$SentOK:=False  `A flag to indicate if we make it through all of the calls◊SHOWERRORS:=TrueCase of : (Not(mail_ErrorCheck ("SMTP_New";SMTP_New ($smtp_id))))  `Creates a new message envelope assigned to $smtp_id: (Not(SMTPAuth ($smtp_id)))  `authorize if need be: (Not(mail_ErrorCheck ("SMTP_Host";SMTP_Host ($smtp_id;◊pref_SMTP;0))))  `point to a smtp server that will handle our mail delivery: (Not(mail_ErrorCheck ("SMTP_From";SMTP_From ($smtp_id;tFromEmailAddress;0))))  `: (Not(mail_ErrorCheck ("SMTP_ReplyTo";SMTP_ReplyTo ($smtp_id;tFromEmailAddress;0))))  `reply to… : (Not(mail_ErrorCheck ("SMTP_To";SMTP_To ($smtp_id;$tToBuilt;0))))  `primary recipient{s} of the message: (Not(mail_ErrorCheck ("SMTP_Cc";SMTP_Cc ($smtp_id;$tCCBuilt;0))))  `people who should get copies of the message: (Not(mail_ErrorCheck ("SMTP_Bcc";SMTP_Bcc ($smtp_id;$tbCCBuilt;0))))  `people who will get the message w/o the others knowing it: (Not(mail_ErrorCheck ("SMTP_Subject";SMTP_Subject ($smtp_id;tSubject;0))))  `the topic : (Not(mail_ErrorCheck ("SMTP_Comments";SMTP_Comments ($smtp_id;"Sent via 4D INTERNET Tools from MHD BMS";0))))  `extra junk to put in header, recipient not likely to see this: (Not(mail_ErrorCheck ("SMTP_Body";SMTP_Body ($smtp_id;tMailNote;0)))): (Not(mail_ErrorCheck ("SMTP_Send";SMTP_Send ($smtp_id))))  `were done, so let's send it...Else $SentOK:=True  `message was composed and mailed successfullyEnd case If ($smtp_id#0)  `If a Message Envelope was created we should clear it now$OK:=mail_ErrorCheck ("SMTP_Clear";SMTP_Clear ($smtp_id))  `clear our message from memory and free up spaceEnd if Else End if tFromEmailAddress:=""$tToBuilt:=""$tCCBuilt:=""$tbCCBuilt:=""tSubject:=""tMailNote:=""$0:=$SentOK