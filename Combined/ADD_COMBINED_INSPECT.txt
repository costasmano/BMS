If (False)  `ADD_COMBINED_INSPECT  `Author: Albert Leung, 2004  `Add a new NBIS inspection and Pontis report  `Mods_2005_CM06 Mods_2005_CM09 Mods_2005_CM12   ` Modified by: costasmanousakis-(Designer)-(11/17/05 15:03:37)Mods_2005_CM19   ` Modified by: costasmanousakis-(Designer)-(8/20/08 08:17:27)Mods_2008_CM_5404   `  `Use Method INSP_UpdateInspList  ` Modified by: costasmanousakis-(Designer)-(3/10/09 14:27:55)Mods_2009_03   `  `Use the current user as the default team leader  ` Modified by: Costas Manousakis-(Designer)-(1/2/13 11:51:45)Mods_2013_01   `  `Added call to ut_Read_Write_Tables ("WRITE";.. to set tables to RW before creating new inspection  ` Modified by: Costas Manousakis-(Designer)-(5/22/13 16:36:57)Mods_2013_05   `  `replaced ut_Read_Write_Tables with  INSP_Read_Write_Tables  ` Modified by: Costas Manousakis-(Designer)-(11/14/13 09:52:32)Mods_2013_11   `  `screen inspections created here if they are for tunnel recordsEnd if C_STRING(3;$vsInspType)  `Add a Pontis InspectionC_BOOLEAN(vAddBlank)$vsInspType:=""vAddBlank:=True$vsInspType:=GetInspType   `screen inspections created here if they are for tunnel recordsIf (([Bridge MHD NBIS]Item8 BridgeCat="TNL") | ([Bridge MHD NBIS]Item8 BridgeCat="BTS"))If ($vsInspType="R@") | ($vsInspType="CUL") | ($vsInspType="CMI") | ($vsInspType="FCR")READ ONLY([Inspection Type])QUERY([Inspection Type];[Inspection Type]Code=$vsInspType)CONFIRM("Are you sure you want to create a "+[Inspection Type]Description+" Inspection for a TUNNEL record? You can create Tunnel inspections from the <Tunnel Inspections> module on the Bridge Input screen.";"Continue";"Cancel")If (Ok=1)Else $vsInspType:=""End if End if End if If ($vsInspType#"")INSP_Read_Write_Tables ("WRITE")  `Add a record for a new combined inspection  CREATE RECORD([Combined Inspections])Inc_Sequence ("CombinedInspections";->[Combined Inspections]ID)  `2004-08-03 ASL  `This should be a fixed parent record and relative local recordInitChangeStack (1)[Combined Inspections]InspDate:=Current date(*)[Combined Inspections]BIN:=[Bridge MHD NBIS]BIN[Combined Inspections]InspType:=$vsInspTypeSAVE RECORD([Combined Inspections])PushChange (1;->[Combined Inspections]InspType)If (False)LogChanges (->[Combined Inspections]BIN;->[Bridge MHD NBIS]BIN;->[Combined Inspections]BIN;->[Combined Inspections]ID;1)End if PushChange (1;->[Combined Inspections]InspType)PushChange (1;->[Combined Inspections]InspDate)LogNewRecord (->[Bridge MHD NBIS]BIN;->[Combined Inspections]BIN;->[Combined Inspections]ID;1;"CombinedInspections")FlushGrpChgs (1;->[Bridge MHD NBIS]BIN;->[Combined Inspections]BIN;->[Combined Inspections]ID;1)  `Changed Dec-2001INPUT FORM([Inspections];"BlankCombinedStarter")CREATE RECORD([Inspections])  `Set default valuesInc_Sequence ("Inspections";->[Inspections]InspID)[Inspections]BIN:=[Bridge MHD NBIS]BINLogNewRecord (->[Bridge MHD NBIS]BIN;->[Inspections]BIN;->[Inspections]InspID;1;"Inspections")[Combined Inspections]NBISInspID:=[Inspections]InspID  `This is a relative fieldLogLink (->[Combined Inspections]NBISInspID;->[Bridge MHD NBIS]BIN;->[Combined Inspections]BIN;->[Combined Inspections]ID;1)[Inspections]Insp Type:=$vsInspTypePushChange (1;->[Inspections]Insp Type)[Inspections]InspReviewed:=BMS Not Reviewed PushChange (1;->[Inspections]InspReviewed)[Inspections]InspApproved:=BMS Not Reviewed PushChange (1;->[Inspections]InspApproved)[Inspections]InspComplete:=FalsePushChange (1;->[Inspections]InspComplete)[Inspections]Insp Date:=Current date(*)PushChange (1;->[Inspections]Insp Date)G_SIA2Inspection   `get SIA data into [Inspections] fields    `Need a creation date before saving[Inspections]DateCreated:=Current date(*)  `Add the difference between the server datePushChange (1;->[Inspections]DateCreated)[Inspections]TimeCreated:=Current time(*)  `Add the difference between the server timePushChange (1;->[Inspections]TimeCreated)[Inspections]Modified By:=Current userPushChange (1;->[Inspections]Modified By)FlushGrpChgs (1;->[Bridge MHD NBIS]BIN;->[Inspections]BIN;->[Inspections]InspID;1)If (◊CurrentUser_PID>0)[Inspections]TeamLeader:=◊CurrentUser_PIDLogLink (->[Inspections]TeamLeader;->[Bridge MHD NBIS]BIN;->[Inspections]BIN;->[Inspections]InspID;1;->[Personnel]Person ID)End if SAVE RECORD([Inspections])SAVE RECORD([Combined Inspections])PUSH RECORD([Inspections])PUSH RECORD([Combined Inspections])SET CURSOR(4)SHORT_MESSAGE ("Configuring Inspection...")G_AddDefInspElmts CLOSE WINDOWPOP RECORD([Combined Inspections])ONE RECORD SELECT([Combined Inspections])POP RECORD([Inspections])  `Create the BMS inspectionCase of : (([Inspections]Insp Type="RT@") | ([Inspections]Insp Type="CUL"))  `This is a new record.    -Add Pontis inspectionCREATE RECORD([BMS Inspections])Inc_Sequence ("Pontis Insp ID";->[BMS Inspections]Inspection ID)[Combined Inspections]BMSInspID:=[BMS Inspections]Inspection ID[BMS Inspections]BIN:=[Bridge MHD NBIS]BIN[BMS Inspections]Insp Date:=Current date(*)[BMS Inspections]Span Group No:=1[BMS Inspections]Metric:=False  `Change this default after all old inspections are entered.[BMS Inspections]Agency:=[Inspections]AgencyTimeStamp (->[BMS Inspections];->[BMS Inspections]DateCreated;->[BMS Inspections]TimeCreated;->[BMS Inspections]DateModified;->[BMS Inspections]TimeModified)[BMS Inspections]Modified By:=Current user[BMS Inspections]TeamLeader:=[Inspections]TeamLeader  `This record must be saved at the beginning to prevent [Cond Units] records  `from being orphaned by a cancel.  `Implementing transactions might be a better method.SAVE RECORD([BMS Inspections])SAVE RECORD([Combined Inspections])COPY NAMED SELECTION([Combined Inspections];"curCombinedInspection")  `Record the log.LogNewRecord (->[Bridge MHD NBIS]BIN;->[BMS Inspections]BIN;->[BMS Inspections]Inspection ID;1;"Pontis Insp ID")  `This is a relative fieldLogLink (->[Combined Inspections]BMSInspID;->[Bridge MHD NBIS]BIN;->[Combined Inspections]BIN;->[Combined Inspections]ID;1)InitChangeStack (1)PushChange (1;->[BMS Inspections]Insp Date)PushChange (1;->[BMS Inspections]Span Group No)PushChange (1;->[BMS Inspections]DBrInspEngr)PushChange (1;->[BMS Inspections]Modified By)PushChange (1;->[BMS Inspections]DateCreated)PushChange (1;->[BMS Inspections]TimeCreated)PushChange (1;->[BMS Inspections]Metric)PushChange (1;->[BMS Inspections]Agency)FlushGrpChgs (1;->[Bridge MHD NBIS]BIN;->[BMS Inspections]BIN;->[BMS Inspections]Inspection ID;1)LogLink (->[BMS Inspections]TeamLeader;->[Bridge MHD NBIS]BIN;->[BMS Inspections]BIN;->[BMS Inspections]Inspection ID;1;->[Personnel]Person ID)Else   `No Pontis inspection for other Inspection types,  `no [BMS Inspections] record will be created.[Combined Inspections]BMSInspID:=-1SAVE RECORD([Combined Inspections])  `This is a relative fieldLogLink (->[Combined Inspections]BMSInspID;->[Bridge MHD NBIS]BIN;->[Combined Inspections]BIN;->[Combined Inspections]ID;1)End case SET CURSOR(0)MODIFY RECORD([Inspections])INSP_UpdateInspList End if 