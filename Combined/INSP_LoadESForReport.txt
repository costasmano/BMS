  `----------------------------------------------------  `User name (OS): Charles Miller  `Date and time: 11/01/12, 16:10:34  `----------------------------------------------------  `Method: insp_LoadESForReport  `Description  `This method will load data from element safety into variables on the form.   `You should call Compiler_NewInspReports before to make sure all are typed  `Assume that [Inspection Type]ElementNumbers_txt is filled as follows  `N58 the element category type folowed by a CR  `The element numbers, followed by a CR and delimted by commas  `100,101,102,103,118,106,107,108,109,110,111,112,114,115,116   `The element labels, followed by a CR and delimted by commas  `1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.  `N59  `200,201,202,203,204,205,206,207,208,209,210,211,212, 213,214,215,216,217,218,219,220,227  `1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.  ` Parameters  ` ----------------------------------------------------If (False)Mods_2012_10   `r004 `   `Modified by: Charles Miller (11/1/12 16:10:46)  ` Modified by: Costas Manousakis-(Designer)-(12/27/12 14:51:44)Mods_2012_12   `  `Allow extra line for the element labels  ` Modified by: Costas Manousakis-(Designer)-(5/2/13 15:50:42)Mods_2013_05   `r001 ` `removed call to Compiler_NewInspReports  `Modified by: Charles Miller (5/2/13 16:34:33)End if C_TEXT($1;$InspectionType_txt;$ElementType_txt;$ElementNumbers_txt;$T_final;$ElementLbls_txt)$InspectionType_txt:=$1C_LONGINT($MaxOffset_L;$Offset_L;$Position_L;$Loop_l;$Size_l;$ElementPosition_l;$ElementDictPos_l)ut_Read_Write_Tables ("READ";->[Inspection Type];->[ElementDict];->[Element Cat])C_POINTER($VTptr;$VRptr;$VDptr;$VrDptr;$vRemptr)G_Insp_RelateInsp (->[ElementsSafety]InspID)CREATE SET([ElementsSafety];"$MySet")If ([Inspection Type]Code=$InspectionType_txt)Else QUERY([Inspection Type];[Inspection Type]Code=$InspectionType_txt)End if $MaxOffset_L:=Length([Inspection Type]ElementNumbers_txt)$Offset_L:=1Repeat $Position_L:=Position("\r";[Inspection Type]ElementNumbers_txt;$Offset_L)If ($Position_L>0)$ElementType_txt:=Substring([Inspection Type]ElementNumbers_txt;$Offset_L;$Position_L-$Offset_L)  `N58, n60 etc$Offset_L:=$Position_L+1$Position_L:=Position("\r";[Inspection Type]ElementNumbers_txt;$Offset_L)  `element numbers 100, 101, etcIf ($Position_L>0)$ElementNumbers_txt:=Substring([Inspection Type]ElementNumbers_txt;$Offset_L;$Position_L-$Offset_L)  `element numbers 100, 101, etc $Offset_L:=$Position_L+1$Position_L:=Position("\r";[Inspection Type]ElementNumbers_txt;$Offset_L)  `element labels 1.,2.,a. etcIf ($Position_L>0)$ElementLbls_txt:=Substring([Inspection Type]ElementNumbers_txt;$Offset_L;$Position_L-$Offset_L)  ` `element labels 1.,2.,a. etc$Offset_L:=$Position_L+1Else $ElementLbls_txt:=Substring([Inspection Type]ElementNumbers_txt;$Offset_L)$Offset_L:=$MaxOffset_LEnd if Else $Offset_L:=$MaxOffset_LEnd if ARRAY TEXT($ElementNumbers_atxt;0)ARRAY TEXT($ElementNumberLabels_atxt;0)ut_NewTextToArray ($ElementNumbers_txt;->$ElementNumbers_atxt;",")ut_NewTextToArray ($ElementLbls_txt;->$ElementNumberLabels_atxt;",")Else $Offset_L:=$MaxOffset_LEnd if USE SET("$MySet")QUERY SELECTION([ElementsSafety];[ElementDict]Category=$ElementType_txt)$Size_l:=0ARRAY INTEGER($ElementNo_al;$Size_l)ARRAY STRING(2;$AltRating_as;$Size_l)ARRAY STRING(3;$Deficiency_as;$Size_l)  `DeficienciesARRAY STRING(5;$Priority_as;$Size_l)  `Priority converted to deficieny + priorityARRAY STRING(40;$Description_as;$Size_l)ARRAY STRING(1;$Rating_as;$Size_l)$Size_l:=Records in selection([ElementsSafety])ARRAY INTEGER($ElementNo_al;$Size_l)ARRAY STRING(2;$AltRating_as;$Size_l)ARRAY STRING(3;$Deficiency_as;$Size_l)  `DeficienciesARRAY STRING(5;$Priority_as;$Size_l)  `Priority converted to deficieny + priorityARRAY STRING(40;$Description_as;$Size_l)ARRAY STRING(1;$Rating_as;$Size_l)SELECTION RANGE TO ARRAY(1;$Size_l;[ElementsSafety]ElementNo;$ElementNo_al;[ElementsSafety]Rating;$Rating_as;[ElementsSafety]AltRating;$AltRating_as;[ElementsSafety]Deficiency;$Deficiency_as;[ElementsSafety]Priority;$Priority_as;[ElementsSafety]Description;$Description_as)For ($Loop_l;1;Size of array($ElementNo_al))  `Jan-2002 : Remove spaces from Deficiency$Deficiency_as{$Loop_l}:=Replace string($Deficiency_as{$Loop_l};" ";"")  `Apr-2002 : Remove spaces from Priority$Priority_as{$Loop_l}:=Replace string($Priority_as{$Loop_l};" ";"")If ($Deficiency_as{$Loop_l}="N")$Deficiency_as{$Loop_l}:="-"  `default display of no deficiencyEnd if If (Length($Priority_as{$Loop_l})#0)$Priority_as{$Loop_l}:=$Deficiency_as{$Loop_l}+"-"+$Priority_as{$Loop_l}  `if there is a prio combine def+prioElse $Priority_as{$Loop_l}:=$Deficiency_as{$Loop_l}  ` else set it to deficiency alone            End if End for C_LONGINT($ReturnLengthLimit_L)$ReturnLengthLimit_L:=INSP_ReturnCMLength For ($Loop_l;1;Size of array($ElementNumbers_atxt))$ElementPosition_l:=Find in array($ElementNo_al;Num($ElementNumbers_atxt{$Loop_l}))$ElementDictPos_l:=Find in array(◊ELMTDICT_ELNum_ai;Num($ElementNumbers_atxt{$Loop_l}))$VTptr:=Get pointer("VT"+$ElementType_txt+"_"+String($Loop_l))$VDptr:=Get pointer("VD"+$ElementType_txt+"_"+String($Loop_l))$VRptr:=Get pointer("VR"+$ElementType_txt+"_"+String($Loop_l))$VrDptr:=Get pointer("VrD"+$ElementType_txt+"_"+String($Loop_l))If ([Inspections]Insp Type="TOV")$vRemptr:=Get pointer("VRM"+$ElementType_txt+"_"+String($Loop_l))End if If ($ElementPosition_l>0)Case of : (Length($Description_as{$ElementPosition_l})>0)$VTptr->:=$ElementNumberLabels_atxt{$Loop_l}+" "+$Description_as{$ElementPosition_l}Else $VTptr->:=$ElementNumberLabels_atxt{$Loop_l}+" "+◊ELMTDICT_Txt_as{$ElementDictPos_l}End case $VDptr->:=$Priority_as{$ElementPosition_l}$VRptr->:=$Rating_as{$ElementPosition_l}$VrDptr->:=$AltRating_as{$ElementPosition_l}C_LONGINT($temparea;$count)If ([Inspections]Insp Type="TOV")GOTO SELECTED RECORD([ElementsSafety];$ElementPosition_l)LOAD RECORD([ElementsSafety])If (BLOB size([ElementsSafety]ElmComments)>0)$temparea:=WR New offscreen area WR INSERT STYLED TEXT ($temparea;[ElementsSafety]ElmComments)WR EXECUTE COMMAND ($temparea;wr cmd select all )$count:=WR Count ($temparea;wr nb characters )If ($count<$ReturnLengthLimit_L)$vRemptr->:=WR Get selected text ($temparea)Else $vRemptr->:="See remarks in comments section."End if WR DELETE OFFSCREEN AREA ($temparea)Else $vRemptr->:=""End if End if Else If ($ElementDictPos_l>0)$VTptr->:=$ElementNumberLabels_atxt{$Loop_l}+" "+◊ELMTDICT_Txt_as{$ElementDictPos_l}Else $VTptr->:=""End if $VDptr->:="-"$VRptr->:="N"$VrDptr->:="N"If ([Inspections]Insp Type="TOV")$vRemptr->:=""End if End if If (Position("BLANK";$VTptr->)>0)$VTptr->:=$ElementNumberLabels_atxt{$Loop_l}$VDptr->:=""$VRptr->:=""$VrDptr->:=""If ([Inspections]Insp Type="TOV")$vRemptr->:=""End if End if End for Until ($Offset_L>=$MaxOffset_L)CLEAR SET("$MySet")  `End insp_LoadESForReport