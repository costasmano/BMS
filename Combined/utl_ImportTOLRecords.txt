  `Method: utl_ImportTOLRecords  `Description  `  ` Parameters  ` ----------------------------------------------------If (False)  `----------------------------------------------------  `User name (OS): Charles Miller  `Date and time: 05/23/13, 16:42:14  `----------------------------------------------------Mods_2013_05   `r003 `   `Modified by: Charles Miller (5/23/13 16:42:39)  ` Modified by: Costas Manousakis-(Designer)-(8/23/13 14:40:48)Mods_2013_08   `  `if list is a new list - add the records and increase the local key sequence ;   `  `added transaction and option to cancel the import of a list  if some entries in the import file do not matchEnd if vsForward:=◊ForwardC_TEXT($FilePath_txt;$Value_txt;$Sequence_txt;$ListName_txt;$Path_txt)C_LONGINT($Loop_l;$InnerLoop_L)$Path_txt:=Select folder("Select import path for [TableOfLists]")ARRAY TEXT($FileNames_atxt;0)DOCUMENT LIST($Path_txt;$FileNames_atxt)C_BOOLEAN($Complete_b)C_TIME($Doc_tm)C_LONGINT($Offset_L;$ImportedLists_L)ARRAY POINTER(ptr_Changes;0;0)$ImportedLists_L:=0C_BLOB($Blob_blb)For ($Loop_l;1;Size of array($FileNames_atxt))$ListName_txt:=Replace string($FileNames_atxt{$Loop_l};".txt";"")$FilePath_txt:=$FileNames_atxt{$Loop_l}If ($FilePath_txt≤1≥=".")Else SET BLOB SIZE($Blob_blb;0)$Offset_L:=0ARRAY LONGINT($ListKeys_al;0)ARRAY LONGINT($ListSequence_al;0)ARRAY TEXT($ListValue_atxt;0)DOCUMENT TO BLOB($Path_txt+$FileNames_atxt{$Loop_l};$Blob_blb)BLOB TO VARIABLE($Blob_blb;$ListKeys_al;$Offset_L)BLOB TO VARIABLE($Blob_blb;$ListSequence_al;$Offset_L)BLOB TO VARIABLE($Blob_blb;$ListValue_atxt;$Offset_L)C_BOOLEAN($NewList_b;$UpdateList_b;$CompleteUpdate_b)$NewList_b:=False$UpdateList_b:=FalseQUERY([TableOfLists];[TableOfLists]ListName_s=$ListName_txt)If (Records in selection([TableOfLists])=0)  `New List - keys will be ignoredCONFIRM("ListName "+$ListName_txt+" not found! New entries will be created ignoring keys in export file!";"Proceed";"Cancel import")$NewList_b:=(OK=1)Else CONFIRM("ListName "+$ListName_txt+" will be updated! Keys in export file will be used for update; If key is not found a new key will be generated!";"Proceed";"Cancel import")$UpdateList_b:=(OK=1)End if If ($NewList_b | $UpdateList_b)$CompleteUpdate_b:=TrueSTART TRANSACTIONFor ($InnerLoop_L;1;Size of array($ListKeys_al))InitChangeStack (1)If ($NewList_b)CREATE RECORD([TableOfLists])Inc_Sequence ("TableOfLists";->[TableOfLists]ListKeyID_L)[TableOfLists]ListName_s:=$ListName_txtLogNewRecord (->[TableOfLists]ListKeyID_L;->[TableOfLists]ListKeyID_L;->[TableOfLists]ListKeyID_L;0;"TableOfLists")[TableOfLists]ListSequence_l:=$ListSequence_al{$InnerLoop_L}[TableOfLists]ListValue_s:=$ListValue_atxt{$InnerLoop_L}PushChange (1;->[TableOfLists]ListName_s)PushChange (1;->[TableOfLists]ListSequence_l)PushChange (1;->[TableOfLists]ListValue_s)FlushGrpChgs (1;->[TableOfLists]ListKeyID_L;->[TableOfLists]ListKeyID_L;->[TableOfLists]ListKeyID_L;0)SAVE RECORD([TableOfLists])Else QUERY([TableOfLists];[TableOfLists]ListKeyID_L=$ListKeys_al{$InnerLoop_L})If (Records in selection([TableOfLists])=0)CREATE RECORD([TableOfLists])Inc_Sequence ("TableOfLists";->[TableOfLists]ListKeyID_L)[TableOfLists]ListName_s:=$ListName_txtLogNewRecord (->[TableOfLists]ListKeyID_L;->[TableOfLists]ListKeyID_L;->[TableOfLists]ListKeyID_L;0;"TableOfLists")[TableOfLists]ListSequence_l:=$ListSequence_al{$InnerLoop_L}[TableOfLists]ListValue_s:=$ListValue_atxt{$InnerLoop_L}PushChange (1;->[TableOfLists]ListName_s)PushChange (1;->[TableOfLists]ListSequence_l)PushChange (1;->[TableOfLists]ListValue_s)FlushGrpChgs (1;->[TableOfLists]ListKeyID_L;->[TableOfLists]ListKeyID_L;->[TableOfLists]ListKeyID_L;0)SAVE RECORD([TableOfLists])Else If (ut_LoadRecord (->[TableOfLists]))If ([TableOfLists]ListName_s#$ListName_txt)CONFIRM("Import key "+String($ListKeys_al{$InnerLoop_L})+" for list "+$ListName_txt+" [value='"+$ListValue_atxt{$InnerLoop_L}+"'] is part of local list "+[TableOfLists]ListName_s;"Ignore this key";"Abort list import")  `ALERT("You are trying to change from [TableOfLists]ListName_s "+[TableOfLists]ListName_s+" to $ListName_txt "+$ListName_txt)If (OK#1)$CompleteUpdate_b:=False$InnerLoop_L:=Size of array($ListKeys_al)+1End if Else C_BOOLEAN($Flush_b)$Flush_b:=FalseIf ([TableOfLists]ListSequence_l#$ListSequence_al{$InnerLoop_L})[TableOfLists]ListSequence_l:=$ListSequence_al{$InnerLoop_L}PushChange (1;->[TableOfLists]ListSequence_l)$Flush_b:=TrueEnd if If ([TableOfLists]ListValue_s#$ListValue_atxt{$InnerLoop_L})[TableOfLists]ListValue_s:=$ListValue_atxt{$InnerLoop_L}PushChange (1;->[TableOfLists]ListValue_s)$Flush_b:=TrueEnd if If ($Flush_b)SAVE RECORD([TableOfLists])FlushGrpChgs (1;->[TableOfLists]ListKeyID_L;->[TableOfLists]ListKeyID_L;->[TableOfLists]ListKeyID_L;0)End if End if End if UNLOAD RECORD([TableOfLists])End if End if End for If ($CompleteUpdate_b)VALIDATE TRANSACTION$ImportedLists_L:=$ImportedLists_L+1Else CANCEL TRANSACTIONEnd if End if End if End for ALERT("Import Completed! : "+String($ImportedLists_L)+" lists imported!")  `End utl_ImportTOLRecords