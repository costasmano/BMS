  `Method: ut_VersionCheck  `Description  `  ` Compare current db version ($CheckVersion_txt) with an input value ($targetVers_txt)  `  ` Versions are in form NN.NN.NN.A  `  `  ` where NN any number  `  `  ` A any letter  ` Parameters  ` $0 : $check_L (-1 : less than ; 0 : equal ; 1 : greater)  ` $1 : $targetVers_txt  ` $2 : $CheckVersion_txt (Optional)  ` ----------------------------------------------------If (False)  ` ----------------------------------------------------  `User name (OS): Costas Manousakis  `User (4D) : Designer  `Date and time: 02/15/14, 11:28:02  ` ----------------------------------------------------  `Created : Mods_2014_02End if   `C_LONGINT($0)C_TEXT($1)C_LONGINT($check_L)C_TEXT($targetVers_txt;$CheckVersion_txt)$targetVers_txt:=$1$CheckVersion_txt:=◊VersionIf (Count parameters>1)C_TEXT($2)$CheckVersion_txt:=$2End if C_BOOLEAN($DateInVer_b)C_LONGINT($pos_L;$Len_L)$DateInVer_b:=Match regex("[0-9]+-[a-zA-Z]{3}-[0-9]{2,4}";$targetVers_txt;1;$pos_L;$Len_L)If ($DateInVer_b)If ($pos_L>1)$targetVers_txt:=Substring($targetVers_txt;1;$pos_L-1)Else $targetVers_txt:=Substring($targetVers_txt;($Len_L+1))End if End if $DateInVer_b:=Match regex("[0-9]+-[a-zA-Z]{3}-[0-9]{2,4}";$CheckVersion_txt;1;$pos_L;$Len_L)If ($DateInVer_b)If ($pos_L>1)$CheckVersion_txt:=Substring($CheckVersion_txt;1;$pos_L-1)Else $targetVers_txt:=Substring($CheckVersion_txt;($Len_L+1))End if End if ARRAY TEXT($Targetparts_atxt;0)ARRAY TEXT($CheckParts_atxt;0)ut_ParseVersionString ($targetVers_txt;->$Targetparts_atxt)ut_ParseVersionString ($CheckVersion_txt;->$CheckParts_atxt)$check_L:=0  `assume equalC_LONGINT($loop_L;$CheckParts_L;$TargetParts_L)C_TEXT($CheckPart_txt;$TargetPart_txt)$CheckParts_L:=Size of array($CheckParts_atxt)$TargetParts_L:=Size of array($Targetparts_atxt)For ($loop_L;1;$CheckParts_L)If ($loop_L>$TargetParts_L)$check_L:=1  `if we have reached more parts than target then it is greater$loop_L:=$CheckParts_L+1Else $CheckPart_txt:=$CheckParts_atxt{$loop_L}$TargetPart_txt:=$Targetparts_atxt{$loop_L}$check_L:=ut_CompareParts_L ($CheckPart_txt;$TargetPart_txt)Case of : ($check_L=1)$loop_L:=$CheckParts_L+1: ($check_L=-1)$loop_L:=$CheckParts_L+1End case End if End for $0:=$check_L  `End ut_VersionCheck