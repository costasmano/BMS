If (False)  `Project Method G_SecureInspection  `Apply Locks to the current Inspection.  `Called from inside the particular inspection Form Method on Load  ` Modified by: costasmanousakis-(Designer)-(12/4/07 16:37:22)Mods_2007_CM_5401   ` Modified by: costasmanousakis-(Designer)-(11/18/09 12:20:23)Mods_2009_11   `Added Alerts when entering in readonly mode incomplete/not approved inspections  ` Modified by: costasmanousakis-(Designer)-(12/3/09 14:35:32)Mods_2009_12   `Changed checking for Designer to checking for "Design Access Group"  ` Modified by: costasmanousakis-(Designer)-(4/28/10 10:00:15)Mods_2010_04   `use var ◊CurrentUser_PID to check if current user is in the Team Leader/Member DBIE list  ` Modified by: costasmanousakis-(Designer)-(10/26/11 14:51:22)Mods_2011_10   `  `use ◊CurrentUser_Name  ` Modified by: Costas Manousakis-(Designer)-(1/16/13 13:53:07)Mods_2013_01   `  `Added the field trip tables to the RO list  ` Modified by: Costas Manousakis-(Designer)-(5/24/13 15:58:52)Mods_2013_05   `  `Added [TunnelInspection] to the RO list  ` Modified by: Costas Manousakis-(Designer)-(10/22/13 11:54:11)Mods_2013_10   `  `Added initializing of INSP_PageCountDone_b to false hereEnd if   `Process flag to indicate to the forms whether   `the inspection should be locked or notC_BOOLEAN(vbInspectionLocked;INSP_PageCountDone_b)C_TEXT($currUser_txt)$currUser_txt:=◊CurrentUser_Name  `definitely lock it for most cases        vbInspectionLocked:=TrueINSP_PageCountDone_b:=FalseSET ENTERABLE([Inspections]InspApprCmts;False)SET ENTERABLE([Inspections]InspRevCmts;False)C_INTEGER($NumInspectors;$k;$j;$l)$NumInspectors:=Records in selection([Field Trip])+2  `Plus two for team leader and DBIEARRAY INTEGER($aInspectorIDs;0)ARRAY STRING(40;$aInspUsers;$NumInspectors)C_STRING(40;$vsUFname;$vsULname)If ($NumInspectors>0)SELECTION TO ARRAY([Field Trip]Person ID;$aInspectorIDs)INSERT IN ARRAY($aInspectorIDs;$NumInspectors;2)$aInspectorIDs{($NumInspectors-1)}:=[Inspections]DBrInspEngr$aInspectorIDs{$NumInspectors}:=[Inspections]TeamLeaderFor ($k;1;$NumInspectors)$j:=Find in array(aPeople_ID;$aInspectorIDs{$k})If ($j>0)$l:=Position(" ";aPeople{$j})$vsUFname:=Substring(aPeople{$j};1;$l)$vsULname:=Substring(aPeople{$j};($l+1))$l:=Position(" ";$vsULname)If ($l>0)$vsULname:=Substring($vsULname;($l+1))End if $vsUFname:=$vsUFname+$vsULnameIf (f_GetUserID ($vsUFname)#0)$aInspUsers{$k}:=$vsUFnameEnd if End if End for End if C_BOOLEAN($vbTeamMember)$vbTeamMember:=(Find in array($aInspUsers;$currUser_txt)>0)$vbTeamMember:=$vbTeamMember | (Find in array($aInspectorIDs;◊CurrentUser_PID)>0)If (False)$vbTeamMember:=$vbTeamMember | (User in group($currUser_txt;"Area Engineers"))End if   `Check status of inspectionCase of : (([Inspections]Modified By=$currUser_txt) | ($vbTeamMember))  `the creator or a member of the team is opening it and ...If ([Inspections]Insp Type="DV@")  `Dive InspectionsIf (([Inspections]InspApproved#BMS Approved ) | (Not([Inspections]InspComplete)))  ` it has not been approved yet   `   or it has been marked as incomplete.vbInspectionLocked:=FalseEnd if Else   `Others      If ((([Inspections]InspApproved#BMS Approved ) & ([Inspections]InspReviewed#BMS Approved )) | (Not([Inspections]InspComplete)))  ` it has not been approved yet at any level  `   or it has been marked as incomplete.vbInspectionLocked:=FalseEnd if End if : ((vApproveLvl=2) & ([Inspections]InspReviewed=BMS Approved ))  `Final approver(sic) and has been dbie approved.SET ENTERABLE([Inspections]InspApprCmts;True): ([Inspections]Insp Type="DV@")  `for dive forms only there is no Review stage. If ((vApproveLvl=2) & ([Inspections]InspComplete))SET ENTERABLE([Inspections]InspApprCmts;True)End if : ((vApproveLvl=1) & ([Inspections]InspComplete))  `DBIE reviewer and is completeSET ENTERABLE([Inspections]InspRevCmts;True)End case   `For general debugging/fixing purpose - allow Design Access Group option to override checks If (User in group($CurrUser_txt;"Design Access Group"))If (vbInspectionLocked)CONFIRM("Do you "+$CurrUser_txt+" want to edit the inspection?")If (OK=1)vbInspectionLocked:=FalseEnd if End if If (vApproveLvl=2)CONFIRM("Do you "+$CurrUser_txt+" want to edit the Final Approval Comments?")If (OK=1)SET ENTERABLE([Inspections]InspApprCmts;True)End if End if If (vApproveLvl=1)CONFIRM("Do you "+$CurrUser_txt+" want to edit the DBIE Review Comments?")If (OK=1)SET ENTERABLE([Inspections]InspRevCmts;True)End if End if End if If (vbInspectionLocked)  `Mods_2007_CM_5401If (Not(User in group($CurrUser_txt;"Design Access Group")))If (Not(User in group($currUser_txt;"MHDInspectionRWAccess")))C_TEXT($msg_txt)$msg_txt:=""Case of : (Not([Inspections]InspComplete))If ([Inspections]InspApproved+[Inspections]InspReviewed=0)$msg_txt:="incomplete Inspection!"Else $msg_txt:="Inspection rejected during the approval process!"End if : ([Inspections]InspApproved#BMS Approved )If ([Inspections]Insp Type#"FRZ")  `Freeze thaw don't need final approval$msg_txt:="Inspection that does not have final approval!"Else If ([Inspections]InspReviewed#BMS Approved )$msg_txt:="Inspection that does not have final approval!"End if End if End case If ($msg_txt#"")$msg_txt:="Please be aware that  you are opening an "+$msg_txt+" The information might be incomplete and/or inaccurate!"ALERT($msg_txt)End if End if End if READ ONLY([Inspections])READ ONLY([Combined Inspections])READ ONLY([BMS Inspections])READ ONLY([ElementsSafety])READ ONLY([Standard Photos])READ ONLY([Cond Units])READ ONLY([Field Trip])READ ONLY([BMS Field Trip])READ ONLY([TunnelInspection])SET AUTOMATIC RELATIONS(False;False)UNLOAD RECORD([Inspections])LOAD RECORD([Inspections])  `For these tables unload and reload only if there is a loaded record already.If (Is record loaded([Combined Inspections]))UNLOAD RECORD([Combined Inspections])LOAD RECORD([Combined Inspections])End if If (Is record loaded([BMS Inspections]))UNLOAD RECORD([BMS Inspections])LOAD RECORD([BMS Inspections])End if If (Is record loaded([TunnelInspection]))UNLOAD RECORD([TunnelInspection])LOAD RECORD([TunnelInspection])End if UNLOAD RECORD([ElementsSafety])UNLOAD RECORD([Standard Photos])UNLOAD RECORD([Cond Units])UNLOAD RECORD([Field Trip])UNLOAD RECORD([BMS Field Trip])  `SET AUTOMATIC RELATIONS(True;True)End if 