  `Method: SIA_ControlDoubleClick  `Description  ` Handles double-click events on the listboxes on various pages in the Bridge Input form  `  ` Parameters  ` ----------------------------------------------------If (False)  `----------------------------------------------------  `User name (OS): Charles Miller  `Date and time: 02/23/12, 13:37:29  `----------------------------------------------------Mods_2012_02   `r003  `Modified by: Charles Miller (2/23/12 13:37:30)Mods_2012_03   `r003 `Add code to use list box for Inventory button on   `Modified by: Charles Miller (3/29/12 14:14:36)  ` Modified by: Costas Manousakis-(Designer)-(5/3/12 09:15:54)Mods_2012_05   `  `Moved SIA_ReleaseBridgeRec at the end to apply to all cases;  `  `Changed sort order of Bridge design to descending (<)  `  `Added vApproveLvl - Cannot approve inspections from this point of entry.  `  `Use INSP_UpdateInspList to re load the list of inspections  ` Modified by: Costas Manousakis-(Designer)-(5/18/12 10:06:37)Mods_2012_05   `  `Added var $SortOrder_txt; fixed bug in the [RatingReports]  ` Modified by: Costas Manousakis-(Designer)-(6/8/12 15:00:47)Mods_2012_06   `  `Had to hard code the Sort Order; $SortOrder_txt was not an acceptable argument type   ` Modified by: Costas Manousakis-(Designer)-(1/2/13 12:58:34)Mods_2013_01   `  `Added call to ut_Read_Write_Tables ("WRITE";.. to set tables to RW before opening  ` Modified by: Costas Manousakis-(Designer)-(4/16/13 11:44:39)Mods_2013_04   `Tunnels Page 11  ` Modified by: Costas Manousakis-(Designer)-(5/22/13 16:36:57)Mods_2013_05   `  `replaced ut_Read_Write_Tables with  INSP_Read_Write_TablesMods_2013_05   ```` *** BUG FIX *****  `  `Set name of listbox changed to LBSetBrgInsp for bridge inspections, LBSetTunnelInsp for Tunnel inspectionsEnd if C_TEXT($FormName_txt;$LbName_txt)C_POINTER($Table_ptr;$BInFld_ptr;$SortFld_ptr)C_LONGINT($column_l;$row_l)C_STRING(1;$SortOrder_txt)Case of : (Current form page=2)  `[Cons Inspection]$FormName_txt:="Cslt Insp In"$Table_ptr:=->[Cons Inspection]$BInFld_ptr:=->[Cons Inspection]BIN$SortFld_ptr:=->[Cons Inspection]InspMonth$SortOrder_txt:="<"$LbName_txt:="ConsutantInspections"INPUT FORM($Table_ptr->;$FormName_txt)GET LISTBOX CELL POSITION(*;$LbName_txt;$column_l;$row_l)If ($row_l<1) | ($row_l>Records in selection($Table_ptr->))Else GOTO SELECTED RECORD($Table_ptr->;$row_l)If (Read only state($Table_ptr->))LOAD RECORD($Table_ptr->)DIALOG($Table_ptr->;$FormName_txt)Else $row_l:=ut_LoadRecordInteractiveV2 ($Table_ptr)Case of : ($row_l=1)MODIFY RECORD($Table_ptr->): ($row_l=2)READ ONLY($Table_ptr->)DIALOG($Table_ptr->;$FormName_txt)End case End if QUERY($Table_ptr->;$BInFld_ptr->=[Bridge MHD NBIS]BIN)ORDER BY($Table_ptr->;$SortFld_ptr->;<)UNLOAD RECORD($Table_ptr->)End if : (Current form page=3)  `[Conslt Rating]$FormName_txt:="Cslt Rating In"$Table_ptr:=->[Conslt Rating]$BInFld_ptr:=->[Conslt Rating]BIN$SortFld_ptr:=->[Conslt Rating]ReportDate$SortOrder_txt:="<"$LbName_txt:="ConsutantRatings"INPUT FORM($Table_ptr->;$FormName_txt)GET LISTBOX CELL POSITION(*;$LbName_txt;$column_l;$row_l)If ($row_l<1) | ($row_l>Records in selection($Table_ptr->))Else GOTO SELECTED RECORD($Table_ptr->;$row_l)If (Read only state($Table_ptr->))LOAD RECORD($Table_ptr->)DIALOG($Table_ptr->;$FormName_txt)Else $row_l:=ut_LoadRecordInteractiveV2 ($Table_ptr)Case of : ($row_l=1)MODIFY RECORD($Table_ptr->): ($row_l=2)READ ONLY($Table_ptr->)DIALOG($Table_ptr->;$FormName_txt)End case End if QUERY($Table_ptr->;$BInFld_ptr->=[Bridge MHD NBIS]BIN)ORDER BY($Table_ptr->;$SortFld_ptr->;<)UNLOAD RECORD($Table_ptr->)End if : (Current form page=4)  `[RatingReports]$Table_ptr:=->[RatingReports]$FormName_txt:="RatReportsIn"$BInFld_ptr:=->[RatingReports]BIN$SortFld_ptr:=->[RatingReports]ReportDate$LbName_txt:="RatingReports"$SortOrder_txt:="<"INPUT FORM($Table_ptr->;$FormName_txt)GET LISTBOX CELL POSITION(*;$LbName_txt;$column_l;$row_l)If ($row_l<1) | ($row_l>Records in selection($Table_ptr->))Else GOTO SELECTED RECORD($Table_ptr->;$row_l)If (Read only state($Table_ptr->))LOAD RECORD($Table_ptr->)DIALOG($Table_ptr->;$FormName_txt)Else $row_l:=ut_LoadRecordInteractiveV2 ($Table_ptr)Case of : ($row_l=1)MODIFY RECORD($Table_ptr->): ($row_l=2)READ ONLY($Table_ptr->)DIALOG($Table_ptr->;$FormName_txt)End case End if QUERY($Table_ptr->;$BInFld_ptr->=[Bridge MHD NBIS]BIN)ORDER BY($Table_ptr->;$SortFld_ptr->;<)UNLOAD RECORD($Table_ptr->)LB_Header1_l:=2End if : (Current form page=5)  `[NBIS Secondary]$FormName_txt:="2nd In"$Table_ptr:=->[NBIS Secondary]$BInFld_ptr:=->[NBIS Secondary]BIN$SortFld_ptr:=->[NBIS Secondary]Item5$SortOrder_txt:=">"$LbName_txt:="Secondary"INPUT FORM($Table_ptr->;$FormName_txt)GET LISTBOX CELL POSITION(*;$LbName_txt;$column_l;$row_l)If ($row_l<1) | ($row_l>Records in selection($Table_ptr->))Else GOTO SELECTED RECORD($Table_ptr->;$row_l)If (Read only state($Table_ptr->))LOAD RECORD($Table_ptr->)DIALOG($Table_ptr->;$FormName_txt)Else $row_l:=ut_LoadRecordInteractiveV2 ($Table_ptr)Case of : ($row_l=1)MODIFY RECORD($Table_ptr->): ($row_l=2)READ ONLY($Table_ptr->)DIALOG($Table_ptr->;$FormName_txt)End case End if QUERY($Table_ptr->;$BInFld_ptr->=[Bridge MHD NBIS]BIN)ORDER BY($Table_ptr->;$SortFld_ptr->;>)UNLOAD RECORD($Table_ptr->)End if LB_Header2_l:=1: (Current form page=6)  `[Bridge Design]$FormName_txt:="Bridge Design In"$Table_ptr:=->[Bridge Design]$BInFld_ptr:=->[Bridge Design]BIN$SortFld_ptr:=->[Bridge Design]ADVDate$SortOrder_txt:="<"$LbName_txt:="BridgeDesign"INPUT FORM($Table_ptr->;$FormName_txt)GET LISTBOX CELL POSITION(*;$LbName_txt;$column_l;$row_l)If ($row_l<1) | ($row_l>Records in selection($Table_ptr->))Else GOTO SELECTED RECORD($Table_ptr->;$row_l)If (Read only state($Table_ptr->))LOAD RECORD($Table_ptr->)DIALOG($Table_ptr->;$FormName_txt)Else $row_l:=ut_LoadRecordInteractiveV2 ($Table_ptr)Case of : ($row_l=1)MODIFY RECORD($Table_ptr->): ($row_l=2)READ ONLY($Table_ptr->)DIALOG($Table_ptr->;$FormName_txt)End case End if QUERY($Table_ptr->;$BInFld_ptr->=[Bridge MHD NBIS]BIN)ORDER BY($Table_ptr->;$SortFld_ptr->;<)UNLOAD RECORD($Table_ptr->)End if : (Current form page=7)  `[Combined Inspections]INSP_Read_Write_Tables ("WRITE")C_INTEGER(vApproveLvl)vApproveLvl:=0  `Cannot approve inspections from this point of entry.GET LISTBOX CELL POSITION(*;"Inspections";$column_l;$row_l)If ($row_l<1) | ($row_l>Records in selection([Combined Inspections]))Else GOTO SELECTED RECORD([Combined Inspections];$row_l)C_LONGINT($SelectedRecord_l)$SelectedRecord_l:=$row_l$row_l:=ut_LoadRecordInteractiveV2 (->[Combined Inspections])COPY SET("LBSetBrgInsp";"MySet")  `LOAD RECORD([Conslt Rating])SET CURSOR(4)RELATE ONE([Combined Inspections]NBISInspID)RELATE ONE([Combined Inspections]BMSInspID)C_LONGINT(vCurrentPontisID_L;vCurrentCombID_L)C_BOOLEAN(vAllRelationsOK_B)vCurrentPontisID_L:=[BMS Inspections]Inspection IDvCurrentCombID_L:=[Combined Inspections]IDvAllRelationsOK_B:=TrueIf ([Combined Inspections]BMSInspID>0)If (vCurrentPontisID_L#[Combined Inspections]BMSInspID)vAllRelationsOK_B:=FalseEnd if If ([BMS Inspections]BIN#[Combined Inspections]BIN)vAllRelationsOK_B:=FalseEnd if End if If (vAllRelationsOK_B)Case of : (Read only state([Combined Inspections]))READ ONLY([Combined Inspections])DIALOG([Inspections];"BlankCombinedStarter"): ($row_l=1)INPUT FORM([Inspections];"BlankCombinedStarter")MODIFY RECORD([Inspections]): ($row_l=2)READ ONLY([Combined Inspections])DIALOG([Inspections];"BlankCombinedStarter")Else End case If (In transaction)CANCEL TRANSACTIONEnd if   `added to clear locks on [activity log] tableIf (Is record loaded([Activity Log]))UNLOAD RECORD([Activity Log])End if G_CloseAllTables (->[Bridge MHD NBIS])  `close all tables except the main one.INSP_UpdateInspList COPY SET("MySet";"LBSetBrgInsp")HIGHLIGHT RECORDS([Combined Inspections];"LBSetBrgInsp")CLEAR SET("MySet")Else ALERT("There are database link problems with this inspection record!! Record cannot be l"+"oaded!!")End if End if : (Current form page=8)  `[InventoryPhotoInsp]GET LISTBOX CELL POSITION(*;"InventoryPhotos";$column_l;$row_l)If ($row_l<1) | ($row_l>Records in selection([InventoryPhotoInsp]))Else INPUT FORM([InventoryPhotoInsp];"Input")START TRANSACTIONGOTO SELECTED RECORD([InventoryPhotoInsp];$row_l)If (ut_LoadRecordInteractive (->[InventoryPhotoInsp]))MODIFY RECORD([InventoryPhotoInsp])UNLOAD RECORD([InventoryPhotoInsp])UNLOAD RECORD([InventoryPhotos])INV_GetBINInventoryPhotos ([Bridge MHD NBIS]BIN)End if End if : (Current form page=11)  `TunnelsINSP_Read_Write_Tables ("WRITE")C_INTEGER(vApproveLvl)vApproveLvl:=0  `Cannot approve inspections from this point of entry.GET LISTBOX CELL POSITION(*;"TunnelInspections";$column_l;$row_l)If ($row_l<1) | ($row_l>Records in selection([Combined Inspections]))Else GOTO SELECTED RECORD([Combined Inspections];$row_l)C_LONGINT($SelectedRecord_l)$SelectedRecord_l:=$row_l$row_l:=ut_LoadRecordInteractiveV2 (->[Combined Inspections])COPY SET("LBSetTunnelInsp";"MySet")  `LOAD RECORD([Conslt Rating])SET CURSOR(4)RELATE ONE([Combined Inspections]NBISInspID)RELATE ONE([Combined Inspections]BMSInspID)C_LONGINT(vCurrentPontisID_L;vCurrentCombID_L)C_BOOLEAN(vAllRelationsOK_B)vCurrentPontisID_L:=[BMS Inspections]Inspection IDvCurrentCombID_L:=[Combined Inspections]IDvAllRelationsOK_B:=TrueIf ([Combined Inspections]BMSInspID>0)If (vCurrentPontisID_L#[Combined Inspections]BMSInspID)vAllRelationsOK_B:=FalseEnd if If ([BMS Inspections]BIN#[Combined Inspections]BIN)vAllRelationsOK_B:=FalseEnd if End if If (vAllRelationsOK_B)Case of : (Read only state([Combined Inspections]))READ ONLY([Combined Inspections])DIALOG([Inspections];"BlankCombinedStarter"): ($row_l=1)INPUT FORM([Inspections];"BlankCombinedStarter")MODIFY RECORD([Inspections]): ($row_l=2)READ ONLY([Combined Inspections])DIALOG([Inspections];"BlankCombinedStarter")Else End case If (In transaction)CANCEL TRANSACTIONEnd if   `added to clear locks on [activity log] tableIf (Is record loaded([Activity Log]))UNLOAD RECORD([Activity Log])End if G_CloseAllTables (->[Bridge MHD NBIS])  `close all tables except the main one.INSP_UpdateInspList COPY SET("MySet";"LBSetTunnelInsp")HIGHLIGHT RECORDS([Combined Inspections];"LBSetTunnelInsp")CLEAR SET("MySet")Else ALERT("There are database link problems with this inspection record!! Record cannot be l"+"oaded!!")End if End if : (Current form page=12)  `[RatingRequests]C_LONGINT($TaskRes_L)If (RtgReq_Edit_b )READ WRITE([RatingRequests])READ WRITE([AddtlRatingRequests])Else READ ONLY([RatingRequests])READ ONLY([AddtlRatingRequests])End if $TaskRes_L:=LB_Tasks ("DOUBLECLICK";"RtgReqIncl")QUERY([RatingRequests];[RatingRequests]BIN=[Bridge MHD NBIS]BIN)ORDER BY([RatingRequests];[RatingRequests]DateOfRequest_d;<)UNLOAD RECORD([RatingRequests])UNLOAD RECORD([AddtlRatingRequests])End case SIA_ReleaseBridgeRec   `End SIA_ControlDoubleClick