If (False)  `BMSExternal_Transfer Mods_2004_CM01 Mods_OPNToSQLUpgrade   `Ugrade to v11  `Modified by: Charles Miller (3/18/11 14:41:59)  ` Modified by: Costas Manousakis-(Designer)-(2/12/12 08:20:36)Mods_2012_02   `  `Don't spawn a process for ut_ControlDBSycnh; need to  capture end time at the ut_SetNextRunTimeStamp  ` Modified by: Costas Manousakis-(Designer)-(5/8/12 09:54:06)Mods_2012_05   `  `Added an email at the end. and a semaphore to make sure  two processes dont run on top of each other  ` Modified by: Costas Manousakis-(Designer)-(6/8/12 12:59:49)Mods_2012_06   `  `Use EXECUTE ON SERVER to call ut_SetNextRunTimeStamp to avoid locking of record on client.  ` Modified by: Costas Manousakis-(Designer)-(6/19/12 14:51:58)Mods_2012_06   `  `Added code to record a log the actions during the execution of this method  ` Modified by: Costas Manousakis-(Designer)-(12/4/13 10:23:42)Mods_2013_12   `  `added more tracking of the transfer  to be sent in the email at the endEnd if C_STRING(80;$pwd)C_INTEGER($msgoutput)$msgoutput:=3$pwd:="kaisaras"  `$Lpid:=LSpawnProcess ("ut_ControlDBSycnh";◊LStackSize;"Data Transfer";True;False;$msgoutput;$pwd)  `$Lpid:=New Process("ut_ControlDBSycnh";◊LStackSize;"Data Transfer";$msgoutput;$pwd)  `NewTellServer ($msgoutput;$pwd)  `messages to screen and fileC_TEXT($CTRLCLIENTLOGS_txt;$CurrLOGFile_txt)$CTRLCLIENTLOGS_txt:=◊MyDocumentsFolder_txt+"CTRLCLIENTLOGS"+◊PL_DirectorySep_sIf (Test path name($CTRLCLIENTLOGS_txt)=Is a directory )Else CREATE FOLDER($CTRLCLIENTLOGS_txt)End if $CurrLOGFile_txt:=$CTRLCLIENTLOGS_txt+"BMSEXTLOG_"+ut_CreateTimeStamp +".log"C_TIME($CurrLOGFileRef_t)$CurrLOGFileRef_t:=Create document($CurrLOGFile_txt;"TEXT")SEND PACKET($CurrLOGFileRef_t;String(Current date(*))+"_"+String(Current time(*))+" Checking Semaphore...."+Char(13))While (Semaphore("BMSEXTERNALTRANSFER"))SEND PACKET($CurrLOGFileRef_t;String(Current date(*))+"_"+String(Current time(*))+" Waiting 15 min for Semaphore...."+Char(13))DELAY PROCESS(Current process;(15*60*60))  `wait 15 minutesIDLEEnd while SEND PACKET($CurrLOGFileRef_t;String(Current date(*))+"_"+String(Current time(*))+" Reserved Semaphore...."+Char(13))C_TEXT($CurrProcName_txt)C_TEXT($StartTimeStamp_txt;$ProcName_txt)C_LONGINT($ProcState_L;$ProdTime_L;$ProcUniqID_L;$ProcOrig_L;$ProcessID)C_BOOLEAN($procViz_b)PROCESS PROPERTIES(Current process;$ProcName_txt;$ProcState_L;$ProdTime_L;$procViz_b;$ProcUniqID_L;$ProcOrig_L)$StartTimeStamp_txt:=ut_CreateTimeStamp SEND PACKET($CurrLOGFileRef_t;String(Current date(*))+"_"+String(Current time(*))+" Starting ut_ControlDBSycnh ...."+Char(13))Compiler_TransfLog ut_ControlDBSycnh ($msgoutput;$pwd)SEND PACKET($CurrLOGFileRef_t;String(Current date(*))+"_"+String(Current time(*))+" Clearing Semaphore...."+Char(13))SEND PACKET($CurrLOGFileRef_t;String(Current date(*))+"_"+String(Current time(*))+" Setting next run time stamp...."+Char(13))$ProcessID:=Execute on server("ut_SetNextRunTimeStamp";128*1024;"Set Next stamp";$ProcName_txt)CLEAR SEMAPHORE("BMSEXTERNALTRANSFER")SEND PACKET($CurrLOGFileRef_t;String(Current date(*))+"_"+String(Current time(*))+" Starting Email...."+Char(13))ut_ControlSendMail ("INIT")SEND PACKET($CurrLOGFileRef_t;String(Current date(*))+"_"+String(Current time(*))+"      Send SMTP "+◊pref_SMTP+"...."+Char(13))tFromEmailAddress:=ut_GetSysParameter ("EXT_Transf_Rpt_From";"costas.manousakis@dot.state.ma.us")SEND PACKET($CurrLOGFileRef_t;String(Current date(*))+"_"+String(Current time(*))+"      Send from "+tFromEmailAddress+"...."+Char(13))tToBuilt_txt:=ut_GetSysParameter ("EXT_Transf_Rpt_TO";"costas.manousakis@dot.state.ma.us")SEND PACKET($CurrLOGFileRef_t;String(Current date(*))+"_"+String(Current time(*))+"      Send to "+tToBuilt_txt+"...."+Char(13))tSubject:="BMS External Transfer report"tMailNote:="BMS External Transfer process name "+$ProcName_txt+", method "+Current method name+Char(13)tMailNote:=tMailNote+", started at "+ut_formatTimeStamp ($StartTimeStamp_txt)+", completed at "+ut_formatTimeStamp (ut_CreateTimeStamp )+Char(13)tMailNote:=tMailNote+"Start of upload :"+ut_formatTimeStamp (X_StartSend_txt)+Char(13)tMailNote:=tMailNote+"Number of records to be sent :"+String(X_NumActLogToBeSent_L)+Char(13)tMailNote:=tMailNote+"First RefID :"+String(X_ActLogToBeSentStart_L)+" - Last RefID :"+String(X_ActLogToBeSentEnd_L)+Char(13)tMailNote:=tMailNote+"Last RefID Sent :"+String(X_ActLogLastSent_L)+Char(13)tMailNote:=tMailNote+"End of upload :"+ut_formatTimeStamp (ut_ReturnTimeStampFromDate (vDUplFinishDate;vTUplFinishTime))+Char(13)tMailNote:=tMailNote+"Send Error :"+X_SendError_txt+Char(13)tMailNote:=tMailNote+"Start of download :"+ut_formatTimeStamp (X_StartRec_txt)+Char(13)tMailNote:=tMailNote+"Number of records to be received :"+String(X_NumActLogToBeRecd_L)+Char(13)tMailNote:=tMailNote+"First RefID :"+String(X_ActLogToBeRecdStart_L)+" - Last RefID :"+String(X_ActLogToBeRecdEnd_L)+Char(13)tMailNote:=tMailNote+"Last RefID received :"+String(X_ActLogLastRecd_L)+Char(13)tMailNote:=tMailNote+"End of download :"+ut_formatTimeStamp (X_EndRec_txt)+Char(13)tMailNote:=tMailNote+"Receive Error :"+X_RecdError_txt+Char(13)SEND PACKET($CurrLOGFileRef_t;String(Current date(*))+"_"+String(Current time(*))+"      Sending email ...."+Char(13))If (ut_ControlSendMail )SEND PACKET($CurrLOGFileRef_t;String(Current date(*))+"_"+String(Current time(*))+"      Email Sent  ...."+Char(13))Else SEND PACKET($CurrLOGFileRef_t;String(Current date(*))+"_"+String(Current time(*))+"      Error Sending Email  ...."+Char(13))End if   `SEND PACKET($CurrLOGFileRef_t;String(Current date(*))+"_"+String(Current time(*))+" Ending...."+Char(13))CLOSE DOCUMENT($CurrLOGFileRef_t)  `  `ut_SetNextRunTimeStamp ($ProcName_txt)