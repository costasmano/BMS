If (False)  `Form Method: [Bridge Design]Bridge Design In   `declare drop down arrays for compilingARRAY TEXT(cboProjectType;0)ARRAY TEXT(cboAbutment;0)ARRAY TEXT(cboPier;0)ARRAY TEXT(cboBearing;0)ARRAY TEXT(cboBarrier;0)ARRAY TEXT(cboScreenType;0)ARRAY TEXT(cboJoint;0)ARRAY TEXT(cboStageConstruct;0)ARRAY TEXT(cboPreEngr;0)ARRAY TEXT(cboSeismic;0)Mods_2004_CM12 Mods_2007_CM08   ` Modified by: costasmanousakis-(Designer)-(5/1/2007 08:30:53)Mods_2007_CM09   ` Modified by: costasmanousakis-(Designer)-(10/7/08 11:53:08)Mods_2008_CM_5404   ` ("ACCESS")  ` Modified by: costasmanousakis-(Designer)-(9/13/10 13:35:36)Mods_2010_09   `  `Added ProjectInfo Buttons  ` Modified by: Costas Manousakis-(Designer)-(5/2/12 16:15:27)Mods_2012_05   `  `Fixed logic in the on load event when new record: added assigning the BIN (not automatic anymore)  `  `Removed code using the vbNewRec variable.  `  `Removed code from the bCancel button  ` Modified by: Costas Manousakis-(Designer)-(6/21/13 09:32:58)Mods_2013_06   `  `Moved FlushGrpChgs (2;->[Bridge MHD NBIS]BIN before the save record([Bridge MHD NBIS])End if C_INTEGER(rdoEnglish)Case of : (Form event=On Load )C_BOOLEAN(◊LogBridgeDesign_b)◊LogBridgeDesign_b:=TrueInitChangeStack (1)  `Bridge Design changesInitChangeStack (2)  `[bridge  mhd nbis]changesC_TEXT($CurrentUser_txt)$CurrentUser_txt:=Current userCase of : ((User in group($CurrentUser_txt;"BridgeDataSheet")) & (Not(User in group($CurrentUser_txt;"ReadOnly"))))InitChangeStack (1)InitChangeStack (2)If (Is new record([Bridge Design]))[Bridge Design]BIN:=[Bridge MHD NBIS]BINInc_Sequence ("BrDesign";->[Bridge Design]BridgeDesignID)CONFIRM("Select English or Metric Unit";"English";"Metric")If (Ok=1)[Bridge Design]MetricUnit:=FalsePushChange (1;->[Bridge Design]MetricUnit)rdoEnglish:=1Else [Bridge Design]MetricUnit:=TruePushChange (1;->[Bridge Design]MetricUnit)rdoEnglish:=0End if End if Else If (Is new record([Bridge Design]))CANCELEnd if   `Lock Othersut_SetEnterable ("DE@";False)DISABLE BUTTON(*;"DE@")SET VISIBLE(vbDelete_BrgDes;False)End case RELATE MANY([Bridge Design])sItem54h:=0sItem54r:=0sItem54n:=0CBItem54:=0tItem55h:=0tItem55r:=0tItem55n:=0CBItem55:=0uItem56a:=0uItem56b:=0uItem56c:=0uItem56d:=0If ([Bridge Design]MetricUnit)metric_vLeft:=0metric_vRight:=0metric_vSpanLength:=0metric_vWidth:=0metric_vRadius:=0metric_vApproach:=0metric_vStructLength:=0metric_vWidthCurb:=0metric_vVertUnderclear:=0metric_vLatUnderclearRT:=0metric_vLatUnderclearLT:=0SET VISIBLE(*;"@eng_@";False)SET VISIBLE(*;"@metric_@";True)vCostPerArea:="Est. Cost per SQ Meter"vSWLeftLabel:="(50) Sidewalk Left"vSWRightLabel:="(50) Sidewalk Right "vTotalSpanLabel:="(48) Length of Max Span"vWidthLabel:="(52) Deck Width Out to Out "vRadiusLabel:="Radius/Curved Girder "vApproachLabel:="Approach Slab Volume"vWidthCurbLabel:="(51) Width Curb to Curb"  `Data are stored as decimal feet - convert to metric          metric_vLeft:=Round([Bridge Design]SidewalkLeft*0.3048;3)metric_vRight:=Round([Bridge Design]SidewalkRight*0.3048;3)metric_vSpanLength:=Round([Bridge Design]TotalSpanLength*0.3048;3)metric_vWidth:=Round([Bridge Design]WideOutToOut*0.3048;3)metric_vRadius:=Round([Bridge Design]RadiusCurvedGirder*0.3048;3)metric_vApproach:=Round([Bridge Design]ApproachSlabVolume*0.7645549;3)metric_vStructLength:=Round([Bridge Design]StructLength*0.3048;3)metric_vWidthCurb:=Round([Bridge Design]WidthCurbToCurb*0.3048;3)metric_vVertUnderclear:=Round([Bridge Design]MinVertUnderclear*0.3048;3)metric_vLatUnderclearRT:=Round([Bridge Design]MinLatUnderclearRT*0.3048;3)metric_vLatUnderclearLT:=Round([Bridge Design]MinLatUnderclearLT*0.3048;3)  `Unrestricted check box for Item 54If ([Bridge Design]MinVertUnderclear=99.9)CBItem54:=1End if   `Check box for Item 55If ([Bridge Design]MinLatUnderclearRT>30)CBItem55:=1End if   `radio buttons for Item 56Case of : ([Bridge Design]MinLatUnderclearLT=99.9)uItem56a:=1: ([Bridge Design]MinLatUnderclearLT=99.8)uItem56b:=1: ([Bridge Design]MinLatUnderclearLT=0)uItem56c:=1: (([Bridge Design]MinLatUnderclearLT<99.8) & ([Bridge Design]MinLatUnderclearLT>0))uItem56d:=1End case   ``````````````````       Else   ``````````````````                 eng_vLeft_ft:=0eng_vLeft_in:=0eng_vRight_ft:=0eng_vRight_in:=0eng_vSpan_ft:=0eng_vSpan_in:=0eng_vWidth_ft:=0eng_vWidth_in:=0eng_vRadius_ft:=0eng_vRadius_in:=0eng_vApproach:=0eng_vStructLength_ft:=0eng_vStructLength_in:=0eng_vWidthCurb_ft:=0eng_vWidthCurb_in:=0eng_vVertUnderclear_ft:=0eng_vVertUnderclear_in:=0eng_vLatUnderclearRT_ft:=0eng_vLatUnderclearRT_in:=0eng_vLatUnderclearLT_ft:=0eng_vLatUnderclearLT_in:=0  `Unrestricted check box for Item 54If ([Bridge Design]MinVertUnderclear=99.9)CBItem54:=1End if   `Check box for Item 55  `30 meters = 1180.8 inchesIf ([Bridge Design]MinLatUnderclearRT>1180.8)CBItem55:=1End if   `radio buttons for Item 56Case of : ([Bridge Design]MinLatUnderclearLT=99.9)uItem56a:=1: ([Bridge Design]MinLatUnderclearLT=99.8)uItem56b:=1: ([Bridge Design]MinLatUnderclearLT=0)uItem56c:=1: (([Bridge Design]MinLatUnderclearLT<99.8) & ([Bridge Design]MinLatUnderclearLT>0))uItem56d:=1End case SET VISIBLE(*;"@eng_@";True)SET VISIBLE(*;"@metric_@";False)vCostPerArea:="Est. Cost per SQ Feet"vSWLeftLabel:="(50) Sidewalk Left"vSWRightLabel:="(50) Sidewalk Right"vTotalSpanLabel:="(48) Length of Max Span"vWidthLabel:="(52) Deck Width Out to Out "vRadiusLabel:="Radius/Curved Girder"vApproachLabel:="Approach Slab Volume"vWidthCurbLabel:="(51) Width Curb to Curb"eng_vLeft_ft:=Int([Bridge Design]SidewalkLeft)eng_vLeft_in:=Round(Dec([Bridge Design]SidewalkLeft)*12;3)eng_vRight_ft:=Int([Bridge Design]SidewalkRight)eng_vRight_in:=Round(Dec([Bridge Design]SidewalkRight)*12;3)eng_vSpan_ft:=Int([Bridge Design]TotalSpanLength)eng_vSpan_in:=Round(Dec([Bridge Design]TotalSpanLength)*12;3)eng_vWidth_ft:=Int([Bridge Design]WideOutToOut)eng_vWidth_in:=Round(Dec([Bridge Design]WideOutToOut)*12;3)eng_vRadius_ft:=Int([Bridge Design]RadiusCurvedGirder)eng_vRadius_in:=Round(Dec([Bridge Design]RadiusCurvedGirder)*12;3)eng_vApproach:=[Bridge Design]ApproachSlabVolumeeng_vStructLength_ft:=Int([Bridge Design]StructLength)eng_vStructLength_in:=Round(Dec([Bridge Design]StructLength)*12;3)eng_vWidthCurb_ft:=Int([Bridge Design]WidthCurbToCurb)eng_vWidthCurb_in:=Round(Dec([Bridge Design]WidthCurbToCurb)*12;3)eng_vVertUnderclear_ft:=Int([Bridge Design]MinVertUnderclear)eng_vVertUnderclear_in:=Round(Dec([Bridge Design]MinVertUnderclear)*12;3)eng_vLatUnderclearRT_ft:=Int([Bridge Design]MinLatUnderclearRT)eng_vLatUnderclearRT_in:=Round(Dec([Bridge Design]MinLatUnderclearRT)*12;3)eng_vLatUnderclearLT_ft:=Int([Bridge Design]MinLatUnderclearLT)eng_vLatUnderclearLT_in:=Round(Dec([Bridge Design]MinLatUnderclearLT)*12;3)  ``````````````````              End if   ``````````````````             Case of : ([Bridge Design]MinVertUcCode="H")sItem54h:=1: ([Bridge Design]MinVertUcCode="R")sItem54r:=1: ([Bridge Design]MinVertUcCode="N")sItem54n:=1End case If ([Bridge Design]MinVertUnderclear=99.99)CBItem54:=1End if Case of : ([Bridge Design]MinLatUcCode="H")tItem55h:=1: ([Bridge Design]MinLatUcCode="R")tItem55r:=1: ([Bridge Design]MinLatUcCode="N")tItem55n:=1End case If ([Bridge Design]MinLatUnderclearRT=99.99)CBItem55:=1End if Case of : ([Bridge Design]MinLatUnderclearLT=99.9)uItem56a:=1: ([Bridge Design]MinLatUnderclearLT=99.8)uItem56b:=1: ([Bridge Design]MinLatUnderclearLT=0)uItem56c:=1Else uItem56d:=1End case : (Form event=On Validate )If ([Bridge MHD NBIS]Item8 BridgeCat="DES")FlushGrpChgs (2;->[Bridge MHD NBIS]BIN;->[Bridge MHD NBIS]BIN;->[Bridge MHD NBIS]BIN;0)SAVE RECORD([Bridge MHD NBIS])End if If (◊LogBridgeDesign_b)FlushGrpChgs (1;->[Bridge MHD NBIS]BIN;->[Bridge Design]BIN;->[Bridge Design]BridgeDesignID;1)End if End case 